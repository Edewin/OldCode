

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Wed Dec 25 15:32:06 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  000E                     	;# 
    36  000F                     	;# 
    37  0010                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0013                     	;# 
    41  0014                     	;# 
    42  0015                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  0081                     	;# 
    56  0085                     	;# 
    57  0086                     	;# 
    58  0087                     	;# 
    59  008C                     	;# 
    60  008D                     	;# 
    61  008E                     	;# 
    62  0091                     	;# 
    63  0092                     	;# 
    64  0093                     	;# 
    65  0094                     	;# 
    66  0098                     	;# 
    67  0099                     	;# 
    68  009C                     	;# 
    69  009D                     	;# 
    70  009E                     	;# 
    71  009F                     	;# 
    72  010C                     	;# 
    73  010D                     	;# 
    74  010E                     	;# 
    75  010F                     	;# 
    76  018C                     	;# 
    77  018D                     	;# 
    78                           
    79                           	psect	idataBANK0
    80  0571                     __pidataBANK0:	
    81                           
    82                           ;initializer for main@F1112
    83  0571  3445               	retlw	69
    84  0572  3444               	retlw	68
    85  0573  3455               	retlw	85
    86  0574  3441               	retlw	65
    87  0575  3452               	retlw	82
    88  0576  3444               	retlw	68
    89  0577  3431               	retlw	49
    90  0578  3439               	retlw	57
    91  0579  3439               	retlw	57
    92  057A  3430               	retlw	48
    93  057B  340A               	retlw	10
    94  057C  340D               	retlw	13
    95  057D  3400               	retlw	0
    96  057E  3400               	retlw	0
    97  057F  3400               	retlw	0
    98  0580  3400               	retlw	0
    99  0581  3400               	retlw	0
   100  0582  3400               	retlw	0
   101  0583  3400               	retlw	0
   102  0584  3400               	retlw	0
   103  0018                     _RCSTAbits	set	24
   104  0019                     _TXREG	set	25
   105  0064                     _TXIF	set	100
   106  0099                     _SPBRG	set	153
   107  0086                     _TRISB	set	134
   108  0087                     _TRISCbits	set	135
   109  0098                     _TXSTAbits	set	152
   110  0464                     _TXIE	set	1124
   111                           
   112                           ; #config settings
   113  0000                     
   114                           	psect	cinit
   115  07EB                     start_initialization:	
   116  07EB                     __initialization:	
   117                           
   118                           ; Clear objects allocated to BANK0
   119  07EB  01E3               	clrf	__pbssBANK0& (0+127)
   120  07EC  01E4               	clrf	(__pbssBANK0+1)& (0+127)
   121  07ED  01E5               	clrf	(__pbssBANK0+2)& (0+127)
   122  07EE  01E6               	clrf	(__pbssBANK0+3)& (0+127)
   123  07EF  01E7               	clrf	(__pbssBANK0+4)& (0+127)
   124                           
   125                           ; Initialize objects allocated to BANK0
   126  07F0  1383               	bcf	3,7	;select IRP bank0
   127  07F1  3063               	movlw	low (__pdataBANK0+20)
   128  07F2  00FD               	movwf	btemp+-1
   129  07F3  3005               	movlw	high __pidataBANK0
   130  07F4  00FE               	movwf	btemp
   131  07F5  3071               	movlw	low __pidataBANK0
   132  07F6  00FF               	movwf	btemp+1
   133  07F7  304F               	movlw	low __pdataBANK0
   134  07F8  0084               	movwf	4
   135  07F9  120A  118A  2564   	fcall	init_ram0
   136  07FC                     end_of_initialization:	
   137                           ;End of C runtime variable initialization code
   138                           
   139  07FC                     __end_of__initialization:	
   140  07FC  0183               	clrf	3
   141  07FD  120A  118A  2EF3   	ljmp	_main	;jump to C main() function
   142                           
   143                           	psect	bssBANK0
   144  0063                     __pbssBANK0:	
   145  0063                     _randx:	
   146  0063                     	ds	4
   147  0067                     _randf:	
   148  0067                     	ds	1
   149                           
   150                           	psect	dataBANK0
   151  004F                     __pdataBANK0:	
   152  004F                     main@F1112:	
   153  004F                     	ds	20
   154                           
   155                           	psect	inittext
   156  0560                     init_fetch0:	
   157                           ;	Called with low address in FSR and high address in W
   158                           
   159  0560  087E               	movf	126,w
   160  0561  008A               	movwf	10
   161  0562  087F               	movf	127,w
   162  0563  0082               	movwf	2
   163  0564                     init_ram0:	
   164                           ;Called with:
   165                           ;	high address of idata address in btemp 
   166                           ;	low address of idata address in btemp+1 
   167                           ;	low address of data in FSR
   168                           ;	high address + 1 of data in btemp-1
   169                           
   170  0564  2560  120A  118A   	fcall	init_fetch0
   171  0567  0080               	movwf	0
   172  0568  0A84               	incf	4,f
   173  0569  0804               	movf	4,w
   174  056A  067D               	xorwf	125,w
   175  056B  1903               	btfsc	3,2
   176  056C  3400               	retlw	0
   177  056D  0AFF               	incf	127,f
   178  056E  1903               	btfsc	3,2
   179  056F  0AFE               	incf	126,f
   180  0570  2D64               	goto	init_ram0
   181                           
   182                           	psect	cstackCOMMON
   183  0070                     __pcstackCOMMON:	
   184  0070                     ?_init_UART:	
   185  0070                     ??_init_UART:	
   186                           ; 0 bytes @ 0x0
   187                           
   188  0070                     ?_delay:	
   189                           ; 0 bytes @ 0x0
   190                           
   191  0070                     ??_delay:	
   192                           ; 0 bytes @ 0x0
   193                           
   194  0070                     ?_main:	
   195                           ; 0 bytes @ 0x0
   196                           
   197  0070                     ?_srand:	
   198                           ; 0 bytes @ 0x0
   199                           
   200  0070                     ?___lwdiv:	
   201                           ; 0 bytes @ 0x0
   202                           
   203  0070                     ?___lwmod:	
   204                           ; 2 bytes @ 0x0
   205                           
   206  0070                     ?___lmul:	
   207                           ; 2 bytes @ 0x0
   208                           
   209  0070                     delay@i:	
   210                           ; 4 bytes @ 0x0
   211                           
   212  0070                     ___lwdiv@divisor:	
   213                           ; 2 bytes @ 0x0
   214                           
   215  0070                     ___lwmod@divisor:	
   216                           ; 2 bytes @ 0x0
   217                           
   218  0070                     srand@x:	
   219                           ; 2 bytes @ 0x0
   220                           
   221  0070                     ___lmul@multiplier:	
   222                           ; 2 bytes @ 0x0
   223                           
   224                           
   225                           ; 4 bytes @ 0x0
   226  0070                     	ds	2
   227  0072                     ??_srand:	
   228  0072                     delay@j:	
   229                           ; 0 bytes @ 0x2
   230                           
   231  0072                     ___lwdiv@dividend:	
   232                           ; 2 bytes @ 0x2
   233                           
   234  0072                     ___lwmod@dividend:	
   235                           ; 2 bytes @ 0x2
   236                           
   237                           
   238                           ; 2 bytes @ 0x2
   239  0072                     	ds	2
   240  0074                     ??___lwdiv:	
   241  0074                     ??___lwmod:	
   242                           ; 0 bytes @ 0x4
   243                           
   244  0074                     ___lmul@multiplicand:	
   245                           ; 0 bytes @ 0x4
   246                           
   247                           
   248                           ; 4 bytes @ 0x4
   249  0074                     	ds	1
   250  0075                     ___lwmod@counter:	
   251  0075                     ___lwdiv@quotient:	
   252                           ; 1 bytes @ 0x5
   253                           
   254                           
   255                           ; 2 bytes @ 0x5
   256  0075                     	ds	2
   257  0077                     ___lwdiv@counter:	
   258                           
   259                           ; 1 bytes @ 0x7
   260  0077                     	ds	1
   261  0078                     ??___lmul:	
   262  0078                     ?_utoa:	
   263                           ; 0 bytes @ 0x8
   264                           
   265  0078                     utoa@val:	
   266                           ; 1 bytes @ 0x8
   267                           
   268                           
   269                           ; 2 bytes @ 0x8
   270  0078                     	ds	1
   271  0079                     ___lmul@product:	
   272                           
   273                           ; 4 bytes @ 0x9
   274  0079                     	ds	1
   275  007A                     utoa@base:	
   276                           
   277                           ; 2 bytes @ 0xA
   278  007A                     	ds	2
   279  007C                     ??_utoa:	
   280                           
   281                           ; 0 bytes @ 0xC
   282  007C                     	ds	1
   283  007D                     ??_itoa:	
   284                           
   285                           ; 0 bytes @ 0xD
   286  007D                     	ds	1
   287                           
   288                           	psect	cstackBANK0
   289  0020                     __pcstackBANK0:	
   290  0020                     ?_rand:	
   291  0020                     utoa@v:	
   292                           ; 2 bytes @ 0x0
   293                           
   294                           
   295                           ; 2 bytes @ 0x0
   296  0020                     	ds	2
   297  0022                     ??_rand:	
   298  0022                     utoa@c:	
   299                           ; 0 bytes @ 0x2
   300                           
   301                           
   302                           ; 1 bytes @ 0x2
   303  0022                     	ds	1
   304  0023                     utoa@buf:	
   305                           
   306                           ; 1 bytes @ 0x3
   307  0023                     	ds	1
   308  0024                     ?_itoa:	
   309  0024                     itoa@val:	
   310                           ; 1 bytes @ 0x4
   311                           
   312                           
   313                           ; 2 bytes @ 0x4
   314  0024                     	ds	2
   315  0026                     itoa@base:	
   316                           
   317                           ; 2 bytes @ 0x6
   318  0026                     	ds	2
   319  0028                     itoa@cp:	
   320                           
   321                           ; 1 bytes @ 0x8
   322  0028                     	ds	1
   323  0029                     itoa@buf:	
   324                           
   325                           ; 1 bytes @ 0x9
   326  0029                     	ds	2
   327  002B                     ??_main:	
   328                           
   329                           ; 0 bytes @ 0xB
   330  002B                     	ds	4
   331  002F                     main@text:	
   332                           
   333                           ; 20 bytes @ 0xF
   334  002F                     	ds	20
   335  0043                     main@buf:	
   336                           
   337                           ; 8 bytes @ 0x23
   338  0043                     	ds	8
   339  004B                     main@i:	
   340                           
   341                           ; 2 bytes @ 0x2B
   342  004B                     	ds	2
   343  004D                     main@j:	
   344                           
   345                           ; 2 bytes @ 0x2D
   346  004D                     	ds	2
   347                           
   348                           	psect	maintext
   349  06F3                     __pmaintext:	
   350 ;;
   351 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   352 ;;
   353 ;; *************** function _main *****************
   354 ;; Defined at:
   355 ;;		line 46 in file "main.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;  text           20   15[BANK0 ] unsigned char [20]
   360 ;;  buf             8   35[BANK0 ] unsigned char [8]
   361 ;;  j               2   45[BANK0 ] int 
   362 ;;  i               2   43[BANK0 ] int 
   363 ;; Return value:  Size  Location     Type
   364 ;;		None               void
   365 ;; Registers used:
   366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   367 ;; Tracked objects:
   368 ;;		On entry : 17F/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   372 ;;      Params:         0       0       0       0       0
   373 ;;      Locals:         0      32       0       0       0
   374 ;;      Temps:          0       4       0       0       0
   375 ;;      Totals:         0      36       0       0       0
   376 ;;Total ram usage:       36 bytes
   377 ;; Hardware stack levels required when called:    3
   378 ;; This function calls:
   379 ;;		_delay
   380 ;;		_init_UART
   381 ;;		_rand
   382 ;;		_itoa
   383 ;; This function is called by:
   384 ;;		Startup code after reset
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           
   389                           ;psect for function _main
   390  06F3                     _main:	
   391                           
   392                           ;main.c: 47: unsigned char text[20]={'E','D','U','A','R','D','1','9','9','0',10,13};
   393                           
   394                           ;incstack = 0
   395                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   396  06F3  302F               	movlw	main@text& (0+255)
   397  06F4  0084               	movwf	4
   398  06F5  304F               	movlw	low main@F1112
   399  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   400  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   401  06F8  00AB               	movwf	??_main
   402  06F9  0804               	movf	4,w
   403  06FA  00AC               	movwf	??_main+1
   404  06FB  3014               	movlw	20
   405  06FC  00AD               	movwf	??_main+2
   406  06FD                     u630:	
   407  06FD  082B               	movf	??_main,w
   408  06FE  0084               	movwf	4
   409  06FF  1383               	bcf	3,7	;select IRP bank0
   410  0700  0800               	movf	0,w
   411  0701  00AE               	movwf	??_main+3
   412  0702  0AAB               	incf	??_main,f
   413  0703  082C               	movf	??_main+1,w
   414  0704  0084               	movwf	4
   415  0705  082E               	movf	??_main+3,w
   416  0706  0080               	movwf	0
   417  0707  0AAC               	incf	??_main+1,f
   418  0708  0BAD               	decfsz	??_main+2,f
   419  0709  2EFD               	goto	u630
   420                           
   421                           ;main.c: 48: int i, j;
   422                           ;main.c: 49: char buf[8];
   423                           ;main.c: 50: init_UART();
   424  070A  120A  118A  254F   	fcall	_init_UART
      +       120A  118A         
   425                           
   426                           ;main.c: 51: TRISB=0xff;
   427  070F  30FF               	movlw	255
   428  0710  1683               	bsf	3,5	;RP0=1, select bank1
   429  0711  1303               	bcf	3,6	;RP1=0, select bank1
   430  0712  0086               	movwf	6	;volatile
   431  0713                     l943:	
   432                           ;main.c: 54: while(1)
   433                           
   434                           
   435                           ;main.c: 55: {
   436                           ;main.c: 58: i=rand();
   437  0713  120A  118A  2692   	fcall	_rand
      +       120A  118A         
   438  0718  1283               	bcf	3,5	;RP0=0, select bank0
   439  0719  1303               	bcf	3,6	;RP1=0, select bank0
   440  071A  0821               	movf	?_rand+1,w
   441  071B  01CC               	clrf	main@i+1
   442  071C  07CC               	addwf	main@i+1,f
   443  071D  0820               	movf	?_rand,w
   444  071E  01CB               	clrf	main@i
   445  071F  07CB               	addwf	main@i,f
   446                           
   447                           ;main.c: 59: itoa(buf,i,16);
   448  0720  084C               	movf	main@i+1,w
   449  0721  01A5               	clrf	?_itoa+1
   450  0722  07A5               	addwf	?_itoa+1,f
   451  0723  084B               	movf	main@i,w
   452  0724  01A4               	clrf	?_itoa
   453  0725  07A4               	addwf	?_itoa,f
   454  0726  3010               	movlw	16
   455  0727  00A6               	movwf	?_itoa+2
   456  0728  3000               	movlw	0
   457  0729  00A7               	movwf	?_itoa+3
   458  072A  3043               	movlw	main@buf& (0+255)
   459  072B  120A  118A  2585   	fcall	_itoa
      +       120A  118A         
   460  0730                     l35:	
   461                           ;main.c: 61: continue;
   462                           
   463                           ;main.c: 60: while(!TXIF)
   464                           
   465  0730  1283               	bcf	3,5	;RP0=0, select bank0
   466  0731  1303               	bcf	3,6	;RP1=0, select bank0
   467  0732  1E0C               	btfss	12,4	;volatile
   468  0733  2F30               	goto	l35
   469                           
   470                           ;main.c: 62: for(j=0;j<4;j++)
   471  0734  01CD               	clrf	main@j
   472  0735  01CE               	clrf	main@j+1
   473  0736  084E               	movf	main@j+1,w
   474  0737  3A80               	xorlw	128
   475  0738  00FF               	movwf	127
   476  0739  3080               	movlw	128
   477  073A  027F               	subwf	127,w
   478  073B  1D03               	skipz
   479  073C  2F3F               	goto	u655
   480  073D  3004               	movlw	4
   481  073E  024D               	subwf	main@j,w
   482  073F                     u655:	
   483  073F  1803               	btfsc	3,0
   484  0740  2F61               	goto	l961
   485  0741                     l953:	
   486                           
   487                           ;main.c: 63: { TXREG=buf[j];
   488  0741  1283               	bcf	3,5	;RP0=0, select bank0
   489  0742  1303               	bcf	3,6	;RP1=0, select bank0
   490  0743  084D               	movf	main@j,w
   491  0744  3E43               	addlw	main@buf& (0+255)
   492  0745  0084               	movwf	4
   493  0746  1383               	bcf	3,7	;select IRP bank0
   494  0747  0800               	movf	0,w
   495  0748  0099               	movwf	25	;volatile
   496                           
   497                           ;main.c: 64: delay();
   498  0749  120A  118A  25AF   	fcall	_delay
      +       120A  118A         
   499  074E  3001               	movlw	1
   500  074F  1283               	bcf	3,5	;RP0=0, select bank0
   501  0750  1303               	bcf	3,6	;RP1=0, select bank0
   502  0751  07CD               	addwf	main@j,f
   503  0752  1803               	skipnc
   504  0753  0ACE               	incf	main@j+1,f
   505  0754  3000               	movlw	0
   506  0755  07CE               	addwf	main@j+1,f
   507  0756  084E               	movf	main@j+1,w
   508  0757  3A80               	xorlw	128
   509  0758  00FF               	movwf	127
   510  0759  3080               	movlw	128
   511  075A  027F               	subwf	127,w
   512  075B  1D03               	skipz
   513  075C  2F5F               	goto	u665
   514  075D  3004               	movlw	4
   515  075E  024D               	subwf	main@j,w
   516  075F                     u665:	
   517  075F  1C03               	skipc
   518  0760  2F41               	goto	l953
   519  0761                     l961:	
   520                           
   521                           ;main.c: 65: }
   522                           ;main.c: 67: delay();
   523  0761  120A  118A  25AF   	fcall	_delay
      +       120A  118A         
   524                           
   525                           ;main.c: 68: TXREG=10;
   526  0766  300A               	movlw	10
   527  0767  1283               	bcf	3,5	;RP0=0, select bank0
   528  0768  1303               	bcf	3,6	;RP1=0, select bank0
   529  0769  0099               	movwf	25	;volatile
   530                           
   531                           ;main.c: 69: TXREG=13;
   532  076A  300D               	movlw	13
   533  076B  0099               	movwf	25	;volatile
   534  076C  2F13               	goto	l943
   535  076D                     __end_of_main:	
   536                           
   537                           	psect	text1
   538  0585                     __ptext1:	
   539 ;; *************** function _itoa *****************
   540 ;; Defined at:
   541 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.21\sources\common\itoa.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;  buf             1    wreg     PTR unsigned char 
   544 ;;		 -> main@buf(8), 
   545 ;;  val             2    4[BANK0 ] int 
   546 ;;  base            2    6[BANK0 ] int 
   547 ;; Auto vars:     Size  Location     Type
   548 ;;  buf             1    9[BANK0 ] PTR unsigned char 
   549 ;;		 -> main@buf(8), 
   550 ;;  cp              1    8[BANK0 ] PTR unsigned char 
   551 ;;		 -> main@buf(8), 
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      PTR unsigned char 
   554 ;; Registers used:
   555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       4       0       0       0
   562 ;;      Locals:         0       2       0       0       0
   563 ;;      Temps:          1       0       0       0       0
   564 ;;      Totals:         1       6       0       0       0
   565 ;;Total ram usage:        7 bytes
   566 ;; Hardware stack levels used:    1
   567 ;; Hardware stack levels required when called:    2
   568 ;; This function calls:
   569 ;;		_utoa
   570 ;; This function is called by:
   571 ;;		_main
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           
   576                           ;psect for function _itoa
   577  0585                     _itoa:	
   578                           
   579                           ;incstack = 0
   580                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   581                           ;itoa@buf stored from wreg
   582  0585  1283               	bcf	3,5	;RP0=0, select bank0
   583  0586  1303               	bcf	3,6	;RP1=0, select bank0
   584  0587  00A9               	movwf	itoa@buf
   585  0588  0829               	movf	itoa@buf,w
   586  0589  00FD               	movwf	??_itoa
   587  058A  087D               	movf	??_itoa,w
   588  058B  00A8               	movwf	itoa@cp
   589  058C  1FA5               	btfss	itoa@val+1,7
   590  058D  2D9E               	goto	l933
   591  058E  302D               	movlw	45
   592  058F  00FD               	movwf	??_itoa
   593  0590  0829               	movf	itoa@buf,w
   594  0591  0084               	movwf	4
   595  0592  087D               	movf	??_itoa,w
   596  0593  1383               	bcf	3,7	;select IRP bank0
   597  0594  0080               	movwf	0
   598  0595  3001               	movlw	1
   599  0596  00FD               	movwf	??_itoa
   600  0597  087D               	movf	??_itoa,w
   601  0598  07A9               	addwf	itoa@buf,f
   602  0599  09A4               	comf	itoa@val,f
   603  059A  09A5               	comf	itoa@val+1,f
   604  059B  0AA4               	incf	itoa@val,f
   605  059C  1903               	skipnz
   606  059D  0AA5               	incf	itoa@val+1,f
   607  059E                     l933:	
   608  059E  0825               	movf	itoa@val+1,w
   609  059F  01F9               	clrf	?_utoa+1
   610  05A0  07F9               	addwf	?_utoa+1,f
   611  05A1  0824               	movf	itoa@val,w
   612  05A2  01F8               	clrf	?_utoa
   613  05A3  07F8               	addwf	?_utoa,f
   614  05A4  0827               	movf	itoa@base+1,w
   615  05A5  01FB               	clrf	?_utoa+3
   616  05A6  07FB               	addwf	?_utoa+3,f
   617  05A7  0826               	movf	itoa@base,w
   618  05A8  01FA               	clrf	?_utoa+2
   619  05A9  07FA               	addwf	?_utoa+2,f
   620  05AA  0829               	movf	itoa@buf,w
   621  05AB  120A  118A  276D   	fcall	_utoa
   622  05AE  0008               	return
   623  05AF                     __end_of_itoa:	
   624                           ;	Return value of _itoa is never used
   625                           
   626                           
   627                           	psect	text2
   628  076D                     __ptext2:	
   629 ;; *************** function _utoa *****************
   630 ;; Defined at:
   631 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.21\sources\common\itoa.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  buf             1    wreg     PTR unsigned char 
   634 ;;		 -> main@buf(8), 
   635 ;;  val             2    8[COMMON] unsigned int 
   636 ;;  base            2   10[COMMON] int 
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  buf             1    3[BANK0 ] PTR unsigned char 
   639 ;;		 -> main@buf(8), 
   640 ;;  v               2    0[BANK0 ] unsigned int 
   641 ;;  c               1    2[BANK0 ] unsigned char 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      PTR unsigned char 
   644 ;; Registers used:
   645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         4       0       0       0       0
   652 ;;      Locals:         0       4       0       0       0
   653 ;;      Temps:          1       0       0       0       0
   654 ;;      Totals:         5       4       0       0       0
   655 ;;Total ram usage:        9 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; Hardware stack levels required when called:    1
   658 ;; This function calls:
   659 ;;		___lwdiv
   660 ;;		___lwmod
   661 ;; This function is called by:
   662 ;;		_itoa
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           
   667                           ;psect for function _utoa
   668  076D                     _utoa:	
   669                           
   670                           ;incstack = 0
   671                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   672                           ;utoa@buf stored from wreg
   673  076D  1283               	bcf	3,5	;RP0=0, select bank0
   674  076E  1303               	bcf	3,6	;RP1=0, select bank0
   675  076F  00A3               	movwf	utoa@buf
   676  0770  0879               	movf	utoa@val+1,w
   677  0771  01A1               	clrf	utoa@v+1
   678  0772  07A1               	addwf	utoa@v+1,f
   679  0773  0878               	movf	utoa@val,w
   680  0774  01A0               	clrf	utoa@v
   681  0775  07A0               	addwf	utoa@v,f
   682  0776                     l895:	
   683  0776  087B               	movf	utoa@base+1,w
   684  0777  01F1               	clrf	?___lwdiv+1
   685  0778  07F1               	addwf	?___lwdiv+1,f
   686  0779  087A               	movf	utoa@base,w
   687  077A  01F0               	clrf	?___lwdiv
   688  077B  07F0               	addwf	?___lwdiv,f
   689  077C  0821               	movf	utoa@v+1,w
   690  077D  01F3               	clrf	?___lwdiv+3
   691  077E  07F3               	addwf	?___lwdiv+3,f
   692  077F  0820               	movf	utoa@v,w
   693  0780  01F2               	clrf	?___lwdiv+2
   694  0781  07F2               	addwf	?___lwdiv+2,f
   695  0782  120A  118A  2615   	fcall	___lwdiv
      +       120A  118A         
   696  0787  0871               	movf	?___lwdiv+1,w
   697  0788  1283               	bcf	3,5	;RP0=0, select bank0
   698  0789  1303               	bcf	3,6	;RP1=0, select bank0
   699  078A  01A1               	clrf	utoa@v+1
   700  078B  07A1               	addwf	utoa@v+1,f
   701  078C  0870               	movf	?___lwdiv,w
   702  078D  01A0               	clrf	utoa@v
   703  078E  07A0               	addwf	utoa@v,f
   704  078F  3001               	movlw	1
   705  0790  00FC               	movwf	??_utoa
   706  0791  087C               	movf	??_utoa,w
   707  0792  07A3               	addwf	utoa@buf,f
   708  0793  0821               	movf	utoa@v+1,w
   709  0794  0420               	iorwf	utoa@v,w
   710  0795  1D03               	skipz
   711  0796  2F76               	goto	l895
   712  0797  0823               	movf	utoa@buf,w
   713  0798  0084               	movwf	4
   714  0799  1383               	bcf	3,7	;select IRP bank0
   715  079A  0180               	clrf	0
   716  079B  3001               	movlw	1
   717  079C  02A3               	subwf	utoa@buf,f
   718  079D                     l905:	
   719  079D  087B               	movf	utoa@base+1,w
   720  079E  01F1               	clrf	?___lwmod+1
   721  079F  07F1               	addwf	?___lwmod+1,f
   722  07A0  087A               	movf	utoa@base,w
   723  07A1  01F0               	clrf	?___lwmod
   724  07A2  07F0               	addwf	?___lwmod,f
   725  07A3  0879               	movf	utoa@val+1,w
   726  07A4  01F3               	clrf	?___lwmod+3
   727  07A5  07F3               	addwf	?___lwmod+3,f
   728  07A6  0878               	movf	utoa@val,w
   729  07A7  01F2               	clrf	?___lwmod+2
   730  07A8  07F2               	addwf	?___lwmod+2,f
   731  07A9  120A  118A  25E1   	fcall	___lwmod
      +       120A  118A         
   732  07AE  0870               	movf	?___lwmod,w
   733  07AF  00FC               	movwf	??_utoa
   734  07B0  087C               	movf	??_utoa,w
   735  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   736  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   737  07B3  00A2               	movwf	utoa@c
   738  07B4  087B               	movf	utoa@base+1,w
   739  07B5  01F1               	clrf	?___lwdiv+1
   740  07B6  07F1               	addwf	?___lwdiv+1,f
   741  07B7  087A               	movf	utoa@base,w
   742  07B8  01F0               	clrf	?___lwdiv
   743  07B9  07F0               	addwf	?___lwdiv,f
   744  07BA  0879               	movf	utoa@val+1,w
   745  07BB  01F3               	clrf	?___lwdiv+3
   746  07BC  07F3               	addwf	?___lwdiv+3,f
   747  07BD  0878               	movf	utoa@val,w
   748  07BE  01F2               	clrf	?___lwdiv+2
   749  07BF  07F2               	addwf	?___lwdiv+2,f
   750  07C0  120A  118A  2615   	fcall	___lwdiv
      +       120A  118A         
   751  07C5  0871               	movf	?___lwdiv+1,w
   752  07C6  01F9               	clrf	utoa@val+1
   753  07C7  07F9               	addwf	utoa@val+1,f
   754  07C8  0870               	movf	?___lwdiv,w
   755  07C9  01F8               	clrf	utoa@val
   756  07CA  07F8               	addwf	utoa@val,f
   757  07CB  300A               	movlw	10
   758  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   759  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   760  07CE  0222               	subwf	utoa@c,w
   761  07CF  1C03               	skipc
   762  07D0  2FD5               	goto	l375
   763  07D1  3007               	movlw	7
   764  07D2  00FC               	movwf	??_utoa
   765  07D3  087C               	movf	??_utoa,w
   766  07D4  07A2               	addwf	utoa@c,f
   767  07D5                     l375:	
   768  07D5  3030               	movlw	48
   769  07D6  00FC               	movwf	??_utoa
   770  07D7  087C               	movf	??_utoa,w
   771  07D8  07A2               	addwf	utoa@c,f
   772  07D9  0822               	movf	utoa@c,w
   773  07DA  00FC               	movwf	??_utoa
   774  07DB  0823               	movf	utoa@buf,w
   775  07DC  0084               	movwf	4
   776  07DD  087C               	movf	??_utoa,w
   777  07DE  1383               	bcf	3,7	;select IRP bank0
   778  07DF  0080               	movwf	0
   779  07E0  3001               	movlw	1
   780  07E1  02A3               	subwf	utoa@buf,f
   781  07E2  0879               	movf	utoa@val+1,w
   782  07E3  0478               	iorwf	utoa@val,w
   783  07E4  1D03               	skipz
   784  07E5  2F9D               	goto	l905
   785                           
   786                           ;	Return value of _utoa is never used
   787  07E6  3001               	movlw	1
   788  07E7  00FC               	movwf	??_utoa
   789  07E8  087C               	movf	??_utoa,w
   790  07E9  07A3               	addwf	utoa@buf,f
   791  07EA  0008               	return
   792  07EB                     __end_of_utoa:	
   793                           
   794                           	psect	text3
   795  05E1                     __ptext3:	
   796 ;; *************** function ___lwmod *****************
   797 ;; Defined at:
   798 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.21\sources\pic\lwmod.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  divisor         2    0[COMMON] unsigned int 
   801 ;;  dividend        2    2[COMMON] unsigned int 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  counter         1    5[COMMON] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  2    0[COMMON] unsigned int 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         4       0       0       0       0
   814 ;;      Locals:         1       0       0       0       0
   815 ;;      Temps:          1       0       0       0       0
   816 ;;      Totals:         6       0       0       0       0
   817 ;;Total ram usage:        6 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_utoa
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function ___lwmod
   828  05E1                     ___lwmod:	
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   832  05E1  0871               	movf	___lwmod@divisor+1,w
   833  05E2  0470               	iorwf	___lwmod@divisor,w
   834  05E3  1903               	skipnz
   835  05E4  2E0E               	goto	l879
   836  05E5  01F5               	clrf	___lwmod@counter
   837  05E6  0AF5               	incf	___lwmod@counter,f
   838  05E7                     l869:	
   839  05E7  1BF1               	btfsc	___lwmod@divisor+1,7
   840  05E8  2DF5               	goto	l871
   841  05E9  3001               	movlw	1
   842  05EA                     u515:	
   843  05EA  1003               	clrc
   844  05EB  0DF0               	rlf	___lwmod@divisor,f
   845  05EC  0DF1               	rlf	___lwmod@divisor+1,f
   846  05ED  3EFF               	addlw	-1
   847  05EE  1D03               	skipz
   848  05EF  2DEA               	goto	u515
   849  05F0  3001               	movlw	1
   850  05F1  00F4               	movwf	??___lwmod
   851  05F2  0874               	movf	??___lwmod,w
   852  05F3  07F5               	addwf	___lwmod@counter,f
   853  05F4  2DE7               	goto	l869
   854  05F5                     l871:	
   855  05F5  0871               	movf	___lwmod@divisor+1,w
   856  05F6  0273               	subwf	___lwmod@dividend+1,w
   857  05F7  1D03               	skipz
   858  05F8  2DFB               	goto	u535
   859  05F9  0870               	movf	___lwmod@divisor,w
   860  05FA  0272               	subwf	___lwmod@dividend,w
   861  05FB                     u535:	
   862  05FB  1C03               	skipc
   863  05FC  2E03               	goto	l875
   864  05FD  0870               	movf	___lwmod@divisor,w
   865  05FE  02F2               	subwf	___lwmod@dividend,f
   866  05FF  0871               	movf	___lwmod@divisor+1,w
   867  0600  1C03               	skipc
   868  0601  03F3               	decf	___lwmod@dividend+1,f
   869  0602  02F3               	subwf	___lwmod@dividend+1,f
   870  0603                     l875:	
   871  0603  3001               	movlw	1
   872  0604                     u545:	
   873  0604  1003               	clrc
   874  0605  0CF1               	rrf	___lwmod@divisor+1,f
   875  0606  0CF0               	rrf	___lwmod@divisor,f
   876  0607  3EFF               	addlw	-1
   877  0608  1D03               	skipz
   878  0609  2E04               	goto	u545
   879  060A  3001               	movlw	1
   880  060B  02F5               	subwf	___lwmod@counter,f
   881  060C  1D03               	btfss	3,2
   882  060D  2DF5               	goto	l871
   883  060E                     l879:	
   884  060E  0873               	movf	___lwmod@dividend+1,w
   885  060F  01F1               	clrf	?___lwmod+1
   886  0610  07F1               	addwf	?___lwmod+1,f
   887  0611  0872               	movf	___lwmod@dividend,w
   888  0612  01F0               	clrf	?___lwmod
   889  0613  07F0               	addwf	?___lwmod,f
   890  0614  0008               	return
   891  0615                     __end_of___lwmod:	
   892                           
   893                           	psect	text4
   894  0615                     __ptext4:	
   895 ;; *************** function ___lwdiv *****************
   896 ;; Defined at:
   897 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.21\sources\pic\lwdiv.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  divisor         2    0[COMMON] unsigned int 
   900 ;;  dividend        2    2[COMMON] unsigned int 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  quotient        2    5[COMMON] unsigned int 
   903 ;;  counter         1    7[COMMON] unsigned char 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  2    0[COMMON] unsigned int 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         4       0       0       0       0
   914 ;;      Locals:         3       0       0       0       0
   915 ;;      Temps:          1       0       0       0       0
   916 ;;      Totals:         8       0       0       0       0
   917 ;;Total ram usage:        8 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_utoa
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           
   927                           ;psect for function ___lwdiv
   928  0615                     ___lwdiv:	
   929                           
   930                           ;incstack = 0
   931                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   932  0615  01F5               	clrf	___lwdiv@quotient
   933  0616  01F6               	clrf	___lwdiv@quotient+1
   934  0617  0871               	movf	___lwdiv@divisor+1,w
   935  0618  0470               	iorwf	___lwdiv@divisor,w
   936  0619  1903               	skipnz
   937  061A  2E4C               	goto	l857
   938  061B  01F7               	clrf	___lwdiv@counter
   939  061C  0AF7               	incf	___lwdiv@counter,f
   940  061D                     l845:	
   941  061D  1BF1               	btfsc	___lwdiv@divisor+1,7
   942  061E  2E2B               	goto	l847
   943  061F  3001               	movlw	1
   944  0620                     u445:	
   945  0620  1003               	clrc
   946  0621  0DF0               	rlf	___lwdiv@divisor,f
   947  0622  0DF1               	rlf	___lwdiv@divisor+1,f
   948  0623  3EFF               	addlw	-1
   949  0624  1D03               	skipz
   950  0625  2E20               	goto	u445
   951  0626  3001               	movlw	1
   952  0627  00F4               	movwf	??___lwdiv
   953  0628  0874               	movf	??___lwdiv,w
   954  0629  07F7               	addwf	___lwdiv@counter,f
   955  062A  2E1D               	goto	l845
   956  062B                     l847:	
   957  062B  3001               	movlw	1
   958  062C                     u465:	
   959  062C  1003               	clrc
   960  062D  0DF5               	rlf	___lwdiv@quotient,f
   961  062E  0DF6               	rlf	___lwdiv@quotient+1,f
   962  062F  3EFF               	addlw	-1
   963  0630  1D03               	skipz
   964  0631  2E2C               	goto	u465
   965  0632  0871               	movf	___lwdiv@divisor+1,w
   966  0633  0273               	subwf	___lwdiv@dividend+1,w
   967  0634  1D03               	skipz
   968  0635  2E38               	goto	u475
   969  0636  0870               	movf	___lwdiv@divisor,w
   970  0637  0272               	subwf	___lwdiv@dividend,w
   971  0638                     u475:	
   972  0638  1C03               	skipc
   973  0639  2E41               	goto	l853
   974  063A  0870               	movf	___lwdiv@divisor,w
   975  063B  02F2               	subwf	___lwdiv@dividend,f
   976  063C  0871               	movf	___lwdiv@divisor+1,w
   977  063D  1C03               	skipc
   978  063E  03F3               	decf	___lwdiv@dividend+1,f
   979  063F  02F3               	subwf	___lwdiv@dividend+1,f
   980  0640  1475               	bsf	___lwdiv@quotient,0
   981  0641                     l853:	
   982  0641  3001               	movlw	1
   983  0642                     u485:	
   984  0642  1003               	clrc
   985  0643  0CF1               	rrf	___lwdiv@divisor+1,f
   986  0644  0CF0               	rrf	___lwdiv@divisor,f
   987  0645  3EFF               	addlw	-1
   988  0646  1D03               	skipz
   989  0647  2E42               	goto	u485
   990  0648  3001               	movlw	1
   991  0649  02F7               	subwf	___lwdiv@counter,f
   992  064A  1D03               	btfss	3,2
   993  064B  2E2B               	goto	l847
   994  064C                     l857:	
   995  064C  0876               	movf	___lwdiv@quotient+1,w
   996  064D  01F1               	clrf	?___lwdiv+1
   997  064E  07F1               	addwf	?___lwdiv+1,f
   998  064F  0875               	movf	___lwdiv@quotient,w
   999  0650  01F0               	clrf	?___lwdiv
  1000  0651  07F0               	addwf	?___lwdiv,f
  1001  0652  0008               	return
  1002  0653                     __end_of___lwdiv:	
  1003                           
  1004                           	psect	text5
  1005  0692                     __ptext5:	
  1006 ;; *************** function _rand *****************
  1007 ;; Defined at:
  1008 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.21\sources\common\rand.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  2    0[BANK0 ] int 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0, pclath, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1022 ;;      Params:         0       2       0       0       0
  1023 ;;      Locals:         0       0       0       0       0
  1024 ;;      Temps:          0       9       0       0       0
  1025 ;;      Totals:         0      11       0       0       0
  1026 ;;Total ram usage:       11 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; Hardware stack levels required when called:    1
  1029 ;; This function calls:
  1030 ;;		___lmul
  1031 ;;		_srand
  1032 ;; This function is called by:
  1033 ;;		_main
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           
  1038                           ;psect for function _rand
  1039  0692                     _rand:	
  1040                           
  1041                           ;incstack = 0
  1042                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1043  0692  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0693  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0694  08E7               	movf	_randf,f
  1046  0695  1D03               	skipz
  1047  0696  2EA0               	goto	l492
  1048  0697  3001               	movlw	1
  1049  0698  00F0               	movwf	?_srand
  1050  0699  3000               	movlw	0
  1051  069A  00F1               	movwf	?_srand+1
  1052  069B  120A  118A  2544   	fcall	_srand
      +       120A  118A         
  1053  06A0                     l492:	
  1054  06A0  3039               	movlw	57
  1055  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1056  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1057  06A3  00A2               	movwf	??_rand
  1058  06A4  3030               	movlw	48
  1059  06A5  00A3               	movwf	??_rand+1
  1060  06A6  3000               	movlw	0
  1061  06A7  00A4               	movwf	??_rand+2
  1062  06A8  3000               	movlw	0
  1063  06A9  00A5               	movwf	??_rand+3
  1064  06AA  0866               	movf	_randx+3,w
  1065  06AB  00F3               	movwf	?___lmul+3
  1066  06AC  0865               	movf	_randx+2,w
  1067  06AD  00F2               	movwf	?___lmul+2
  1068  06AE  0864               	movf	_randx+1,w
  1069  06AF  00F1               	movwf	?___lmul+1
  1070  06B0  0863               	movf	_randx,w
  1071  06B1  00F0               	movwf	?___lmul
  1072  06B2  3041               	movlw	65
  1073  06B3  00F7               	movwf	?___lmul+7
  1074  06B4  30C6               	movlw	198
  1075  06B5  00F6               	movwf	?___lmul+6
  1076  06B6  304E               	movlw	78
  1077  06B7  00F5               	movwf	?___lmul+5
  1078  06B8  306D               	movlw	109
  1079  06B9  00F4               	movwf	?___lmul+4
  1080  06BA  120A  118A  2653   	fcall	___lmul
      +       120A  118A         
  1081  06BF  0870               	movf	?___lmul,w
  1082  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1083  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1084  06C2  07A2               	addwf	??_rand,f
  1085  06C3  0871               	movf	?___lmul+1,w
  1086  06C4  1803               	skipnc
  1087  06C5  0F71               	incfsz	?___lmul+1,w
  1088  06C6  2EC8               	goto	u570
  1089  06C7  2EC9               	goto	u571
  1090  06C8                     u570:	
  1091  06C8  07A3               	addwf	??_rand+1,f
  1092  06C9                     u571:	
  1093  06C9  0872               	movf	?___lmul+2,w
  1094  06CA  1803               	skipnc
  1095  06CB  0F72               	incfsz	?___lmul+2,w
  1096  06CC  2ECE               	goto	u572
  1097  06CD  2ECF               	goto	u573
  1098  06CE                     u572:	
  1099  06CE  07A4               	addwf	??_rand+2,f
  1100  06CF                     u573:	
  1101  06CF  0873               	movf	?___lmul+3,w
  1102  06D0  1803               	skipnc
  1103  06D1  0A73               	incf	?___lmul+3,w
  1104  06D2  07A5               	addwf	??_rand+3,f
  1105  06D3  0825               	movf	??_rand+3,w
  1106  06D4  00E6               	movwf	_randx+3
  1107  06D5  0824               	movf	??_rand+2,w
  1108  06D6  00E5               	movwf	_randx+2
  1109  06D7  0823               	movf	??_rand+1,w
  1110  06D8  00E4               	movwf	_randx+1
  1111  06D9  0822               	movf	??_rand,w
  1112  06DA  00E3               	movwf	_randx
  1113  06DB  0863               	movf	_randx,w
  1114  06DC  00A6               	movwf	??_rand+4
  1115  06DD  0864               	movf	_randx+1,w
  1116  06DE  00A7               	movwf	??_rand+5
  1117  06DF  0865               	movf	_randx+2,w
  1118  06E0  00A8               	movwf	??_rand+6
  1119  06E1  0866               	movf	_randx+3,w
  1120  06E2  00A9               	movwf	??_rand+7
  1121  06E3  3010               	movlw	16
  1122  06E4  00AA               	movwf	??_rand+8
  1123  06E5                     u585:	
  1124  06E5  0D29               	rlf	??_rand+7,w
  1125  06E6  0CA9               	rrf	??_rand+7,f
  1126  06E7  0CA8               	rrf	??_rand+6,f
  1127  06E8  0CA7               	rrf	??_rand+5,f
  1128  06E9  0CA6               	rrf	??_rand+4,f
  1129  06EA  0BAA               	decfsz	??_rand+8,f
  1130  06EB  2EE5               	goto	u585
  1131  06EC  30FF               	movlw	255
  1132  06ED  0526               	andwf	??_rand+4,w
  1133  06EE  00A0               	movwf	?_rand
  1134  06EF  307F               	movlw	127
  1135  06F0  0527               	andwf	??_rand+5,w
  1136  06F1  00A1               	movwf	?_rand+1
  1137  06F2  0008               	return
  1138  06F3                     __end_of_rand:	
  1139                           
  1140                           	psect	text6
  1141  0544                     __ptext6:	
  1142 ;; *************** function _srand *****************
  1143 ;; Defined at:
  1144 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.21\sources\common\rand.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  x               2    0[COMMON] unsigned int 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;		None               void
  1151 ;; Registers used:
  1152 ;;		wreg
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         2       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0
  1161 ;;      Totals:         2       0       0       0       0
  1162 ;;Total ram usage:        2 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_rand
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           
  1172                           ;psect for function _srand
  1173  0544                     _srand:	
  1174                           
  1175                           ;incstack = 0
  1176                           ; Regs used in _srand: [wreg]
  1177  0544  0870               	movf	srand@x,w
  1178  0545  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0546  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0547  00E3               	movwf	_randx
  1181  0548  0871               	movf	srand@x+1,w
  1182  0549  00E4               	movwf	_randx+1
  1183  054A  01E5               	clrf	_randx+2
  1184  054B  01E6               	clrf	_randx+3
  1185  054C  01E7               	clrf	_randf
  1186  054D  0AE7               	incf	_randf,f
  1187  054E  0008               	return
  1188  054F                     __end_of_srand:	
  1189                           
  1190                           	psect	text7
  1191  0653                     __ptext7:	
  1192 ;; *************** function ___lmul *****************
  1193 ;; Defined at:
  1194 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.21\sources\pic\lmul.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  multiplier      4    0[COMMON] unsigned long 
  1197 ;;  multiplicand    4    4[COMMON] unsigned long 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  product         4    9[COMMON] unsigned long 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  4    0[COMMON] unsigned long 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         8       0       0       0       0
  1210 ;;      Locals:         4       0       0       0       0
  1211 ;;      Temps:          1       0       0       0       0
  1212 ;;      Totals:        13       0       0       0       0
  1213 ;;Total ram usage:       13 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_rand
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function ___lmul
  1224  0653                     ___lmul:	
  1225                           
  1226                           ;incstack = 0
  1227                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1228  0653  3000               	movlw	0
  1229  0654  00FC               	movwf	___lmul@product+3
  1230  0655  3000               	movlw	0
  1231  0656  00FB               	movwf	___lmul@product+2
  1232  0657  3000               	movlw	0
  1233  0658  00FA               	movwf	___lmul@product+1
  1234  0659  3000               	movlw	0
  1235  065A  00F9               	movwf	___lmul@product
  1236  065B                     l823:	
  1237  065B  1C70               	btfss	___lmul@multiplier,0
  1238  065C  2E71               	goto	l827
  1239  065D  0874               	movf	___lmul@multiplicand,w
  1240  065E  07F9               	addwf	___lmul@product,f
  1241  065F  0875               	movf	___lmul@multiplicand+1,w
  1242  0660  1103               	clrz
  1243  0661  1803               	skipnc
  1244  0662  3E01               	addlw	1
  1245  0663  1D03               	btfss	3,2
  1246  0664  07FA               	addwf	___lmul@product+1,f
  1247  0665  0876               	movf	___lmul@multiplicand+2,w
  1248  0666  1103               	clrz
  1249  0667  1803               	skipnc
  1250  0668  3E01               	addlw	1
  1251  0669  1D03               	btfss	3,2
  1252  066A  07FB               	addwf	___lmul@product+2,f
  1253  066B  0877               	movf	___lmul@multiplicand+3,w
  1254  066C  1103               	clrz
  1255  066D  1803               	skipnc
  1256  066E  3E01               	addlw	1
  1257  066F  1D03               	btfss	3,2
  1258  0670  07FC               	addwf	___lmul@product+3,f
  1259  0671                     l827:	
  1260  0671  3001               	movlw	1
  1261  0672  00F8               	movwf	??___lmul
  1262  0673                     u405:	
  1263  0673  1003               	clrc
  1264  0674  0DF4               	rlf	___lmul@multiplicand,f
  1265  0675  0DF5               	rlf	___lmul@multiplicand+1,f
  1266  0676  0DF6               	rlf	___lmul@multiplicand+2,f
  1267  0677  0DF7               	rlf	___lmul@multiplicand+3,f
  1268  0678  0BF8               	decfsz	??___lmul,f
  1269  0679  2E73               	goto	u405
  1270  067A  3001               	movlw	1
  1271  067B                     u415:	
  1272  067B  1003               	clrc
  1273  067C  0CF3               	rrf	___lmul@multiplier+3,f
  1274  067D  0CF2               	rrf	___lmul@multiplier+2,f
  1275  067E  0CF1               	rrf	___lmul@multiplier+1,f
  1276  067F  0CF0               	rrf	___lmul@multiplier,f
  1277  0680  3EFF               	addlw	-1
  1278  0681  1D03               	skipz
  1279  0682  2E7B               	goto	u415
  1280  0683  0873               	movf	___lmul@multiplier+3,w
  1281  0684  0472               	iorwf	___lmul@multiplier+2,w
  1282  0685  0471               	iorwf	___lmul@multiplier+1,w
  1283  0686  0470               	iorwf	___lmul@multiplier,w
  1284  0687  1D03               	skipz
  1285  0688  2E5B               	goto	l823
  1286  0689  087C               	movf	___lmul@product+3,w
  1287  068A  00F3               	movwf	?___lmul+3
  1288  068B  087B               	movf	___lmul@product+2,w
  1289  068C  00F2               	movwf	?___lmul+2
  1290  068D  087A               	movf	___lmul@product+1,w
  1291  068E  00F1               	movwf	?___lmul+1
  1292  068F  0879               	movf	___lmul@product,w
  1293  0690  00F0               	movwf	?___lmul
  1294  0691  0008               	return
  1295  0692                     __end_of___lmul:	
  1296                           
  1297                           	psect	text8
  1298  054F                     __ptext8:	
  1299 ;; *************** function _init_UART *****************
  1300 ;; Defined at:
  1301 ;;		line 76 in file "main.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;		None               void
  1308 ;; Registers used:
  1309 ;;		wreg
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1315 ;;      Params:         0       0       0       0       0
  1316 ;;      Locals:         0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0
  1318 ;;      Totals:         0       0       0       0       0
  1319 ;;Total ram usage:        0 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           
  1329                           ;psect for function _init_UART
  1330  054F                     _init_UART:	
  1331                           
  1332                           ;main.c: 78: SPBRG=129;
  1333                           
  1334                           ;incstack = 0
  1335                           ; Regs used in _init_UART: [wreg]
  1336  054F  3081               	movlw	129
  1337  0550  1683               	bsf	3,5	;RP0=1, select bank1
  1338  0551  1303               	bcf	3,6	;RP1=0, select bank1
  1339  0552  0099               	movwf	25	;volatile
  1340                           
  1341                           ;main.c: 79: TXSTAbits.BRGH=1;
  1342  0553  1518               	bsf	24,2	;volatile
  1343                           
  1344                           ;main.c: 80: TXSTAbits.SYNC=0;
  1345  0554  1218               	bcf	24,4	;volatile
  1346                           
  1347                           ;main.c: 81: RCSTAbits.SPEN=1;
  1348  0555  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0556  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0557  1798               	bsf	24,7	;volatile
  1351                           
  1352                           ;main.c: 82: TXIE=0;
  1353  0558  1683               	bsf	3,5	;RP0=1, select bank1
  1354  0559  1303               	bcf	3,6	;RP1=0, select bank1
  1355  055A  120C               	bcf	12,4	;volatile
  1356                           
  1357                           ;main.c: 83: TXSTAbits.TX9=0;
  1358  055B  1318               	bcf	24,6	;volatile
  1359                           
  1360                           ;main.c: 84: TXSTAbits.TXEN=1;
  1361  055C  1698               	bsf	24,5	;volatile
  1362                           
  1363                           ;main.c: 85: TRISCbits.TRISC6=1;
  1364  055D  1707               	bsf	7,6	;volatile
  1365                           
  1366                           ;main.c: 86: TRISCbits.TRISC7=0;
  1367  055E  1387               	bcf	7,7	;volatile
  1368  055F  0008               	return
  1369  0560                     __end_of_init_UART:	
  1370                           
  1371                           	psect	text9
  1372  05AF                     __ptext9:	
  1373 ;; *************** function _delay *****************
  1374 ;; Defined at:
  1375 ;;		line 34 in file "main.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  j               2    2[COMMON] short 
  1380 ;;  i               2    0[COMMON] short 
  1381 ;;  k               2    0        short 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;		None               void
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, btemp+1
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1391 ;;      Params:         0       0       0       0       0
  1392 ;;      Locals:         4       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0
  1394 ;;      Totals:         4       0       0       0       0
  1395 ;;Total ram usage:        4 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           
  1405                           ;psect for function _delay
  1406  05AF                     _delay:	
  1407                           
  1408                           ;main.c: 35: short i,j,k;
  1409                           ;main.c: 38: for(j=0;j<32;j++)
  1410                           
  1411                           ;incstack = 0
  1412                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  1413  05AF  01F2               	clrf	delay@j
  1414  05B0  01F3               	clrf	delay@j+1
  1415  05B1                     L1:	
  1416  05B1  0873               	movf	delay@j+1,w
  1417  05B2  3A80               	xorlw	128
  1418  05B3  00FF               	movwf	127
  1419  05B4  3080               	movlw	128
  1420  05B5  027F               	subwf	127,w
  1421  05B6  1D03               	skipz
  1422  05B7  2DBA               	goto	u345
  1423  05B8  3020               	movlw	32
  1424  05B9  0272               	subwf	delay@j,w
  1425  05BA                     u345:	
  1426  05BA  1803               	btfsc	3,0
  1427  05BB  0008               	return
  1428                           
  1429                           ;main.c: 39: {
  1430                           ;main.c: 40: for(i=0;i<255;i++)
  1431  05BC  01F0               	clrf	delay@i
  1432  05BD  01F1               	clrf	delay@i+1
  1433  05BE  0871               	movf	delay@i+1,w
  1434  05BF  3A80               	xorlw	128
  1435  05C0  00FF               	movwf	127
  1436  05C1  3080               	movlw	128
  1437  05C2  027F               	subwf	127,w
  1438  05C3  1D03               	skipz
  1439  05C4  2DC7               	goto	u355
  1440  05C5  30FF               	movlw	255
  1441  05C6  0270               	subwf	delay@i,w
  1442  05C7                     u355:	
  1443  05C7  1803               	btfsc	3,0
  1444  05C8  2DDA               	goto	l799
  1445  05C9                     l795:	
  1446                           
  1447                           ;main.c: 41: ;
  1448  05C9  3001               	movlw	1
  1449  05CA  07F0               	addwf	delay@i,f
  1450  05CB  1803               	skipnc
  1451  05CC  0AF1               	incf	delay@i+1,f
  1452  05CD  3000               	movlw	0
  1453  05CE  07F1               	addwf	delay@i+1,f
  1454  05CF  0871               	movf	delay@i+1,w
  1455  05D0  3A80               	xorlw	128
  1456  05D1  00FF               	movwf	127
  1457  05D2  3080               	movlw	128
  1458  05D3  027F               	subwf	127,w
  1459  05D4  1D03               	skipz
  1460  05D5  2DD8               	goto	u365
  1461  05D6  30FF               	movlw	255
  1462  05D7  0270               	subwf	delay@i,w
  1463  05D8                     u365:	
  1464  05D8  1C03               	skipc
  1465  05D9  2DC9               	goto	l795
  1466  05DA                     l799:	
  1467  05DA  3001               	movlw	1
  1468  05DB  07F2               	addwf	delay@j,f
  1469  05DC  1803               	skipnc
  1470  05DD  0AF3               	incf	delay@j+1,f
  1471  05DE  3000               	movlw	0
  1472  05DF  07F3               	addwf	delay@j+1,f
  1473  05E0  2DB1               	goto	L1
  1474  05E1                     __end_of_delay:	
  1475  007E                     btemp	set	126	;btemp
  1476  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     47      72
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?_rand	int  size(1) Largest target is 0

    ?___lmul	unsigned long  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?_utoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    ?_itoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _rand->___lmul

Critical Paths under _main in BANK0

    _main->_rand
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0    1135
                                             11 BANK0     36    36      0
                              _delay
                          _init_UART
                               _rand
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4     786
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4     623
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     159
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     162
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _rand                                                11     9      2     114
                                              0 BANK0     11     9      2
                             ___lmul
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      22
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8      92
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay                                                6     6      0      92
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _init_UART
   _rand
     ___lmul
     _srand
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2F      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      56       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       3       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Wed Dec 25 15:32:06 2013

                      pc 0002              __CFG_CP$OFF 0000                       l35 0730  
                     fsr 0004                      l375 07D5                      l492 06A0  
                    l823 065B                      l905 079D                      l827 0671  
                    l853 0641                      l845 061D                      l933 059E  
                    l847 062B                      l871 05F5                      l943 0713  
                    l857 064C                      l961 0761                      l953 0741  
                    l795 05C9                      l875 0603                      l869 05E7  
                    l799 05DA                      l879 060E                      l895 0776  
                    u405 0673                      u415 067B                      u345 05BA  
           __CFG_CPD$OFF 0000                      u355 05C7                      u515 05EA  
                    u365 05D8                      u445 0620                      u630 06FD  
                    u535 05FB                      u465 062C                      u545 0604  
                    u570 06C8                      u571 06C9                      u475 0638  
                    u572 06CE                      u573 06CF                      u485 0642  
                    u655 073F                      u585 06E5                      u665 075F  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     _TXIE 0464                     _TXIF 0064  
           __CFG_WRT$OFF 0000                     _main 06F3                     _rand 0692  
                   _itoa 0585                     btemp 007E                     _utoa 076D  
                   start 0000                    ?_main 0070                    ?_rand 0020  
                  ?_itoa 0024            __CFG_WDTE$OFF 0000                    ?_utoa 0078  
        __end_of___lwdiv 0653          __end_of___lwmod 0615                    _SPBRG 0099  
                  _TRISB 0086                    _TXREG 0019      ___lmul@multiplicand 0074  
                  _delay 05AF                    _randf 0067                    _randx 0063  
                  _srand 0544                    main@i 004B                    main@j 004D  
         __CFG_BOREN$OFF 0000                    pclath 000A                    utoa@c 0022  
                  utoa@v 0020                    status 0003                    wtemp0 007E  
        __initialization 07EB             __end_of_main 076D             __end_of_rand 06F3  
           __end_of_itoa 05AF             __end_of_utoa 07EB                   ??_main 002B  
                 ??_rand 0022                   ??_itoa 007D                   ??_utoa 007C  
                 ?_delay 0070                   ?_srand 0070           __CFG_PWRTE$OFF 0000  
                 ___lmul 0653                ??___lwdiv 0074                ??___lwmod 0074  
                 delay@i 0070                   delay@j 0072                   itoa@cp 0028  
                 srand@x 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0571            __end_of_delay 05E1            __end_of_srand 054F  
                ??_delay 0070                  ??_srand 0072               __pbssBANK0 0063  
     __size_of_init_UART 0011               __pmaintext 06F3                  ?___lmul 0070  
         ___lmul@product 0079          __size_of___lmul 003F                  ___lwdiv 0615  
                ___lwmod 05E1                  __ptext1 0585                  __ptext2 076D  
                __ptext3 05E1                  __ptext4 0615                  __ptext5 0692  
                __ptext6 0544                  __ptext7 0653                  __ptext8 054F  
                __ptext9 05AF        __end_of_init_UART 0560                  main@buf 0043  
   end_of_initialization 07FC                  itoa@buf 0029                  itoa@val 0024  
              _RCSTAbits 0018                  utoa@buf 0023                  utoa@val 0078  
              _TRISCbits 0087                _TXSTAbits 0098           __end_of___lmul 0692  
    start_initialization 07EB                 ??___lmul 0078               init_fetch0 0560  
            __pdataBANK0 004F            __pcstackBANK0 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0070                _init_UART 054F  
       ___lwdiv@quotient 0075           __size_of_delay 0032           __size_of_srand 000B  
              main@F1112 004F               ?_init_UART 0070        ___lmul@multiplier 0070  
       __size_of___lwdiv 003E         __size_of___lwmod 0034          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077            __size_of_main 007A            __size_of_rand 0061  
          __size_of_itoa 002A            __size_of_utoa 007E                 main@text 002F  
            ??_init_UART 0070                 itoa@base 0026                 init_ram0 0564  
       ___lwmod@dividend 0072                 utoa@base 007A          ___lwmod@divisor 0070  
        ___lwmod@counter 0075  
