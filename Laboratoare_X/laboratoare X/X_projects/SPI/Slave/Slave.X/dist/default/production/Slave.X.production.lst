

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Thu Jan 16 18:15:24 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F684
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0007                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000E                     	;# 
    27  000E                     	;# 
    28  000F                     	;# 
    29  0010                     	;# 
    30  0011                     	;# 
    31  0012                     	;# 
    32  0013                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0017                     	;# 
    38  0018                     	;# 
    39  0019                     	;# 
    40  001A                     	;# 
    41  001E                     	;# 
    42  001F                     	;# 
    43  0081                     	;# 
    44  0085                     	;# 
    45  0087                     	;# 
    46  008C                     	;# 
    47  008E                     	;# 
    48  008F                     	;# 
    49  0090                     	;# 
    50  0091                     	;# 
    51  0092                     	;# 
    52  0095                     	;# 
    53  0095                     	;# 
    54  0096                     	;# 
    55  0096                     	;# 
    56  0099                     	;# 
    57  009A                     	;# 
    58  009A                     	;# 
    59  009B                     	;# 
    60  009C                     	;# 
    61  009D                     	;# 
    62  009E                     	;# 
    63  009F                     	;# 
    64  001F                     _ADCON0bits	set	31
    65  001E                     _ADRESH	set	30
    66  0015                     _CCP1CON	set	21
    67  0013                     _CCPR1L	set	19
    68  0019                     _CMCON0bits	set	25
    69  000B                     _INTCON	set	11
    70  000C                     _PIR1bits	set	12
    71  0005                     _PORTAbits	set	5
    72  0012                     _T2CONbits	set	18
    73  00F9                     _GO	set	249
    74  009F                     _ADCON1	set	159
    75  0091                     _ANSELbits	set	145
    76  008F                     _OSCCON	set	143
    77  0092                     _PR2	set	146
    78  0085                     _TRISAbits	set	133
    79  0087                     _TRISCbits	set	135
    80                           
    81                           	psect	text0
    82  0000                     __ptext0:	
    83                           
    84                           ;psect for function _delay
    85                           ; #config settings
    86  0000                     
    87                           	psect	cinit
    88  07FE                     start_initialization:	
    89  07FE                     __initialization:	
    90  07FE                     end_of_initialization:	
    91                           ;End of C runtime variable initialization code
    92                           
    93  07FE                     __end_of__initialization:	
    94  07FE  0183               	clrf	3
    95  07FF  2F84               	ljmp	_main	;jump to C main() function
    96                           
    97                           	psect	cstackCOMMON
    98  0070                     __pcstackCOMMON:	
    99  0070                     ?_init:	
   100  0070                     ??_init:	
   101                           ; 0 bytes @ 0x0
   102                           
   103  0070                     ?_init_pwm:	
   104                           ; 0 bytes @ 0x0
   105                           
   106  0070                     ??_init_pwm:	
   107                           ; 0 bytes @ 0x0
   108                           
   109  0070                     ?_init_ad:	
   110                           ; 0 bytes @ 0x0
   111                           
   112  0070                     ??_init_ad:	
   113                           ; 0 bytes @ 0x0
   114                           
   115  0070                     ?_delay:	
   116                           ; 0 bytes @ 0x0
   117                           
   118  0070                     ??_Read_ad1:	
   119                           ; 0 bytes @ 0x0
   120                           
   121  0070                     ?_main:	
   122                           ; 0 bytes @ 0x0
   123                           
   124  0070                     ?_Read_ad1:	
   125                           ; 0 bytes @ 0x0
   126                           
   127  0070                     ?___awdiv:	
   128                           ; 1 bytes @ 0x0
   129                           
   130  0070                     delay@N:	
   131                           ; 2 bytes @ 0x0
   132                           
   133  0070                     ___awdiv@divisor:	
   134                           ; 2 bytes @ 0x0
   135                           
   136                           
   137                           ; 2 bytes @ 0x0
   138  0070                     	ds	1
   139  0071                     Read_ad1@buf:	
   140                           
   141                           ; 1 bytes @ 0x1
   142  0071                     	ds	1
   143  0072                     ??_delay:	
   144  0072                     delay@i:	
   145                           ; 0 bytes @ 0x2
   146                           
   147  0072                     ___awdiv@dividend:	
   148                           ; 2 bytes @ 0x2
   149                           
   150                           
   151                           ; 2 bytes @ 0x2
   152  0072                     	ds	2
   153  0074                     ??___awdiv:	
   154                           
   155                           ; 0 bytes @ 0x4
   156  0074                     	ds	1
   157  0075                     ___awdiv@counter:	
   158                           
   159                           ; 1 bytes @ 0x5
   160  0075                     	ds	1
   161  0076                     ___awdiv@sign:	
   162                           
   163                           ; 1 bytes @ 0x6
   164  0076                     	ds	1
   165  0077                     ___awdiv@quotient:	
   166                           
   167                           ; 2 bytes @ 0x7
   168  0077                     	ds	2
   169  0079                     ??_main:	
   170                           
   171                           ; 0 bytes @ 0x9
   172  0079                     	ds	3
   173                           
   174                           	psect	cstackBANK0
   175  0020                     __pcstackBANK0:	
   176  0020                     main@n:	
   177                           
   178                           ; 1 bytes @ 0x0
   179  0020                     	ds	1
   180  0021                     main@j:	
   181                           
   182                           ; 1 bytes @ 0x1
   183  0021                     	ds	1
   184  0022                     main@i:	
   185                           
   186                           ; 1 bytes @ 0x2
   187  0022                     	ds	1
   188                           
   189                           	psect	maintext
   190  0784                     __pmaintext:	
   191 ;;
   192 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   193 ;;
   194 ;; *************** function _main *****************
   195 ;; Defined at:
   196 ;;		line 67 in file "Slave.c"
   197 ;; Parameters:    Size  Location     Type
   198 ;;		None
   199 ;; Auto vars:     Size  Location     Type
   200 ;;  i               1    2[BANK0 ] unsigned char 
   201 ;;  j               1    1[BANK0 ] unsigned char 
   202 ;;  n               1    0[BANK0 ] unsigned char 
   203 ;; Return value:  Size  Location     Type
   204 ;;		None               void
   205 ;; Registers used:
   206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   207 ;; Tracked objects:
   208 ;;		On entry : 17F/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMMON   BANK0   BANK1
   212 ;;      Params:         0       0       0
   213 ;;      Locals:         0       3       0
   214 ;;      Temps:          3       0       0
   215 ;;      Totals:         3       3       0
   216 ;;Total ram usage:        6 bytes
   217 ;; Hardware stack levels required when called:    1
   218 ;; This function calls:
   219 ;;		_delay
   220 ;;		_Read_ad1
   221 ;;		_init
   222 ;;		_init_pwm
   223 ;;		_init_ad
   224 ;;		___awdiv
   225 ;; This function is called by:
   226 ;;		Startup code after reset
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           
   231                           ;psect for function _main
   232  0784                     _main:	
   233                           
   234                           ;Slave.c: 68: init();
   235                           
   236                           ;incstack = 0
   237                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   238  0784  26DB               	fcall	_init
   239                           
   240                           ;Slave.c: 69: init_pwm();
   241  0785  26E5               	fcall	_init_pwm
   242                           
   243                           ;Slave.c: 70: init_ad();
   244  0786  26F7               	fcall	_init_ad
   245                           
   246                           ;Slave.c: 72: unsigned char i,j,n;
   247                           ;Slave.c: 73: i=0;
   248  0787  1283               	bcf	3,5	;RP0=0, select bank0
   249  0788  01A2               	clrf	main@i
   250                           
   251                           ;Slave.c: 74: j=0;
   252  0789  01A1               	clrf	main@j
   253                           
   254                           ;Slave.c: 75: n=0;
   255  078A  01A0               	clrf	main@n
   256                           
   257                           ;Slave.c: 90: switch (n%2){
   258  078B  2FC8               	goto	l831
   259  078C                     l845:	
   260                           ;Slave.c: 91: case 1:
   261                           
   262                           
   263                           ;Slave.c: 92: j=i;
   264  078C  0822               	movf	main@i,w
   265  078D  00F9               	movwf	??_main
   266  078E  0879               	movf	??_main,w
   267  078F  00A1               	movwf	main@j
   268                           
   269                           ;Slave.c: 93: i=32-i;
   270  0790  0322               	decf	main@i,w
   271  0791  3AFF               	xorlw	255
   272  0792  3E20               	addlw	32
   273  0793  00F9               	movwf	??_main
   274  0794  0879               	movf	??_main,w
   275  0795  00A2               	movwf	main@i
   276  0796  2FB4               	goto	L1
   277  0797                     l857:	
   278                           ;Slave.c: 99: default:
   279                           
   280                           ;Slave.c: 98: break;
   281                           
   282                           ;Slave.c: 97: delay(i);
   283                           
   284                           ;Slave.c: 96: CCPR1L=0;
   285                           
   286                           ;Slave.c: 95: delay(i);
   287                           
   288                           ;Slave.c: 94: CCPR1L=j;
   289                           
   290                           
   291                           ;Slave.c: 100: i=i+4;
   292  0797  1283               	bcf	3,5	;RP0=0, select bank0
   293  0798  0822               	movf	main@i,w
   294  0799  3E04               	addlw	4
   295  079A  00F9               	movwf	??_main
   296  079B  0879               	movf	??_main,w
   297  079C  00A2               	movwf	main@i
   298                           
   299                           ;Slave.c: 101: j=35-i;
   300  079D  0322               	decf	main@i,w
   301  079E  3AFF               	xorlw	255
   302  079F  3E23               	addlw	35
   303  07A0  00F9               	movwf	??_main
   304  07A1  0879               	movf	??_main,w
   305  07A2  00A1               	movwf	main@j
   306                           
   307                           ;Slave.c: 102: j=j/6;
   308  07A3  3006               	movlw	6
   309  07A4  00F0               	movwf	?___awdiv
   310  07A5  3000               	movlw	0
   311  07A6  00F1               	movwf	?___awdiv+1
   312  07A7  0821               	movf	main@j,w
   313  07A8  00F9               	movwf	??_main
   314  07A9  01FA               	clrf	??_main+1
   315  07AA  0879               	movf	??_main,w
   316  07AB  00F2               	movwf	?___awdiv+2
   317  07AC  087A               	movf	??_main+1,w
   318  07AD  00F3               	movwf	?___awdiv+3
   319  07AE  2729               	fcall	___awdiv
   320  07AF  0870               	movf	?___awdiv,w
   321  07B0  00FB               	movwf	??_main+2
   322  07B1  087B               	movf	??_main+2,w
   323  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   324  07B3  00A1               	movwf	main@j
   325  07B4                     L1:	
   326                           
   327                           ;Slave.c: 103: CCPR1L=j;
   328  07B4  0821               	movf	main@j,w
   329  07B5  0093               	movwf	19	;volatile
   330                           
   331                           ;Slave.c: 105: delay(i);
   332  07B6  0822               	movf	main@i,w
   333  07B7  00F9               	movwf	??_main
   334  07B8  01FA               	clrf	??_main+1
   335  07B9  0879               	movf	??_main,w
   336  07BA  00F0               	movwf	?_delay
   337  07BB  087A               	movf	??_main+1,w
   338  07BC  00F1               	movwf	?_delay+1
   339  07BD  270B               	fcall	_delay
   340                           
   341                           ;Slave.c: 106: CCPR1L=0;
   342  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   343  07BF  0193               	clrf	19	;volatile
   344                           
   345                           ;Slave.c: 107: delay(i);
   346  07C0  0822               	movf	main@i,w
   347  07C1  00F9               	movwf	??_main
   348  07C2  01FA               	clrf	??_main+1
   349  07C3  0879               	movf	??_main,w
   350  07C4  00F0               	movwf	?_delay
   351  07C5  087A               	movf	??_main+1,w
   352  07C6  00F1               	movwf	?_delay+1
   353  07C7  270B               	fcall	_delay
   354  07C8                     l831:	
   355                           ;Slave.c: 76: for(;;)
   356                           
   357                           ;Slave.c: 109: break;}
   358                           
   359                           
   360                           ;Slave.c: 77: {
   361                           ;Slave.c: 78: CCPR1L=30;
   362  07C8  301E               	movlw	30
   363  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   364  07CA  0093               	movwf	19	;volatile
   365                           
   366                           ;Slave.c: 79: if(!PORTAbits.RA2)
   367  07CB  1905               	btfsc	5,2	;volatile
   368  07CC  2FDD               	goto	l841
   369                           
   370                           ;Slave.c: 80: {_delay((unsigned long)((1)*(8000000/4000.0)));
   371  07CD  3003               	movlw	3
   372  07CE  00FA               	movwf	??_main+1
   373  07CF  3097               	movlw	151
   374  07D0  00F9               	movwf	??_main
   375  07D1                     u357:	
   376  07D1  0BF9               	decfsz	??_main,f
   377  07D2  2FD1               	goto	u357
   378  07D3  0BFA               	decfsz	??_main+1,f
   379  07D4  2FD1               	goto	u357
   380  07D5  2FD6               	nop2
   381                           
   382                           ;Slave.c: 81: if(!PORTAbits.RA2)
   383  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   384  07D7  1905               	btfsc	5,2	;volatile
   385  07D8  2FDD               	goto	l841
   386                           
   387                           ;Slave.c: 83: n=n+1;
   388  07D9  0A20               	incf	main@n,w
   389  07DA  00F9               	movwf	??_main
   390  07DB  0879               	movf	??_main,w
   391  07DC  00A0               	movwf	main@n
   392  07DD                     l841:	
   393                           
   394                           ;Slave.c: 85: }
   395                           ;Slave.c: 86: i=Read_ad1();
   396  07DD  26D1               	fcall	_Read_ad1
   397  07DE  00F9               	movwf	??_main
   398  07DF  0879               	movf	??_main,w
   399  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   400  07E1  00A2               	movwf	main@i
   401                           
   402                           ;Slave.c: 87: i=i>>3;
   403  07E2  0822               	movf	main@i,w
   404  07E3  00F9               	movwf	??_main
   405  07E4  3003               	movlw	3
   406  07E5                     u345:	
   407  07E5  1003               	clrc
   408  07E6  0CF9               	rrf	??_main,f
   409  07E7  3EFF               	addlw	-1
   410  07E8  1D03               	skipz
   411  07E9  2FE5               	goto	u345
   412  07EA  0879               	movf	??_main,w
   413  07EB  00FA               	movwf	??_main+1
   414  07EC  087A               	movf	??_main+1,w
   415  07ED  00A2               	movwf	main@i
   416  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   417  07EF  0820               	movf	main@n,w
   418  07F0  3901               	andlw	1
   419  07F1  00F9               	movwf	??_main
   420  07F2  01FA               	clrf	??_main+1
   421                           
   422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   423                           ; Switch size 1, requested type "space"
   424                           ; Number of cases is 1, Range of values is 0 to 0
   425                           ; switch strategies available:
   426                           ; Name         Instructions Cycles
   427                           ; simple_byte            4     3 (average)
   428                           ; direct_byte            7     6 (fixed)
   429                           ; jumptable            260     6 (fixed)
   430                           ;	Chosen strategy is simple_byte
   431  07F3  087A               	movf	??_main+1,w
   432  07F4  3A00               	xorlw	0	; case 0
   433  07F5  1903               	skipnz
   434  07F6  2FF8               	goto	l897
   435  07F7  2F97               	goto	l857
   436  07F8                     l897:	
   437                           
   438                           ; Switch size 1, requested type "space"
   439                           ; Number of cases is 1, Range of values is 1 to 1
   440                           ; switch strategies available:
   441                           ; Name         Instructions Cycles
   442                           ; simple_byte            4     3 (average)
   443                           ; direct_byte           10     9 (fixed)
   444                           ; jumptable            263     9 (fixed)
   445                           ;	Chosen strategy is simple_byte
   446  07F8  0879               	movf	??_main,w
   447  07F9  3A01               	xorlw	1	; case 1
   448  07FA  1903               	skipnz
   449  07FB  2F8C               	goto	l845
   450  07FC  2F97               	goto	l857
   451                           
   452                           ;Slave.c: 111: }
   453  07FD  2FC8               	goto	l831
   454  07FE                     __end_of_main:	
   455                           
   456                           	psect	text1
   457  0729                     __ptext1:	
   458 ;; *************** function ___awdiv *****************
   459 ;; Defined at:
   460 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v1.21\sources\pic\awdiv.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  divisor         2    0[COMMON] int 
   463 ;;  dividend        2    2[COMMON] int 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  quotient        2    7[COMMON] int 
   466 ;;  sign            1    6[COMMON] unsigned char 
   467 ;;  counter         1    5[COMMON] unsigned char 
   468 ;; Return value:  Size  Location     Type
   469 ;;                  2    0[COMMON] int 
   470 ;; Registers used:
   471 ;;		wreg, status,2, status,0
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1
   477 ;;      Params:         4       0       0
   478 ;;      Locals:         4       0       0
   479 ;;      Temps:          1       0       0
   480 ;;      Totals:         9       0       0
   481 ;;Total ram usage:        9 bytes
   482 ;; Hardware stack levels used:    1
   483 ;; This function calls:
   484 ;;		Nothing
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function ___awdiv
   492  0729                     ___awdiv:	
   493                           
   494                           ;incstack = 0
   495                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   496  0729  01F6               	clrf	___awdiv@sign
   497  072A  1FF1               	btfss	___awdiv@divisor+1,7
   498  072B  2F33               	goto	l771
   499  072C  09F0               	comf	___awdiv@divisor,f
   500  072D  09F1               	comf	___awdiv@divisor+1,f
   501  072E  0AF0               	incf	___awdiv@divisor,f
   502  072F  1903               	skipnz
   503  0730  0AF1               	incf	___awdiv@divisor+1,f
   504  0731  01F6               	clrf	___awdiv@sign
   505  0732  0AF6               	incf	___awdiv@sign,f
   506  0733                     l771:	
   507  0733  1FF3               	btfss	___awdiv@dividend+1,7
   508  0734  2F3E               	goto	l777
   509  0735  09F2               	comf	___awdiv@dividend,f
   510  0736  09F3               	comf	___awdiv@dividend+1,f
   511  0737  0AF2               	incf	___awdiv@dividend,f
   512  0738  1903               	skipnz
   513  0739  0AF3               	incf	___awdiv@dividend+1,f
   514  073A  3001               	movlw	1
   515  073B  00F4               	movwf	??___awdiv
   516  073C  0874               	movf	??___awdiv,w
   517  073D  06F6               	xorwf	___awdiv@sign,f
   518  073E                     l777:	
   519  073E  01F7               	clrf	___awdiv@quotient
   520  073F  01F8               	clrf	___awdiv@quotient+1
   521  0740  0871               	movf	___awdiv@divisor+1,w
   522  0741  0470               	iorwf	___awdiv@divisor,w
   523  0742  1903               	skipnz
   524  0743  2F75               	goto	l799
   525  0744  01F5               	clrf	___awdiv@counter
   526  0745  0AF5               	incf	___awdiv@counter,f
   527  0746                     l787:	
   528  0746  1BF1               	btfsc	___awdiv@divisor+1,7
   529  0747  2F54               	goto	l789
   530  0748  3001               	movlw	1
   531  0749                     u255:	
   532  0749  1003               	clrc
   533  074A  0DF0               	rlf	___awdiv@divisor,f
   534  074B  0DF1               	rlf	___awdiv@divisor+1,f
   535  074C  3EFF               	addlw	-1
   536  074D  1D03               	skipz
   537  074E  2F49               	goto	u255
   538  074F  3001               	movlw	1
   539  0750  00F4               	movwf	??___awdiv
   540  0751  0874               	movf	??___awdiv,w
   541  0752  07F5               	addwf	___awdiv@counter,f
   542  0753  2F46               	goto	l787
   543  0754                     l789:	
   544  0754  3001               	movlw	1
   545  0755                     u275:	
   546  0755  1003               	clrc
   547  0756  0DF7               	rlf	___awdiv@quotient,f
   548  0757  0DF8               	rlf	___awdiv@quotient+1,f
   549  0758  3EFF               	addlw	-1
   550  0759  1D03               	skipz
   551  075A  2F55               	goto	u275
   552  075B  0871               	movf	___awdiv@divisor+1,w
   553  075C  0273               	subwf	___awdiv@dividend+1,w
   554  075D  1D03               	skipz
   555  075E  2F61               	goto	u285
   556  075F  0870               	movf	___awdiv@divisor,w
   557  0760  0272               	subwf	___awdiv@dividend,w
   558  0761                     u285:	
   559  0761  1C03               	skipc
   560  0762  2F6A               	goto	l795
   561  0763  0870               	movf	___awdiv@divisor,w
   562  0764  02F2               	subwf	___awdiv@dividend,f
   563  0765  0871               	movf	___awdiv@divisor+1,w
   564  0766  1C03               	skipc
   565  0767  03F3               	decf	___awdiv@dividend+1,f
   566  0768  02F3               	subwf	___awdiv@dividend+1,f
   567  0769  1477               	bsf	___awdiv@quotient,0
   568  076A                     l795:	
   569  076A  3001               	movlw	1
   570  076B                     u295:	
   571  076B  1003               	clrc
   572  076C  0CF1               	rrf	___awdiv@divisor+1,f
   573  076D  0CF0               	rrf	___awdiv@divisor,f
   574  076E  3EFF               	addlw	-1
   575  076F  1D03               	skipz
   576  0770  2F6B               	goto	u295
   577  0771  3001               	movlw	1
   578  0772  02F5               	subwf	___awdiv@counter,f
   579  0773  1D03               	btfss	3,2
   580  0774  2F54               	goto	l789
   581  0775                     l799:	
   582  0775  0876               	movf	___awdiv@sign,w
   583  0776  1903               	btfsc	3,2
   584  0777  2F7D               	goto	l803
   585  0778  09F7               	comf	___awdiv@quotient,f
   586  0779  09F8               	comf	___awdiv@quotient+1,f
   587  077A  0AF7               	incf	___awdiv@quotient,f
   588  077B  1903               	skipnz
   589  077C  0AF8               	incf	___awdiv@quotient+1,f
   590  077D                     l803:	
   591  077D  0878               	movf	___awdiv@quotient+1,w
   592  077E  01F1               	clrf	?___awdiv+1
   593  077F  07F1               	addwf	?___awdiv+1,f
   594  0780  0877               	movf	___awdiv@quotient,w
   595  0781  01F0               	clrf	?___awdiv
   596  0782  07F0               	addwf	?___awdiv,f
   597  0783  0008               	return
   598  0784                     __end_of___awdiv:	
   599                           
   600                           	psect	text2
   601  06F7                     __ptext2:	
   602 ;; *************** function _init_ad *****************
   603 ;; Defined at:
   604 ;;		line 151 in file "Slave.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;		None               void
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1
   618 ;;      Params:         0       0       0
   619 ;;      Locals:         0       0       0
   620 ;;      Temps:          1       0       0
   621 ;;      Totals:         1       0       0
   622 ;;Total ram usage:        1 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _init_ad
   633  06F7                     _init_ad:	
   634                           
   635                           ;Slave.c: 152: TRISCbits.TRISC2 = 1;
   636                           
   637                           ;incstack = 0
   638                           ; Regs used in _init_ad: [wreg+status,2+status,0]
   639  06F7  1683               	bsf	3,5	;RP0=1, select bank1
   640  06F8  1507               	bsf	7,2	;volatile
   641                           
   642                           ;Slave.c: 153: ANSELbits.ANS6 = 1;
   643  06F9  1711               	bsf	17,6	;volatile
   644                           
   645                           ;Slave.c: 155: ADCON1=0;
   646  06FA  019F               	clrf	31	;volatile
   647                           
   648                           ;Slave.c: 156: ADCON0bits.VCFG = 0;
   649  06FB  1283               	bcf	3,5	;RP0=0, select bank0
   650  06FC  131F               	bcf	31,6	;volatile
   651                           
   652                           ;Slave.c: 157: ADCON0bits.ADFM = 0;
   653  06FD  139F               	bcf	31,7	;volatile
   654                           
   655                           ;Slave.c: 162: ADCON0bits.CHS = 0b110;
   656  06FE  081F               	movf	31,w	;volatile
   657  06FF  39E3               	andlw	-29
   658  0700  3818               	iorlw	24
   659  0701  009F               	movwf	31	;volatile
   660                           
   661                           ;Slave.c: 163: ADCON0bits.ADON = 1;
   662  0702  141F               	bsf	31,0	;volatile
   663                           
   664                           ;Slave.c: 164: _delay((unsigned long)((15)*(8000000/4000000.0)));
   665  0703  3009               	movlw	9
   666  0704  00F0               	movwf	??_init_ad
   667  0705                     u367:	
   668  0705  0BF0               	decfsz	??_init_ad,f
   669  0706  2F05               	goto	u367
   670  0707  2F08               	nop2	;nop
   671                           
   672                           ;Slave.c: 165: ADCON0bits.GO = 1;
   673  0708  1283               	bcf	3,5	;RP0=0, select bank0
   674  0709  149F               	bsf	31,1	;volatile
   675  070A  0008               	return
   676  070B                     __end_of_init_ad:	
   677                           
   678                           	psect	text3
   679  06E5                     __ptext3:	
   680 ;; *************** function _init_pwm *****************
   681 ;; Defined at:
   682 ;;		line 134 in file "Slave.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;		None               void
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1
   696 ;;      Params:         0       0       0
   697 ;;      Locals:         0       0       0
   698 ;;      Temps:          0       0       0
   699 ;;      Totals:         0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _init_pwm
   711  06E5                     _init_pwm:	
   712                           
   713                           ;Slave.c: 135: TRISCbits.TRISC5=1;
   714                           
   715                           ;incstack = 0
   716                           ; Regs used in _init_pwm: [wreg+status,2+status,0]
   717  06E5  1683               	bsf	3,5	;RP0=1, select bank1
   718  06E6  1687               	bsf	7,5	;volatile
   719                           
   720                           ;Slave.c: 137: PR2=0x65;
   721  06E7  3065               	movlw	101
   722  06E8  0092               	movwf	18	;volatile
   723                           
   724                           ;Slave.c: 138: CCPR1L=20;
   725  06E9  3014               	movlw	20
   726  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   727  06EB  0093               	movwf	19	;volatile
   728                           
   729                           ;Slave.c: 139: CCP1CON= 0b00001100;
   730  06EC  300C               	movlw	12
   731  06ED  0095               	movwf	21	;volatile
   732                           
   733                           ;Slave.c: 140: PIR1bits.TMR2IF=0;
   734  06EE  108C               	bcf	12,1	;volatile
   735                           
   736                           ;Slave.c: 141: T2CONbits.T2CKPS=0b10 ;
   737  06EF  0812               	movf	18,w	;volatile
   738  06F0  39FC               	andlw	-4
   739  06F1  3802               	iorlw	2
   740  06F2  0092               	movwf	18	;volatile
   741                           
   742                           ;Slave.c: 142: T2CONbits.TMR2ON=1;
   743  06F3  1512               	bsf	18,2	;volatile
   744                           
   745                           ;Slave.c: 144: TRISCbits.TRISC5=0;
   746  06F4  1683               	bsf	3,5	;RP0=1, select bank1
   747  06F5  1287               	bcf	7,5	;volatile
   748  06F6  0008               	return
   749  06F7                     __end_of_init_pwm:	
   750                           
   751                           	psect	text4
   752  06DB                     __ptext4:	
   753 ;; *************** function _init *****************
   754 ;; Defined at:
   755 ;;		line 117 in file "Slave.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;		None               void
   762 ;; Registers used:
   763 ;;		wreg, status,2, status,0
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1
   769 ;;      Params:         0       0       0
   770 ;;      Locals:         0       0       0
   771 ;;      Temps:          0       0       0
   772 ;;      Totals:         0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _init
   784  06DB                     _init:	
   785                           
   786                           ;Slave.c: 118: OSCCON = 0b01110100;
   787                           
   788                           ;incstack = 0
   789                           ; Regs used in _init: [wreg+status,2+status,0]
   790  06DB  3074               	movlw	116
   791  06DC  1683               	bsf	3,5	;RP0=1, select bank1
   792  06DD  008F               	movwf	15	;volatile
   793                           
   794                           ;Slave.c: 120: TRISAbits.TRISA2 = 1;
   795  06DE  1505               	bsf	5,2	;volatile
   796                           
   797                           ;Slave.c: 123: ANSELbits.ANS2=0;
   798  06DF  1111               	bcf	17,2	;volatile
   799                           
   800                           ;Slave.c: 124: CMCON0bits.CM=0b111;
   801  06E0  3007               	movlw	7
   802  06E1  1283               	bcf	3,5	;RP0=0, select bank0
   803  06E2  0499               	iorwf	25,f	;volatile
   804                           
   805                           ;Slave.c: 126: INTCON=0;
   806  06E3  018B               	clrf	11	;volatile
   807  06E4  0008               	return
   808  06E5                     __end_of_init:	
   809                           
   810                           	psect	text5
   811  06D1                     __ptext5:	
   812 ;; *************** function _Read_ad1 *****************
   813 ;; Defined at:
   814 ;;		line 56 in file "Slave.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  buf             1    1[COMMON] unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      unsigned char 
   821 ;; Registers used:
   822 ;;		wreg
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1
   828 ;;      Params:         0       0       0
   829 ;;      Locals:         1       0       0
   830 ;;      Temps:          1       0       0
   831 ;;      Totals:         2       0       0
   832 ;;Total ram usage:        2 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function _Read_ad1
   843  06D1                     _Read_ad1:	
   844  06D1                     l51:	
   845                           ;Slave.c: 59: continue;
   846                           
   847                           ;Slave.c: 57: unsigned char buf;
   848                           ;Slave.c: 58: while(GO)
   849                           
   850                           ;incstack = 0
   851                           ; Regs used in _Read_ad1: [wreg]
   852                           
   853  06D1  1283               	bcf	3,5	;RP0=0, select bank0
   854  06D2  189F               	btfsc	31,1	;volatile
   855  06D3  2ED1               	goto	l51
   856                           
   857                           ;Slave.c: 60: GO=1;
   858  06D4  149F               	bsf	31,1	;volatile
   859                           
   860                           ;Slave.c: 61: buf=ADRESH;
   861  06D5  081E               	movf	30,w	;volatile
   862  06D6  00F0               	movwf	??_Read_ad1
   863  06D7  0870               	movf	??_Read_ad1,w
   864  06D8  00F1               	movwf	Read_ad1@buf
   865                           
   866                           ;Slave.c: 62: return buf;
   867  06D9  0871               	movf	Read_ad1@buf,w
   868  06DA  0008               	return
   869  06DB                     __end_of_Read_ad1:	
   870                           
   871                           	psect	text6
   872  070B                     __ptext6:	
   873 ;; *************** function _delay *****************
   874 ;; Defined at:
   875 ;;		line 36 in file "Slave.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  N               2    0[COMMON] unsigned int 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  i               2    2[COMMON] unsigned int 
   880 ;; Return value:  Size  Location     Type
   881 ;;		None               void
   882 ;; Registers used:
   883 ;;		wreg, status,2
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1
   889 ;;      Params:         2       0       0
   890 ;;      Locals:         2       0       0
   891 ;;      Temps:          0       0       0
   892 ;;      Totals:         4       0       0
   893 ;;Total ram usage:        4 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _delay
   904  070B                     _delay:	
   905  070B                     l733:	
   906                           ;Slave.c: 37: unsigned int i;
   907                           ;Slave.c: 38: while(N--)
   908                           
   909                           ;incstack = 0
   910                           ; Regs used in _delay: [wreg+status,2]
   911                           
   912  070B  3001               	movlw	1
   913  070C  02F0               	subwf	delay@N,f
   914  070D  3000               	movlw	0
   915  070E  1C03               	skipc
   916  070F  03F1               	decf	delay@N+1,f
   917  0710  02F1               	subwf	delay@N+1,f
   918  0711  30FF               	movlw	255
   919  0712  0671               	xorwf	delay@N+1,w
   920  0713  1D03               	skipz
   921  0714  2F17               	goto	u205
   922  0715  30FF               	movlw	255
   923  0716  0670               	xorwf	delay@N,w
   924  0717                     u205:	
   925  0717  1903               	btfsc	3,2
   926  0718  0008               	return
   927                           
   928                           ;Slave.c: 39: for(i=0;i<8000000/4/2000;i++);
   929  0719  01F2               	clrf	delay@i
   930  071A  01F3               	clrf	delay@i+1
   931  071B                     L2:	
   932  071B  3003               	movlw	3
   933  071C  0273               	subwf	delay@i+1,w
   934  071D  30E8               	movlw	232
   935  071E  1903               	skipnz
   936  071F  0272               	subwf	delay@i,w
   937  0720  1803               	btfsc	3,0
   938  0721  2F0B               	goto	l733
   939  0722  3001               	movlw	1
   940  0723  07F2               	addwf	delay@i,f
   941  0724  1803               	skipnc
   942  0725  0AF3               	incf	delay@i+1,f
   943  0726  3000               	movlw	0
   944  0727  07F3               	addwf	delay@i+1,f
   945  0728  2F1B               	goto	L2
   946  0729                     __end_of_delay:	
   947  007E                     btemp	set	126	;btemp
   948  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      3       3
    BANK1            32      0       0

Pointer List with Targets:

    ?___awdiv	int  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     710
                                              9 COMMON     3     3      0
                                              0 BANK0      3     3      0
                              _delay
                           _Read_ad1
                               _init
                           _init_pwm
                            _init_ad
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     300
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _init_ad                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_pwm                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_ad1                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     2      2      68
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _Read_ad1
   _init
   _init_pwm
   _init_ad
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       1       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      3       3       4        3.8%
BANK1               20      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Thu Jan 16 18:15:24 2014

            __CFG_CP$OFF 0000                       l51 06D1                       _GO 00F9  
           ___awdiv@sign 0076                      l803 077D                      l733 070B  
                    l831 07C8                      l841 07DD                      l771 0733  
                    l845 078C                      l777 073E                      l857 0797  
                    l795 076A                      l787 0746                      l789 0754  
                    l799 0775                      l897 07F8                      u205 0717  
                    _PR2 0092                      u255 0749                      u345 07E5  
           __CFG_CPD$OFF 0000                      u275 0755                      u285 0761  
                    u357 07D1                      u367 0705                      u295 076B  
                   _main 0784                     _init 06DB                     btemp 007E  
                   start 0000            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
                  ?_main 0070                    ?_init 0070          __end_of___awdiv 0784  
          __CFG_WDTE$OFF 0000          ___awdiv@divisor 0070          ___awdiv@counter 0075  
         __CFG_FCMEN$OFF 0000                    _delay 070B          __end_of_init_ad 070B  
                  main@i 0022                    main@j 0021                    main@n 0020  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
            Read_ad1@buf 0071          __initialization 07FE             __end_of_main 07FE  
           __end_of_init 06E5         __end_of_Read_ad1 06DB                   ??_main 0079  
                 ??_init 0070                   ?_delay 0070                   _ADCON1 009F  
                 _ADRESH 001E                   _CCPR1L 0013         ___awdiv@dividend 0072  
                 _INTCON 000B                   _OSCCON 008F           __CFG_PWRTE$OFF 0000  
              ??___awdiv 0074                   delay@N 0070                   delay@i 0072  
       __end_of_init_pwm 06F7         ___awdiv@quotient 0077                ??_init_ad 0070  
__end_of__initialization 07FE           __pcstackCOMMON 0070            __end_of_delay 0729  
                ??_delay 0072                ?_Read_ad1 0070               __pmaintext 0784  
                _CCP1CON 0015               ??_Read_ad1 0070                ?_init_pwm 0070  
                ___awdiv 0729                _ANSELbits 0091                  __ptext0 0000  
                __ptext1 0729                  __ptext2 06F7                  __ptext3 06E5  
                __ptext4 06DB                  __ptext5 06D1                  __ptext6 070B  
              _T2CONbits 0012                  _init_ad 06F7     end_of_initialization 07FE  
             ??_init_pwm 0070                _PORTAbits 0005                _TRISAbits 0085  
              _TRISCbits 0087      start_initialization 07FE        __size_of_Read_ad1 000A  
          __pcstackBANK0 0020        __size_of_init_pwm 0012                 ?___awdiv 0070  
               ?_init_ad 0070           __size_of_delay 001E                 _PIR1bits 000C  
             _ADCON0bits 001F                 _Read_ad1 06D1               _CMCON0bits 0019  
       __size_of___awdiv 005B         __size_of_init_ad 0014            __size_of_main 007A  
          __size_of_init 000A                 _init_pwm 06E5       __CFG_FOSC$INTOSCIO 0000  
