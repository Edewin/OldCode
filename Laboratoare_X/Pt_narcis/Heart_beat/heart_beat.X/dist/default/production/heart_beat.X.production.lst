

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Aug 28 22:38:47 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0015                     	;# 
    34  0016                     	;# 
    35  0016                     	;# 
    36  0017                     	;# 
    37  0018                     	;# 
    38  0019                     	;# 
    39  001A                     	;# 
    40  001B                     	;# 
    41  001C                     	;# 
    42  001E                     	;# 
    43  001F                     	;# 
    44  008C                     	;# 
    45  0091                     	;# 
    46  0092                     	;# 
    47  0095                     	;# 
    48  0096                     	;# 
    49  0097                     	;# 
    50  0098                     	;# 
    51  0099                     	;# 
    52  009A                     	;# 
    53  009B                     	;# 
    54  009B                     	;# 
    55  009C                     	;# 
    56  009D                     	;# 
    57  009E                     	;# 
    58  010C                     	;# 
    59  0111                     	;# 
    60  0112                     	;# 
    61  0115                     	;# 
    62  0116                     	;# 
    63  0117                     	;# 
    64  0118                     	;# 
    65  0119                     	;# 
    66  011A                     	;# 
    67  011B                     	;# 
    68  011D                     	;# 
    69  011D                     	;# 
    70  018C                     	;# 
    71  0191                     	;# 
    72  0191                     	;# 
    73  0192                     	;# 
    74  0193                     	;# 
    75  0193                     	;# 
    76  0193                     	;# 
    77  0194                     	;# 
    78  0195                     	;# 
    79  0196                     	;# 
    80  0197                     	;# 
    81  0199                     	;# 
    82  019A                     	;# 
    83  019B                     	;# 
    84  019B                     	;# 
    85  019B                     	;# 
    86  019B                     	;# 
    87  019C                     	;# 
    88  019C                     	;# 
    89  019D                     	;# 
    90  019E                     	;# 
    91  019F                     	;# 
    92  020C                     	;# 
    93  0211                     	;# 
    94  0211                     	;# 
    95  0212                     	;# 
    96  0212                     	;# 
    97  0213                     	;# 
    98  0213                     	;# 
    99  0214                     	;# 
   100  0214                     	;# 
   101  0215                     	;# 
   102  0215                     	;# 
   103  0215                     	;# 
   104  0216                     	;# 
   105  0216                     	;# 
   106  0217                     	;# 
   107  0217                     	;# 
   108  0291                     	;# 
   109  0291                     	;# 
   110  0292                     	;# 
   111  0293                     	;# 
   112  0294                     	;# 
   113  0295                     	;# 
   114  0295                     	;# 
   115  0296                     	;# 
   116  0391                     	;# 
   117  0392                     	;# 
   118  0393                     	;# 
   119  039A                     	;# 
   120  039C                     	;# 
   121  039D                     	;# 
   122  039E                     	;# 
   123  039F                     	;# 
   124  0FE4                     	;# 
   125  0FE5                     	;# 
   126  0FE6                     	;# 
   127  0FE7                     	;# 
   128  0FE8                     	;# 
   129  0FE9                     	;# 
   130  0FEA                     	;# 
   131  0FEB                     	;# 
   132  0FED                     	;# 
   133  0FEE                     	;# 
   134  0FEF                     	;# 
   135  0011                     _PIR1bits	set	17
   136  000C                     _PORTA	set	12
   137  001B                     _PR2	set	27
   138  001C                     _T2CONbits	set	28
   139  009D                     _ADCON0bits	set	157
   140  009E                     _ADCON1bits	set	158
   141  009C                     _ADRESH	set	156
   142  0099                     _OSCCONbits	set	153
   143  008C                     _TRISAbits	set	140
   144  011D                     _APFCONbits	set	285
   145  018C                     _ANSELAbits	set	396
   146  0293                     _CCP1CONbits	set	659
   147  0291                     _CCPR1L	set	657
   148                           
   149                           	psect	text0
   150  0000                     __ptext0:	
   151                           ; #config settings
   152                           
   153                           
   154                           ;psect for function ___awdiv
   155  0000                     
   156                           	psect	cinit
   157  07FD                     start_initialization:	
   158  07FD                     __initialization:	
   159  07FD                     end_of_initialization:	
   160                           ;End of C runtime variable initialization code
   161                           
   162  07FD                     __end_of__initialization:	
   163  07FD  0020               	movlb	0
   164  07FE  3186  2ED9         	ljmp	_main	;jump to C main() function
   165                           
   166                           	psect	cstackCOMMON
   167  0070                     __pcstackCOMMON:	
   168  0070                     ?_init:	
   169  0070                     ??_init:	
   170                           ; 0 bytes @ 0x0
   171                           
   172  0070                     ?_init_adc:	
   173                           ; 0 bytes @ 0x0
   174                           
   175  0070                     ??_init_adc:	
   176                           ; 0 bytes @ 0x0
   177                           
   178  0070                     ?_init_eccp:	
   179                           ; 0 bytes @ 0x0
   180                           
   181  0070                     ??_init_eccp:	
   182                           ; 0 bytes @ 0x0
   183                           
   184  0070                     ??_read_ad:	
   185                           ; 0 bytes @ 0x0
   186                           
   187  0070                     ?_main:	
   188                           ; 0 bytes @ 0x0
   189                           
   190  0070                     ?_read_ad:	
   191                           ; 0 bytes @ 0x0
   192                           
   193  0070                     ?___awdiv:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0070                     ?___wmul:	
   197                           ; 2 bytes @ 0x0
   198                           
   199  0070                     ___awdiv@divisor:	
   200                           ; 2 bytes @ 0x0
   201                           
   202  0070                     ___wmul@multiplier:	
   203                           ; 2 bytes @ 0x0
   204                           
   205                           
   206                           ; 2 bytes @ 0x0
   207  0070                     	ds	2
   208  0072                     read_ad@temp:	
   209  0072                     ___awdiv@dividend:	
   210                           ; 2 bytes @ 0x2
   211                           
   212  0072                     ___wmul@multiplicand:	
   213                           ; 2 bytes @ 0x2
   214                           
   215                           
   216                           ; 2 bytes @ 0x2
   217  0072                     	ds	2
   218  0074                     ??___awdiv:	
   219  0074                     ??___wmul:	
   220                           ; 0 bytes @ 0x4
   221                           
   222  0074                     ___wmul@product:	
   223                           ; 0 bytes @ 0x4
   224                           
   225                           
   226                           ; 2 bytes @ 0x4
   227  0074                     	ds	1
   228  0075                     ___awdiv@counter:	
   229                           
   230                           ; 1 bytes @ 0x5
   231  0075                     	ds	1
   232  0076                     ?_delay_us:	
   233  0076                     ___awdiv@sign:	
   234                           ; 0 bytes @ 0x6
   235                           
   236  0076                     delay_us@d:	
   237                           ; 1 bytes @ 0x6
   238                           
   239                           
   240                           ; 2 bytes @ 0x6
   241  0076                     	ds	1
   242  0077                     ___awdiv@quotient:	
   243                           
   244                           ; 2 bytes @ 0x7
   245  0077                     	ds	1
   246  0078                     ??_delay_us:	
   247                           
   248                           ; 0 bytes @ 0x8
   249  0078                     	ds	1
   250  0079                     ?_delay_nr:	
   251  0079                     delay_us@temp:	
   252                           ; 0 bytes @ 0x9
   253                           
   254  0079                     delay_nr@Da:	
   255                           ; 1 bytes @ 0x9
   256                           
   257                           
   258                           ; 2 bytes @ 0x9
   259  0079                     	ds	2
   260  007B                     ??_delay_nr:	
   261  007B                     delay_nr@att:	
   262                           ; 0 bytes @ 0xB
   263                           
   264                           
   265                           ; 2 bytes @ 0xB
   266  007B                     	ds	2
   267                           
   268                           	psect	cstackBANK0
   269  0020                     __pcstackBANK0:	
   270  0020                     ??_main:	
   271                           
   272                           ; 0 bytes @ 0x0
   273  0020                     	ds	2
   274  0022                     main@x:	
   275                           
   276                           ; 1 bytes @ 0x2
   277  0022                     	ds	1
   278  0023                     main@y:	
   279                           
   280                           ; 1 bytes @ 0x3
   281  0023                     	ds	1
   282                           
   283                           	psect	maintext
   284  06D9                     __pmaintext:	
   285 ;;
   286 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   287 ;;
   288 ;; *************** function _main *****************
   289 ;; Defined at:
   290 ;;		line 49 in file "heart_beat.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;  y               1    3[BANK0 ] unsigned char 
   295 ;;  x               1    2[BANK0 ] unsigned char 
   296 ;; Return value:  Size  Location     Type
   297 ;;		None               void
   298 ;; Registers used:
   299 ;;		wreg, status,2, status,0, pclath, cstack
   300 ;; Tracked objects:
   301 ;;		On entry : 17F/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   305 ;;      Params:         0       0       0       0
   306 ;;      Locals:         0       2       0       0
   307 ;;      Temps:          0       2       0       0
   308 ;;      Totals:         0       4       0       0
   309 ;;Total ram usage:        4 bytes
   310 ;; Hardware stack levels required when called:    1
   311 ;; This function calls:
   312 ;;		___awdiv
   313 ;;		___wmul
   314 ;;		_delay_nr
   315 ;;		_delay_us
   316 ;;		_init
   317 ;;		_init_adc
   318 ;;		_init_eccp
   319 ;;		_read_ad
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           
   326                           ;psect for function _main
   327  06D9                     _main:	
   328                           
   329                           ;heart_beat.c: 51: unsigned char x,y;
   330                           ;heart_beat.c: 52: x=0;
   331                           
   332                           ;incstack = 0
   333                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   334  06D9  0020               	movlb	0	; select bank0
   335  06DA  01A2               	clrf	main@x
   336                           
   337                           ;heart_beat.c: 53: init();
   338  06DB  3185  25E4  3186   	fcall	_init
   339                           
   340                           ;heart_beat.c: 54: init_adc();
   341  06DE  3186  261B  3186   	fcall	_init_adc
   342                           
   343                           ;heart_beat.c: 55: init_eccp();
   344  06E1  3186  264E  3186   	fcall	_init_eccp
   345  06E4                     l1003:	
   346                           ;heart_beat.c: 56: for(;;)
   347                           
   348                           
   349                           ;heart_beat.c: 57: {
   350                           ;heart_beat.c: 64: x=read_ad();
   351  06E4  3185  25F1  3186   	fcall	_read_ad
   352  06E7  0020               	movlb	0	; select bank0
   353  06E8  00A0               	movwf	??_main
   354  06E9  0820               	movf	??_main,w
   355  06EA  00A2               	movwf	main@x
   356                           
   357                           ;heart_beat.c: 65: CCPR1L=0;
   358  06EB  0025               	movlb	5	; select bank5
   359  06EC  0191               	clrf	17	;volatile
   360                           
   361                           ;heart_beat.c: 66: delay_nr(x*24);
   362  06ED  0020               	movlb	0	; select bank0
   363  06EE  0822               	movf	main@x,w
   364  06EF  00A0               	movwf	??_main
   365  06F0  01A1               	clrf	??_main+1
   366  06F1  0820               	movf	??_main,w
   367  06F2  00F0               	movwf	___wmul@multiplier
   368  06F3  0821               	movf	??_main+1,w
   369  06F4  00F1               	movwf	___wmul@multiplier+1
   370  06F5  3018               	movlw	24
   371  06F6  00F2               	movwf	___wmul@multiplicand
   372  06F7  3000               	movlw	0
   373  06F8  00F3               	movwf	___wmul@multiplicand+1
   374  06F9  3186  2669  3186   	fcall	___wmul
   375  06FC  0871               	movf	?___wmul+1,w
   376  06FD  01FA               	clrf	delay_nr@Da+1
   377  06FE  07FA               	addwf	delay_nr@Da+1,f
   378  06FF  0870               	movf	?___wmul,w
   379  0700  01F9               	clrf	delay_nr@Da
   380  0701  07F9               	addwf	delay_nr@Da,f
   381  0702  3186  2634  3186   	fcall	_delay_nr
   382                           
   383                           ;heart_beat.c: 67: for(y=3;y<160;y++)
   384  0705  3003               	movlw	3
   385  0706  0020               	movlb	0	; select bank0
   386  0707  00A0               	movwf	??_main
   387  0708  0820               	movf	??_main,w
   388  0709  00A3               	movwf	main@y
   389  070A  30A0               	movlw	160
   390  070B  0223               	subwf	main@y,w
   391  070C  1803               	btfsc	3,0
   392  070D  2F39               	goto	l1023
   393  070E                     l1013:	
   394                           
   395                           ;heart_beat.c: 68: {x=read_ad();
   396  070E  3185  25F1  3186   	fcall	_read_ad
   397  0711  0020               	movlb	0	; select bank0
   398  0712  00A0               	movwf	??_main
   399  0713  0820               	movf	??_main,w
   400  0714  00A2               	movwf	main@x
   401                           
   402                           ;heart_beat.c: 69: CCPR1L=y;
   403  0715  0823               	movf	main@y,w
   404  0716  0025               	movlb	5	; select bank5
   405  0717  0091               	movwf	17	;volatile
   406                           
   407                           ;heart_beat.c: 70: delay_us(x*50);
   408  0718  0020               	movlb	0	; select bank0
   409  0719  0822               	movf	main@x,w
   410  071A  00A0               	movwf	??_main
   411  071B  01A1               	clrf	??_main+1
   412  071C  0820               	movf	??_main,w
   413  071D  00F0               	movwf	___wmul@multiplier
   414  071E  0821               	movf	??_main+1,w
   415  071F  00F1               	movwf	___wmul@multiplier+1
   416  0720  3032               	movlw	50
   417  0721  00F2               	movwf	___wmul@multiplicand
   418  0722  3000               	movlw	0
   419  0723  00F3               	movwf	___wmul@multiplicand+1
   420  0724  3186  2669  3186   	fcall	___wmul
   421  0727  0871               	movf	?___wmul+1,w
   422  0728  01F7               	clrf	delay_us@d+1
   423  0729  07F7               	addwf	delay_us@d+1,f
   424  072A  0870               	movf	?___wmul,w
   425  072B  01F6               	clrf	delay_us@d
   426  072C  07F6               	addwf	delay_us@d,f
   427  072D  3186  2605  3186   	fcall	_delay_us
   428  0730  3001               	movlw	1
   429  0731  0020               	movlb	0	; select bank0
   430  0732  00A0               	movwf	??_main
   431  0733  0820               	movf	??_main,w
   432  0734  07A3               	addwf	main@y,f
   433  0735  30A0               	movlw	160
   434  0736  0223               	subwf	main@y,w
   435  0737  1C03               	skipc
   436  0738  2F0E               	goto	l1013
   437  0739                     l1023:	
   438                           
   439                           ;heart_beat.c: 73: }
   440                           ;heart_beat.c: 74: for(y=160;y>=3;y--)
   441  0739  30A0               	movlw	160
   442  073A  00A0               	movwf	??_main
   443  073B  0820               	movf	??_main,w
   444  073C  00A3               	movwf	main@y
   445  073D  3003               	movlw	3
   446  073E  0223               	subwf	main@y,w
   447  073F  1C03               	btfss	3,0
   448  0740  2F6A               	goto	l1037
   449  0741                     l1027:	
   450                           
   451                           ;heart_beat.c: 75: {x=read_ad();
   452  0741  3185  25F1  3186   	fcall	_read_ad
   453  0744  0020               	movlb	0	; select bank0
   454  0745  00A0               	movwf	??_main
   455  0746  0820               	movf	??_main,w
   456  0747  00A2               	movwf	main@x
   457                           
   458                           ;heart_beat.c: 76: CCPR1L=y;
   459  0748  0823               	movf	main@y,w
   460  0749  0025               	movlb	5	; select bank5
   461  074A  0091               	movwf	17	;volatile
   462                           
   463                           ;heart_beat.c: 77: delay_us(x*50);
   464  074B  0020               	movlb	0	; select bank0
   465  074C  0822               	movf	main@x,w
   466  074D  00A0               	movwf	??_main
   467  074E  01A1               	clrf	??_main+1
   468  074F  0820               	movf	??_main,w
   469  0750  00F0               	movwf	___wmul@multiplier
   470  0751  0821               	movf	??_main+1,w
   471  0752  00F1               	movwf	___wmul@multiplier+1
   472  0753  3032               	movlw	50
   473  0754  00F2               	movwf	___wmul@multiplicand
   474  0755  3000               	movlw	0
   475  0756  00F3               	movwf	___wmul@multiplicand+1
   476  0757  3186  2669  3186   	fcall	___wmul
   477  075A  0871               	movf	?___wmul+1,w
   478  075B  01F7               	clrf	delay_us@d+1
   479  075C  07F7               	addwf	delay_us@d+1,f
   480  075D  0870               	movf	?___wmul,w
   481  075E  01F6               	clrf	delay_us@d
   482  075F  07F6               	addwf	delay_us@d,f
   483  0760  3186  2605  3186   	fcall	_delay_us
   484  0763  3001               	movlw	1
   485  0764  0020               	movlb	0	; select bank0
   486  0765  02A3               	subwf	main@y,f
   487  0766  3003               	movlw	3
   488  0767  0223               	subwf	main@y,w
   489  0768  1803               	skipnc
   490  0769  2F41               	goto	l1027
   491  076A                     l1037:	
   492                           
   493                           ;heart_beat.c: 80: }
   494                           ;heart_beat.c: 81: CCPR1L=0;
   495  076A  0025               	movlb	5	; select bank5
   496  076B  0191               	clrf	17	;volatile
   497                           
   498                           ;heart_beat.c: 82: delay_nr(x*8);
   499  076C  0020               	movlb	0	; select bank0
   500  076D  0822               	movf	main@x,w
   501  076E  00A0               	movwf	??_main
   502  076F  01A1               	clrf	??_main+1
   503  0770  35A0               	lslf	??_main,f
   504  0771  0DA1               	rlf	??_main+1,f
   505  0772  35A0               	lslf	??_main,f
   506  0773  0DA1               	rlf	??_main+1,f
   507  0774  35A0               	lslf	??_main,f
   508  0775  0DA1               	rlf	??_main+1,f
   509  0776  0820               	movf	??_main,w
   510  0777  00F9               	movwf	delay_nr@Da
   511  0778  0821               	movf	??_main+1,w
   512  0779  00FA               	movwf	delay_nr@Da+1
   513  077A  3186  2634  3186   	fcall	_delay_nr
   514                           
   515                           ;heart_beat.c: 83: for(y=3;y<160;y++)
   516  077D  3003               	movlw	3
   517  077E  0020               	movlb	0	; select bank0
   518  077F  00A0               	movwf	??_main
   519  0780  0820               	movf	??_main,w
   520  0781  00A3               	movwf	main@y
   521  0782  30A0               	movlw	160
   522  0783  0223               	subwf	main@y,w
   523  0784  1803               	btfsc	3,0
   524  0785  2FB1               	goto	l1057
   525  0786                     l1047:	
   526                           
   527                           ;heart_beat.c: 84: {x=read_ad();
   528  0786  3185  25F1  3186   	fcall	_read_ad
   529  0789  0020               	movlb	0	; select bank0
   530  078A  00A0               	movwf	??_main
   531  078B  0820               	movf	??_main,w
   532  078C  00A2               	movwf	main@x
   533                           
   534                           ;heart_beat.c: 85: CCPR1L=y;
   535  078D  0823               	movf	main@y,w
   536  078E  0025               	movlb	5	; select bank5
   537  078F  0091               	movwf	17	;volatile
   538                           
   539                           ;heart_beat.c: 86: delay_us(x*100);
   540  0790  0020               	movlb	0	; select bank0
   541  0791  0822               	movf	main@x,w
   542  0792  00A0               	movwf	??_main
   543  0793  01A1               	clrf	??_main+1
   544  0794  0820               	movf	??_main,w
   545  0795  00F0               	movwf	___wmul@multiplier
   546  0796  0821               	movf	??_main+1,w
   547  0797  00F1               	movwf	___wmul@multiplier+1
   548  0798  3064               	movlw	100
   549  0799  00F2               	movwf	___wmul@multiplicand
   550  079A  3000               	movlw	0
   551  079B  00F3               	movwf	___wmul@multiplicand+1
   552  079C  3186  2669  3186   	fcall	___wmul
   553  079F  0871               	movf	?___wmul+1,w
   554  07A0  01F7               	clrf	delay_us@d+1
   555  07A1  07F7               	addwf	delay_us@d+1,f
   556  07A2  0870               	movf	?___wmul,w
   557  07A3  01F6               	clrf	delay_us@d
   558  07A4  07F6               	addwf	delay_us@d,f
   559  07A5  3186  2605  3186   	fcall	_delay_us
   560  07A8  3001               	movlw	1
   561  07A9  0020               	movlb	0	; select bank0
   562  07AA  00A0               	movwf	??_main
   563  07AB  0820               	movf	??_main,w
   564  07AC  07A3               	addwf	main@y,f
   565  07AD  30A0               	movlw	160
   566  07AE  0223               	subwf	main@y,w
   567  07AF  1C03               	skipc
   568  07B0  2F86               	goto	l1047
   569  07B1                     l1057:	
   570                           
   571                           ;heart_beat.c: 88: }
   572                           ;heart_beat.c: 89: for(y=160;y>=3;y--)
   573  07B1  30A0               	movlw	160
   574  07B2  00A0               	movwf	??_main
   575  07B3  0820               	movf	??_main,w
   576  07B4  00A3               	movwf	main@y
   577  07B5  3003               	movlw	3
   578  07B6  0223               	subwf	main@y,w
   579  07B7  1C03               	btfss	3,0
   580  07B8  2FE2               	goto	l1071
   581  07B9                     l1061:	
   582                           
   583                           ;heart_beat.c: 90: {x=read_ad();
   584  07B9  3185  25F1  3186   	fcall	_read_ad
   585  07BC  0020               	movlb	0	; select bank0
   586  07BD  00A0               	movwf	??_main
   587  07BE  0820               	movf	??_main,w
   588  07BF  00A2               	movwf	main@x
   589                           
   590                           ;heart_beat.c: 91: CCPR1L=y;
   591  07C0  0823               	movf	main@y,w
   592  07C1  0025               	movlb	5	; select bank5
   593  07C2  0091               	movwf	17	;volatile
   594                           
   595                           ;heart_beat.c: 92: delay_nr(x/4);
   596  07C3  3004               	movlw	4
   597  07C4  00F0               	movwf	___awdiv@divisor
   598  07C5  3000               	movlw	0
   599  07C6  00F1               	movwf	___awdiv@divisor+1
   600  07C7  0020               	movlb	0	; select bank0
   601  07C8  0822               	movf	main@x,w
   602  07C9  00A0               	movwf	??_main
   603  07CA  01A1               	clrf	??_main+1
   604  07CB  0820               	movf	??_main,w
   605  07CC  00F2               	movwf	___awdiv@dividend
   606  07CD  0821               	movf	??_main+1,w
   607  07CE  00F3               	movwf	___awdiv@dividend+1
   608  07CF  3186  2686  3186   	fcall	___awdiv
   609  07D2  0871               	movf	?___awdiv+1,w
   610  07D3  01FA               	clrf	delay_nr@Da+1
   611  07D4  07FA               	addwf	delay_nr@Da+1,f
   612  07D5  0870               	movf	?___awdiv,w
   613  07D6  01F9               	clrf	delay_nr@Da
   614  07D7  07F9               	addwf	delay_nr@Da,f
   615  07D8  3186  2634  3186   	fcall	_delay_nr
   616  07DB  3001               	movlw	1
   617  07DC  0020               	movlb	0	; select bank0
   618  07DD  02A3               	subwf	main@y,f
   619  07DE  3003               	movlw	3
   620  07DF  0223               	subwf	main@y,w
   621  07E0  1803               	skipnc
   622  07E1  2FB9               	goto	l1061
   623  07E2                     l1071:	
   624                           
   625                           ;heart_beat.c: 93: }
   626                           ;heart_beat.c: 94: CCPR1L=0;
   627  07E2  0025               	movlb	5	; select bank5
   628  07E3  0191               	clrf	17	;volatile
   629                           
   630                           ;heart_beat.c: 95: delay_nr(x*24);
   631  07E4  0020               	movlb	0	; select bank0
   632  07E5  0822               	movf	main@x,w
   633  07E6  00A0               	movwf	??_main
   634  07E7  01A1               	clrf	??_main+1
   635  07E8  0820               	movf	??_main,w
   636  07E9  00F0               	movwf	___wmul@multiplier
   637  07EA  0821               	movf	??_main+1,w
   638  07EB  00F1               	movwf	___wmul@multiplier+1
   639  07EC  3018               	movlw	24
   640  07ED  00F2               	movwf	___wmul@multiplicand
   641  07EE  3000               	movlw	0
   642  07EF  00F3               	movwf	___wmul@multiplicand+1
   643  07F0  3186  2669  3186   	fcall	___wmul
   644  07F3  0871               	movf	?___wmul+1,w
   645  07F4  01FA               	clrf	delay_nr@Da+1
   646  07F5  07FA               	addwf	delay_nr@Da+1,f
   647  07F6  0870               	movf	?___wmul,w
   648  07F7  01F9               	clrf	delay_nr@Da
   649  07F8  07F9               	addwf	delay_nr@Da,f
   650  07F9  3186  2634  3186   	fcall	_delay_nr
   651                           
   652                           ;heart_beat.c: 97: }
   653  07FC  2EE4               	goto	l1003
   654  07FD                     __end_of_main:	
   655                           
   656                           	psect	text1
   657  05F1                     __ptext1:	
   658 ;; *************** function _read_ad *****************
   659 ;; Defined at:
   660 ;;		line 39 in file "heart_beat.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  temp            2    2[COMMON] unsigned int 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      unsigned char 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   674 ;;      Params:         0       0       0       0
   675 ;;      Locals:         2       0       0       0
   676 ;;      Temps:          2       0       0       0
   677 ;;      Totals:         4       0       0       0
   678 ;;Total ram usage:        4 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _read_ad
   689  05F1                     _read_ad:	
   690                           
   691                           ;incstack = 0
   692                           ; Regs used in _read_ad: [wreg+status,2+status,0]
   693  05F1  01F2               	clrf	read_ad@temp
   694  05F2  01F3               	clrf	read_ad@temp+1
   695  05F3                     l41:	
   696                           ;heart_beat.c: 41: while(ADCON0bits.ADGO);
   697                           
   698  05F3  0021               	movlb	1	; select bank1
   699  05F4  189D               	btfsc	29,1	;volatile
   700  05F5  2DF3               	goto	l41
   701                           
   702                           ;heart_beat.c: 43: temp=ADRESH;
   703  05F6  081C               	movf	28,w	;volatile
   704  05F7  00F0               	movwf	??_read_ad
   705  05F8  01F1               	clrf	??_read_ad+1
   706  05F9  0870               	movf	??_read_ad,w
   707  05FA  00F2               	movwf	read_ad@temp
   708  05FB  0871               	movf	??_read_ad+1,w
   709  05FC  00F3               	movwf	read_ad@temp+1
   710                           
   711                           ;heart_beat.c: 44: ADCON0bits.ADGO=1;
   712  05FD  149D               	bsf	29,1	;volatile
   713                           
   714                           ;heart_beat.c: 45: temp/=16;
   715  05FE  3004               	movlw	4
   716  05FF                     u325:	
   717  05FF  36F3               	lsrf	read_ad@temp+1,f
   718  0600  0CF2               	rrf	read_ad@temp,f
   719  0601  0B89               	decfsz	9,f
   720  0602  2DFF               	goto	u325
   721                           
   722                           ;heart_beat.c: 46: return temp;
   723  0603  0872               	movf	read_ad@temp,w
   724  0604  0008               	return
   725  0605                     __end_of_read_ad:	
   726                           
   727                           	psect	text2
   728  064E                     __ptext2:	
   729 ;; *************** function _init_eccp *****************
   730 ;; Defined at:
   731 ;;		line 123 in file "heart_beat.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;		None               void
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   745 ;;      Params:         0       0       0       0
   746 ;;      Locals:         0       0       0       0
   747 ;;      Temps:          0       0       0       0
   748 ;;      Totals:         0       0       0       0
   749 ;;Total ram usage:        0 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           
   759                           ;psect for function _init_eccp
   760  064E                     _init_eccp:	
   761                           
   762                           ;heart_beat.c: 125: TRISAbits.TRISA0=1;
   763                           
   764                           ;incstack = 0
   765                           ; Regs used in _init_eccp: [wreg+status,2+status,0]
   766  064E  0021               	movlb	1	; select bank1
   767  064F  140C               	bsf	12,0	;volatile
   768                           
   769                           ;heart_beat.c: 126: TRISAbits.TRISA2=1;
   770  0650  150C               	bsf	12,2	;volatile
   771                           
   772                           ;heart_beat.c: 127: PR2=0xff;
   773  0651  30FF               	movlw	255
   774  0652  0020               	movlb	0	; select bank0
   775  0653  009B               	movwf	27	;volatile
   776                           
   777                           ;heart_beat.c: 128: CCP1CONbits.P1M=0;
   778  0654  303F               	movlw	-193
   779  0655  0025               	movlb	5	; select bank5
   780  0656  0593               	andwf	19,f	;volatile
   781                           
   782                           ;heart_beat.c: 129: CCP1CONbits.CCP1M=0b1100;
   783  0657  0813               	movf	19,w	;volatile
   784  0658  39F0               	andlw	-16
   785  0659  380C               	iorlw	12
   786  065A  0093               	movwf	19	;volatile
   787                           
   788                           ;heart_beat.c: 130: CCP1CONbits.DC1B=0;
   789  065B  30CF               	movlw	-49
   790  065C  0593               	andwf	19,f	;volatile
   791                           
   792                           ;heart_beat.c: 131: CCPR1L=10;
   793  065D  300A               	movlw	10
   794  065E  0091               	movwf	17	;volatile
   795                           
   796                           ;heart_beat.c: 132: PIR1bits.TMR2IF=0;
   797  065F  0020               	movlb	0	; select bank0
   798  0660  1091               	bcf	17,1	;volatile
   799                           
   800                           ;heart_beat.c: 133: T2CONbits.T2CKPS=2;
   801  0661  081C               	movf	28,w	;volatile
   802  0662  39FC               	andlw	-4
   803  0663  3802               	iorlw	2
   804  0664  009C               	movwf	28	;volatile
   805                           
   806                           ;heart_beat.c: 135: T2CONbits.TMR2ON=1;
   807  0665  151C               	bsf	28,2	;volatile
   808                           
   809                           ;heart_beat.c: 140: TRISAbits.TRISA2=0;
   810  0666  0021               	movlb	1	; select bank1
   811  0667  110C               	bcf	12,2	;volatile
   812  0668  0008               	return
   813  0669                     __end_of_init_eccp:	
   814                           
   815                           	psect	text3
   816  061B                     __ptext3:	
   817 ;; *************** function _init_adc *****************
   818 ;; Defined at:
   819 ;;		line 110 in file "heart_beat.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;		None               void
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   833 ;;      Params:         0       0       0       0
   834 ;;      Locals:         0       0       0       0
   835 ;;      Temps:          1       0       0       0
   836 ;;      Totals:         1       0       0       0
   837 ;;Total ram usage:        1 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           
   847                           ;psect for function _init_adc
   848  061B                     _init_adc:	
   849                           
   850                           ;heart_beat.c: 113: ADCON1bits.ADCS=0b011;
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _init_adc: [wreg+status,2+status,0]
   854  061B  0021               	movlb	1	; select bank1
   855  061C  081E               	movf	30,w	;volatile
   856  061D  398F               	andlw	-113
   857  061E  3830               	iorlw	48
   858  061F  009E               	movwf	30	;volatile
   859                           
   860                           ;heart_beat.c: 114: ADCON1bits.ADPREF=0;
   861  0620  30FC               	movlw	-4
   862  0621  059E               	andwf	30,f	;volatile
   863                           
   864                           ;heart_beat.c: 115: ADCON1bits.ADFM=0;
   865  0622  139E               	bcf	30,7	;volatile
   866                           
   867                           ;heart_beat.c: 116: TRISAbits.TRISA4=1;
   868  0623  160C               	bsf	12,4	;volatile
   869                           
   870                           ;heart_beat.c: 117: ANSELAbits.ANSA4=1;
   871  0624  0023               	movlb	3	; select bank3
   872  0625  160C               	bsf	12,4	;volatile
   873                           
   874                           ;heart_beat.c: 118: ADCON0bits.CHS=0b00011;
   875  0626  0021               	movlb	1	; select bank1
   876  0627  081D               	movf	29,w	;volatile
   877  0628  3983               	andlw	-125
   878  0629  380C               	iorlw	12
   879  062A  009D               	movwf	29	;volatile
   880                           
   881                           ;heart_beat.c: 119: ADCON0bits.ADON=1;
   882  062B  141D               	bsf	29,0	;volatile
   883                           
   884                           ;heart_beat.c: 120: _delay((unsigned long)((10)*(32000000/4000000.0)));
   885  062C  301A               	movlw	26
   886  062D  00F0               	movwf	??_init_adc
   887  062E                     u617:	
   888  062E  0BF0               	decfsz	??_init_adc,f
   889  062F  2E2E               	goto	u617
   890  0630  0000               	nop
   891                           
   892                           ;heart_beat.c: 121: ADCON0bits.ADGO=1;
   893  0631  0021               	movlb	1	; select bank1
   894  0632  149D               	bsf	29,1	;volatile
   895  0633  0008               	return
   896  0634                     __end_of_init_adc:	
   897                           
   898                           	psect	text4
   899  05E4                     __ptext4:	
   900 ;; *************** function _init *****************
   901 ;; Defined at:
   902 ;;		line 99 in file "heart_beat.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;		None               void
   909 ;; Registers used:
   910 ;;		wreg, status,2, status,0
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   916 ;;      Params:         0       0       0       0
   917 ;;      Locals:         0       0       0       0
   918 ;;      Temps:          0       0       0       0
   919 ;;      Totals:         0       0       0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           
   930                           ;psect for function _init
   931  05E4                     _init:	
   932                           
   933                           ;heart_beat.c: 102: OSCCONbits.SCS=0;
   934                           
   935                           ;incstack = 0
   936                           ; Regs used in _init: [wreg+status,2+status,0]
   937  05E4  30FC               	movlw	-4
   938  05E5  0021               	movlb	1	; select bank1
   939  05E6  0599               	andwf	25,f	;volatile
   940                           
   941                           ;heart_beat.c: 103: OSCCONbits.IRCF=0b1110;
   942  05E7  0819               	movf	25,w	;volatile
   943  05E8  3987               	andlw	-121
   944  05E9  3870               	iorlw	112
   945  05EA  0099               	movwf	25	;volatile
   946                           
   947                           ;heart_beat.c: 105: APFCONbits.CCP1SEL=0;
   948  05EB  0022               	movlb	2	; select bank2
   949  05EC  101D               	bcf	29,0	;volatile
   950                           
   951                           ;heart_beat.c: 106: APFCONbits.P1BSEL=0;
   952  05ED  109D               	bcf	29,1	;volatile
   953                           
   954                           ;heart_beat.c: 107: PORTA=0;
   955  05EE  0020               	movlb	0	; select bank0
   956  05EF  018C               	clrf	12	;volatile
   957  05F0  0008               	return
   958  05F1                     __end_of_init:	
   959                           
   960                           	psect	text5
   961  0605                     __ptext5:	
   962 ;; *************** function _delay_us *****************
   963 ;; Defined at:
   964 ;;		line 151 in file "heart_beat.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  d               2    6[COMMON] unsigned int 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  temp            1    9[COMMON] unsigned char 
   969 ;; Return value:  Size  Location     Type
   970 ;;		None               void
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   978 ;;      Params:         2       0       0       0
   979 ;;      Locals:         1       0       0       0
   980 ;;      Temps:          1       0       0       0
   981 ;;      Totals:         4       0       0       0
   982 ;;Total ram usage:        4 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function _delay_us
   993  0605                     _delay_us:	
   994  0605                     l993:	
   995                           ;heart_beat.c: 153: unsigned char temp;
   996                           ;heart_beat.c: 154: while(d--)
   997                           
   998                           ;incstack = 0
   999                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  1000                           
  1001  0605  3001               	movlw	1
  1002  0606  02F6               	subwf	delay_us@d,f
  1003  0607  3000               	movlw	0
  1004  0608  3BF7               	subwfb	delay_us@d+1,f
  1005  0609  30FF               	movlw	255
  1006  060A  0677               	xorwf	delay_us@d+1,w
  1007  060B  1D03               	skipz
  1008  060C  2E0F               	goto	u525
  1009  060D  30FF               	movlw	255
  1010  060E  0676               	xorwf	delay_us@d,w
  1011  060F                     u525:	
  1012  060F  1903               	btfsc	3,2
  1013  0610  0008               	return
  1014                           
  1015                           ;heart_beat.c: 155: for(temp=0;temp<=1;temp++);
  1016  0611  01F9               	clrf	delay_us@temp
  1017  0612                     L1:	
  1018  0612  3002               	movlw	2
  1019  0613  0279               	subwf	delay_us@temp,w
  1020  0614  1803               	btfsc	3,0
  1021  0615  2E05               	goto	l993
  1022  0616  3001               	movlw	1
  1023  0617  00F8               	movwf	??_delay_us
  1024  0618  0878               	movf	??_delay_us,w
  1025  0619  07F9               	addwf	delay_us@temp,f
  1026  061A  2E12               	goto	L1
  1027  061B                     __end_of_delay_us:	
  1028                           
  1029                           	psect	text6
  1030  0634                     __ptext6:	
  1031 ;; *************** function _delay_nr *****************
  1032 ;; Defined at:
  1033 ;;		line 145 in file "heart_beat.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  Da              2    9[COMMON] unsigned int 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  att             2   11[COMMON] unsigned int 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;		None               void
  1040 ;; Registers used:
  1041 ;;		wreg, status,2
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1047 ;;      Params:         2       0       0       0
  1048 ;;      Locals:         2       0       0       0
  1049 ;;      Temps:          0       0       0       0
  1050 ;;      Totals:         4       0       0       0
  1051 ;;Total ram usage:        4 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           
  1061                           ;psect for function _delay_nr
  1062  0634                     _delay_nr:	
  1063  0634                     l979:	
  1064                           ;heart_beat.c: 147: unsigned int att;
  1065                           ;heart_beat.c: 148: while(Da--)
  1066                           
  1067                           ;incstack = 0
  1068                           ; Regs used in _delay_nr: [wreg+status,2]
  1069                           
  1070  0634  3001               	movlw	1
  1071  0635  02F9               	subwf	delay_nr@Da,f
  1072  0636  3000               	movlw	0
  1073  0637  3BFA               	subwfb	delay_nr@Da+1,f
  1074  0638  30FF               	movlw	255
  1075  0639  067A               	xorwf	delay_nr@Da+1,w
  1076  063A  1D03               	skipz
  1077  063B  2E3E               	goto	u495
  1078  063C  30FF               	movlw	255
  1079  063D  0679               	xorwf	delay_nr@Da,w
  1080  063E                     u495:	
  1081  063E  1903               	btfsc	3,2
  1082  063F  0008               	return
  1083                           
  1084                           ;heart_beat.c: 149: for(att=0;att<1000;att++);
  1085  0640  01FB               	clrf	delay_nr@att
  1086  0641  01FC               	clrf	delay_nr@att+1
  1087  0642                     L2:	
  1088  0642  3003               	movlw	3
  1089  0643  027C               	subwf	delay_nr@att+1,w
  1090  0644  30E8               	movlw	232
  1091  0645  1903               	skipnz
  1092  0646  027B               	subwf	delay_nr@att,w
  1093  0647  1803               	btfsc	3,0
  1094  0648  2E34               	goto	l979
  1095  0649  3001               	movlw	1
  1096  064A  07FB               	addwf	delay_nr@att,f
  1097  064B  3000               	movlw	0
  1098  064C  3DFC               	addwfc	delay_nr@att+1,f
  1099  064D  2E42               	goto	L2
  1100  064E                     __end_of_delay_nr:	
  1101                           
  1102                           	psect	text7
  1103  0669                     __ptext7:	
  1104 ;; *************** function ___wmul *****************
  1105 ;; Defined at:
  1106 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\wmul.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  multiplier      2    0[COMMON] unsigned int 
  1109 ;;  multiplicand    2    2[COMMON] unsigned int 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  product         2    4[COMMON] unsigned int 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  2    0[COMMON] unsigned int 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1121 ;;      Params:         4       0       0       0
  1122 ;;      Locals:         2       0       0       0
  1123 ;;      Temps:          0       0       0       0
  1124 ;;      Totals:         6       0       0       0
  1125 ;;Total ram usage:        6 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_main
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           
  1135                           ;psect for function ___wmul
  1136  0669                     ___wmul:	
  1137                           
  1138                           ;incstack = 0
  1139                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1140  0669  01F4               	clrf	___wmul@product
  1141  066A  01F5               	clrf	___wmul@product+1
  1142  066B                     l945:	
  1143  066B  1C70               	btfss	___wmul@multiplier,0
  1144  066C  2E71               	goto	l515
  1145  066D  0872               	movf	___wmul@multiplicand,w
  1146  066E  07F4               	addwf	___wmul@product,f
  1147  066F  0873               	movf	___wmul@multiplicand+1,w
  1148  0670  3DF5               	addwfc	___wmul@product+1,f
  1149  0671                     l515:	
  1150  0671  3001               	movlw	1
  1151  0672                     u445:	
  1152  0672  35F2               	lslf	___wmul@multiplicand,f
  1153  0673  0DF3               	rlf	___wmul@multiplicand+1,f
  1154  0674  0B89               	decfsz	9,f
  1155  0675  2E72               	goto	u445
  1156  0676  3001               	movlw	1
  1157  0677                     u455:	
  1158  0677  36F1               	lsrf	___wmul@multiplier+1,f
  1159  0678  0CF0               	rrf	___wmul@multiplier,f
  1160  0679  0B89               	decfsz	9,f
  1161  067A  2E77               	goto	u455
  1162  067B  0871               	movf	___wmul@multiplier+1,w
  1163  067C  0470               	iorwf	___wmul@multiplier,w
  1164  067D  1D03               	skipz
  1165  067E  2E6B               	goto	l945
  1166  067F  0875               	movf	___wmul@product+1,w
  1167  0680  01F1               	clrf	?___wmul+1
  1168  0681  07F1               	addwf	?___wmul+1,f
  1169  0682  0874               	movf	___wmul@product,w
  1170  0683  01F0               	clrf	?___wmul
  1171  0684  07F0               	addwf	?___wmul,f
  1172  0685  0008               	return
  1173  0686                     __end_of___wmul:	
  1174                           
  1175                           	psect	text8
  1176  0686                     __ptext8:	
  1177 ;; *************** function ___awdiv *****************
  1178 ;; Defined at:
  1179 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\awdiv.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  divisor         2    0[COMMON] int 
  1182 ;;  dividend        2    2[COMMON] int 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  quotient        2    7[COMMON] int 
  1185 ;;  sign            1    6[COMMON] unsigned char 
  1186 ;;  counter         1    5[COMMON] unsigned char 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  2    0[COMMON] int 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1196 ;;      Params:         4       0       0       0
  1197 ;;      Locals:         4       0       0       0
  1198 ;;      Temps:          1       0       0       0
  1199 ;;      Totals:         9       0       0       0
  1200 ;;Total ram usage:        9 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function ___awdiv
  1211  0686                     ___awdiv:	
  1212                           
  1213                           ;incstack = 0
  1214                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1215  0686  01F6               	clrf	___awdiv@sign
  1216  0687  1FF1               	btfss	___awdiv@divisor+1,7
  1217  0688  2E90               	goto	l907
  1218  0689  09F0               	comf	___awdiv@divisor,f
  1219  068A  09F1               	comf	___awdiv@divisor+1,f
  1220  068B  0AF0               	incf	___awdiv@divisor,f
  1221  068C  1903               	skipnz
  1222  068D  0AF1               	incf	___awdiv@divisor+1,f
  1223  068E  01F6               	clrf	___awdiv@sign
  1224  068F  0AF6               	incf	___awdiv@sign,f
  1225  0690                     l907:	
  1226  0690  1FF3               	btfss	___awdiv@dividend+1,7
  1227  0691  2E9B               	goto	l913
  1228  0692  09F2               	comf	___awdiv@dividend,f
  1229  0693  09F3               	comf	___awdiv@dividend+1,f
  1230  0694  0AF2               	incf	___awdiv@dividend,f
  1231  0695  1903               	skipnz
  1232  0696  0AF3               	incf	___awdiv@dividend+1,f
  1233  0697  3001               	movlw	1
  1234  0698  00F4               	movwf	??___awdiv
  1235  0699  0874               	movf	??___awdiv,w
  1236  069A  06F6               	xorwf	___awdiv@sign,f
  1237  069B                     l913:	
  1238  069B  01F7               	clrf	___awdiv@quotient
  1239  069C  01F8               	clrf	___awdiv@quotient+1
  1240  069D  0871               	movf	___awdiv@divisor+1,w
  1241  069E  0470               	iorwf	___awdiv@divisor,w
  1242  069F  1903               	skipnz
  1243  06A0  2ECA               	goto	l935
  1244  06A1  01F5               	clrf	___awdiv@counter
  1245  06A2  0AF5               	incf	___awdiv@counter,f
  1246  06A3                     l923:	
  1247  06A3  1BF1               	btfsc	___awdiv@divisor+1,7
  1248  06A4  2EAF               	goto	l925
  1249  06A5  3001               	movlw	1
  1250  06A6                     u365:	
  1251  06A6  35F0               	lslf	___awdiv@divisor,f
  1252  06A7  0DF1               	rlf	___awdiv@divisor+1,f
  1253  06A8  0B89               	decfsz	9,f
  1254  06A9  2EA6               	goto	u365
  1255  06AA  3001               	movlw	1
  1256  06AB  00F4               	movwf	??___awdiv
  1257  06AC  0874               	movf	??___awdiv,w
  1258  06AD  07F5               	addwf	___awdiv@counter,f
  1259  06AE  2EA3               	goto	l923
  1260  06AF                     l925:	
  1261  06AF  3001               	movlw	1
  1262  06B0                     u385:	
  1263  06B0  35F7               	lslf	___awdiv@quotient,f
  1264  06B1  0DF8               	rlf	___awdiv@quotient+1,f
  1265  06B2  0B89               	decfsz	9,f
  1266  06B3  2EB0               	goto	u385
  1267  06B4  0871               	movf	___awdiv@divisor+1,w
  1268  06B5  0273               	subwf	___awdiv@dividend+1,w
  1269  06B6  1D03               	skipz
  1270  06B7  2EBA               	goto	u395
  1271  06B8  0870               	movf	___awdiv@divisor,w
  1272  06B9  0272               	subwf	___awdiv@dividend,w
  1273  06BA                     u395:	
  1274  06BA  1C03               	skipc
  1275  06BB  2EC1               	goto	l931
  1276  06BC  0870               	movf	___awdiv@divisor,w
  1277  06BD  02F2               	subwf	___awdiv@dividend,f
  1278  06BE  0871               	movf	___awdiv@divisor+1,w
  1279  06BF  3BF3               	subwfb	___awdiv@dividend+1,f
  1280  06C0  1477               	bsf	___awdiv@quotient,0
  1281  06C1                     l931:	
  1282  06C1  3001               	movlw	1
  1283  06C2                     u405:	
  1284  06C2  36F1               	lsrf	___awdiv@divisor+1,f
  1285  06C3  0CF0               	rrf	___awdiv@divisor,f
  1286  06C4  0B89               	decfsz	9,f
  1287  06C5  2EC2               	goto	u405
  1288  06C6  3001               	movlw	1
  1289  06C7  02F5               	subwf	___awdiv@counter,f
  1290  06C8  1D03               	btfss	3,2
  1291  06C9  2EAF               	goto	l925
  1292  06CA                     l935:	
  1293  06CA  0876               	movf	___awdiv@sign,w
  1294  06CB  1903               	btfsc	3,2
  1295  06CC  2ED2               	goto	l939
  1296  06CD  09F7               	comf	___awdiv@quotient,f
  1297  06CE  09F8               	comf	___awdiv@quotient+1,f
  1298  06CF  0AF7               	incf	___awdiv@quotient,f
  1299  06D0  1903               	skipnz
  1300  06D1  0AF8               	incf	___awdiv@quotient+1,f
  1301  06D2                     l939:	
  1302  06D2  0878               	movf	___awdiv@quotient+1,w
  1303  06D3  01F1               	clrf	?___awdiv+1
  1304  06D4  07F1               	addwf	?___awdiv+1,f
  1305  06D5  0877               	movf	___awdiv@quotient,w
  1306  06D6  01F0               	clrf	?___awdiv
  1307  06D7  07F0               	addwf	?___awdiv,f
  1308  06D8  0008               	return
  1309  06D9                     __end_of___awdiv:	
  1310  007E                     btemp	set	126	;btemp
  1311  007E                     wtemp	set	126
  1312  007E                     wtemp0	set	126
  1313  0080                     wtemp1	set	128
  1314  0082                     wtemp2	set	130
  1315  0084                     wtemp3	set	132
  1316  0086                     wtemp4	set	134
  1317  0088                     wtemp5	set	136
  1318  007F                     wtemp6	set	127
  1319  007E                     ttemp	set	126
  1320  007E                     ttemp0	set	126
  1321  0081                     ttemp1	set	129
  1322  0084                     ttemp2	set	132
  1323  0087                     ttemp3	set	135
  1324  007F                     ttemp4	set	127
  1325  007E                     ltemp	set	126
  1326  007E                     ltemp0	set	126
  1327  0082                     ltemp1	set	130
  1328  0086                     ltemp2	set	134
  1329  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      4       4
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay_nr
    _delay_us->___wmul
    _delay_nr->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1992
                                              0 BANK0      4     4      0
                            ___awdiv
                             ___wmul
                           _delay_nr
                           _delay_us
                               _init
                           _init_adc
                          _init_eccp
                            _read_ad
 ---------------------------------------------------------------------------------
 (1) _read_ad                                              4     4      0      25
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _init_eccp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_us                                             4     2      2     227
                                              6 COMMON     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _delay_nr                                             4     2      2     280
                                              9 COMMON     4     2      2
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     622
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___wmul
   _delay_nr
     ___awdiv (ARG)
     ___wmul (ARG)
   _delay_us
     ___wmul (ARG)
   _init
   _init_adc
   _init_eccp
   _read_ad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Aug 28 22:38:47 2014

            __CFG_CP$OFF 0000                       l41 05F3             ___awdiv@sign 0076  
    ___wmul@multiplicand 0072                      l515 0671                      l913 069B  
                    l931 06C1                      l923 06A3                      l907 0690  
                    l925 06AF                      l935 06CA                      l945 066B  
                    l939 06D2                      l993 0605                      l979 0634  
                    u405 06C2                      u325 05FF                      _PR2 001B  
           __CFG_CPD$OFF 0000                      u365 06A6                      u445 0672  
                    u525 060F                      u455 0677                      u385 06B0  
                    u617 062E                      u395 06BA                      u495 063E  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_IESO$ON 0000  
           __CFG_LVP$OFF 0000                     l1003 06E4                     l1013 070E  
                   l1023 0739                     l1027 0741                     l1061 07B9  
                   l1037 076A                     l1071 07E2                     l1047 0786  
                   l1057 07B1             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 06D9                     _init 05E4                     btemp 007E  
                   ltemp 007E                     start 0002                     ttemp 007E  
                   wtemp 007E            __CFG_MCLRE$ON 0000            __CFG_PLLEN$ON 0000  
                  ?_main 0070                    ?_init 0070          __end_of___awdiv 06D9  
          __CFG_WDTE$OFF 0000          ___awdiv@divisor 0070          ___awdiv@counter 0075  
                  _PORTA 000C          __end_of_read_ad 0605                    main@x 0022  
                  main@y 0023           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FD             __end_of_main 07FD  
           __end_of_init 05F1                   ??_main 0020                   ??_init 0070  
                 _ADRESH 009C                   _CCPR1L 0291         ___awdiv@dividend 0072  
       __end_of_delay_nr 064E         __end_of_delay_us 061B           __CFG_PWRTE$OFF 0000  
                 ___wmul 0669                ??___awdiv 0074           __CFG_STVREN$ON 0000  
       __end_of_init_adc 0634         ___awdiv@quotient 0077              read_ad@temp 0072  
              ??_read_ad 0070  __end_of__initialization 07FD           __pcstackCOMMON 0070  
     __size_of_init_eccp 001B               __pmaintext 06D9                  ?___wmul 0070  
              ?_delay_nr 0079                ?_delay_us 0076                ?_init_adc 0070  
                ___awdiv 0686          __size_of___wmul 001D                  __ptext0 0000  
                __ptext1 05F1                  __ptext2 064E                  __ptext3 061B  
                __ptext4 05E4                  __ptext5 0605                  __ptext6 0634  
                __ptext7 0669                  __ptext8 0686                _T2CONbits 001C  
      __end_of_init_eccp 0669                  _read_ad 05F1               ??_delay_nr 007B  
             ??_delay_us 0078               delay_nr@Da 0079     end_of_initialization 07FD  
             ??_init_adc 0070         __CFG_FOSC$INTOSC 0000                _TRISAbits 008C  
            _CCP1CONbits 0293           __end_of___wmul 0686      start_initialization 07FD  
               ??___wmul 0074                ___latbits 0001            __pcstackBANK0 0020  
      __size_of_delay_nr 001A        __size_of_delay_us 0016        __size_of_init_adc 0019  
               ?___awdiv 0070                 ?_read_ad 0070                _init_eccp 064E  
         ___wmul@product 0074                delay_us@d 0076                 _PIR1bits 0011  
             _ADCON0bits 009D               _ADCON1bits 009E        ___wmul@multiplier 0070  
             ?_init_eccp 0070             delay_us@temp 0079               _APFCONbits 011D  
       __size_of___awdiv 0053               _ANSELAbits 018C         __size_of_read_ad 0014  
               _delay_nr 0634                 _delay_us 0605                 _init_adc 061B  
          __size_of_main 0124            __size_of_init 000D              delay_nr@att 007B  
            ??_init_eccp 0070        __CFG_CLKOUTEN$OFF 0000               _OSCCONbits 0099  
