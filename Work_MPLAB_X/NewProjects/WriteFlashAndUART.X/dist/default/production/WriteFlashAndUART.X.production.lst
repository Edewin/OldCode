

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Jan 03 11:21:01 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000E                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001C                     	;# 
    55  008C                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0095                     	;# 
    61  0096                     	;# 
    62  0097                     	;# 
    63  0099                     	;# 
    64  009A                     	;# 
    65  009B                     	;# 
    66  009B                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  009F                     	;# 
    71  010C                     	;# 
    72  010E                     	;# 
    73  0111                     	;# 
    74  0112                     	;# 
    75  0113                     	;# 
    76  0114                     	;# 
    77  0115                     	;# 
    78  0116                     	;# 
    79  0117                     	;# 
    80  0118                     	;# 
    81  0119                     	;# 
    82  011D                     	;# 
    83  018C                     	;# 
    84  018E                     	;# 
    85  0191                     	;# 
    86  0191                     	;# 
    87  0192                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0194                     	;# 
    91  0195                     	;# 
    92  0196                     	;# 
    93  0197                     	;# 
    94  020C                     	;# 
    95  0211                     	;# 
    96  0211                     	;# 
    97  0212                     	;# 
    98  0212                     	;# 
    99  0213                     	;# 
   100  0213                     	;# 
   101  0214                     	;# 
   102  0214                     	;# 
   103  0215                     	;# 
   104  0215                     	;# 
   105  0215                     	;# 
   106  0216                     	;# 
   107  0216                     	;# 
   108  0217                     	;# 
   109  0217                     	;# 
   110  0391                     	;# 
   111  0392                     	;# 
   112  0393                     	;# 
   113  0498                     	;# 
   114  0498                     	;# 
   115  0499                     	;# 
   116  049A                     	;# 
   117  049B                     	;# 
   118  049B                     	;# 
   119  049C                     	;# 
   120  049E                     	;# 
   121  049F                     	;# 
   122  0611                     	;# 
   123  0612                     	;# 
   124  0613                     	;# 
   125  0613                     	;# 
   126  0614                     	;# 
   127  0615                     	;# 
   128  0616                     	;# 
   129  0616                     	;# 
   130  0617                     	;# 
   131  0618                     	;# 
   132  0619                     	;# 
   133  0619                     	;# 
   134  061A                     	;# 
   135  061B                     	;# 
   136  061C                     	;# 
   137  061C                     	;# 
   138  0691                     	;# 
   139  0692                     	;# 
   140  0693                     	;# 
   141  0694                     	;# 
   142  0695                     	;# 
   143  0F0F                     	;# 
   144  0F10                     	;# 
   145  0F11                     	;# 
   146  0F12                     	;# 
   147  0F13                     	;# 
   148  0F14                     	;# 
   149  0F15                     	;# 
   150  0F16                     	;# 
   151  0F17                     	;# 
   152  0F18                     	;# 
   153  0F19                     	;# 
   154  0F1A                     	;# 
   155  0F1B                     	;# 
   156  0F1C                     	;# 
   157  0F1D                     	;# 
   158  0F1E                     	;# 
   159  0F1F                     	;# 
   160  0FE3                     	;# 
   161  0FE4                     	;# 
   162  0FE5                     	;# 
   163  0FE6                     	;# 
   164  0FE7                     	;# 
   165  0FE8                     	;# 
   166  0FE9                     	;# 
   167  0FEA                     	;# 
   168  0FEB                     	;# 
   169  0FED                     	;# 
   170  0FEE                     	;# 
   171  0FEF                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000E                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  008C                     	;# 
   199  008E                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  010C                     	;# 
   215  010E                     	;# 
   216  0111                     	;# 
   217  0112                     	;# 
   218  0113                     	;# 
   219  0114                     	;# 
   220  0115                     	;# 
   221  0116                     	;# 
   222  0117                     	;# 
   223  0118                     	;# 
   224  0119                     	;# 
   225  011D                     	;# 
   226  018C                     	;# 
   227  018E                     	;# 
   228  0191                     	;# 
   229  0191                     	;# 
   230  0192                     	;# 
   231  0193                     	;# 
   232  0193                     	;# 
   233  0194                     	;# 
   234  0195                     	;# 
   235  0196                     	;# 
   236  0197                     	;# 
   237  020C                     	;# 
   238  0211                     	;# 
   239  0211                     	;# 
   240  0212                     	;# 
   241  0212                     	;# 
   242  0213                     	;# 
   243  0213                     	;# 
   244  0214                     	;# 
   245  0214                     	;# 
   246  0215                     	;# 
   247  0215                     	;# 
   248  0215                     	;# 
   249  0216                     	;# 
   250  0216                     	;# 
   251  0217                     	;# 
   252  0217                     	;# 
   253  0391                     	;# 
   254  0392                     	;# 
   255  0393                     	;# 
   256  0498                     	;# 
   257  0498                     	;# 
   258  0499                     	;# 
   259  049A                     	;# 
   260  049B                     	;# 
   261  049B                     	;# 
   262  049C                     	;# 
   263  049E                     	;# 
   264  049F                     	;# 
   265  0611                     	;# 
   266  0612                     	;# 
   267  0613                     	;# 
   268  0613                     	;# 
   269  0614                     	;# 
   270  0615                     	;# 
   271  0616                     	;# 
   272  0616                     	;# 
   273  0617                     	;# 
   274  0618                     	;# 
   275  0619                     	;# 
   276  0619                     	;# 
   277  061A                     	;# 
   278  061B                     	;# 
   279  061C                     	;# 
   280  061C                     	;# 
   281  0691                     	;# 
   282  0692                     	;# 
   283  0693                     	;# 
   284  0694                     	;# 
   285  0695                     	;# 
   286  0F0F                     	;# 
   287  0F10                     	;# 
   288  0F11                     	;# 
   289  0F12                     	;# 
   290  0F13                     	;# 
   291  0F14                     	;# 
   292  0F15                     	;# 
   293  0F16                     	;# 
   294  0F17                     	;# 
   295  0F18                     	;# 
   296  0F19                     	;# 
   297  0F1A                     	;# 
   298  0F1B                     	;# 
   299  0F1C                     	;# 
   300  0F1D                     	;# 
   301  0F1E                     	;# 
   302  0F1F                     	;# 
   303  0FE3                     	;# 
   304  0FE4                     	;# 
   305  0FE5                     	;# 
   306  0FE6                     	;# 
   307  0FE7                     	;# 
   308  0FE8                     	;# 
   309  0FE9                     	;# 
   310  0FEA                     	;# 
   311  0FEB                     	;# 
   312  0FED                     	;# 
   313  0FEE                     	;# 
   314  0FEF                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000E                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  008C                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  010C                     	;# 
   358  010E                     	;# 
   359  0111                     	;# 
   360  0112                     	;# 
   361  0113                     	;# 
   362  0114                     	;# 
   363  0115                     	;# 
   364  0116                     	;# 
   365  0117                     	;# 
   366  0118                     	;# 
   367  0119                     	;# 
   368  011D                     	;# 
   369  018C                     	;# 
   370  018E                     	;# 
   371  0191                     	;# 
   372  0191                     	;# 
   373  0192                     	;# 
   374  0193                     	;# 
   375  0193                     	;# 
   376  0194                     	;# 
   377  0195                     	;# 
   378  0196                     	;# 
   379  0197                     	;# 
   380  020C                     	;# 
   381  0211                     	;# 
   382  0211                     	;# 
   383  0212                     	;# 
   384  0212                     	;# 
   385  0213                     	;# 
   386  0213                     	;# 
   387  0214                     	;# 
   388  0214                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0215                     	;# 
   392  0216                     	;# 
   393  0216                     	;# 
   394  0217                     	;# 
   395  0217                     	;# 
   396  0391                     	;# 
   397  0392                     	;# 
   398  0393                     	;# 
   399  0498                     	;# 
   400  0498                     	;# 
   401  0499                     	;# 
   402  049A                     	;# 
   403  049B                     	;# 
   404  049B                     	;# 
   405  049C                     	;# 
   406  049E                     	;# 
   407  049F                     	;# 
   408  0611                     	;# 
   409  0612                     	;# 
   410  0613                     	;# 
   411  0613                     	;# 
   412  0614                     	;# 
   413  0615                     	;# 
   414  0616                     	;# 
   415  0616                     	;# 
   416  0617                     	;# 
   417  0618                     	;# 
   418  0619                     	;# 
   419  0619                     	;# 
   420  061A                     	;# 
   421  061B                     	;# 
   422  061C                     	;# 
   423  061C                     	;# 
   424  0691                     	;# 
   425  0692                     	;# 
   426  0693                     	;# 
   427  0694                     	;# 
   428  0695                     	;# 
   429  0F0F                     	;# 
   430  0F10                     	;# 
   431  0F11                     	;# 
   432  0F12                     	;# 
   433  0F13                     	;# 
   434  0F14                     	;# 
   435  0F15                     	;# 
   436  0F16                     	;# 
   437  0F17                     	;# 
   438  0F18                     	;# 
   439  0F19                     	;# 
   440  0F1A                     	;# 
   441  0F1B                     	;# 
   442  0F1C                     	;# 
   443  0F1D                     	;# 
   444  0F1E                     	;# 
   445  0F1F                     	;# 
   446  0FE3                     	;# 
   447  0FE4                     	;# 
   448  0FE5                     	;# 
   449  0FE6                     	;# 
   450  0FE7                     	;# 
   451  0FE8                     	;# 
   452  0FE9                     	;# 
   453  0FEA                     	;# 
   454  0FEB                     	;# 
   455  0FED                     	;# 
   456  0FEE                     	;# 
   457  0FEF                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0008                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000E                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0013                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  008C                     	;# 
   485  008E                     	;# 
   486  0091                     	;# 
   487  0092                     	;# 
   488  0093                     	;# 
   489  0095                     	;# 
   490  0096                     	;# 
   491  0097                     	;# 
   492  0099                     	;# 
   493  009A                     	;# 
   494  009B                     	;# 
   495  009B                     	;# 
   496  009C                     	;# 
   497  009D                     	;# 
   498  009E                     	;# 
   499  009F                     	;# 
   500  010C                     	;# 
   501  010E                     	;# 
   502  0111                     	;# 
   503  0112                     	;# 
   504  0113                     	;# 
   505  0114                     	;# 
   506  0115                     	;# 
   507  0116                     	;# 
   508  0117                     	;# 
   509  0118                     	;# 
   510  0119                     	;# 
   511  011D                     	;# 
   512  018C                     	;# 
   513  018E                     	;# 
   514  0191                     	;# 
   515  0191                     	;# 
   516  0192                     	;# 
   517  0193                     	;# 
   518  0193                     	;# 
   519  0194                     	;# 
   520  0195                     	;# 
   521  0196                     	;# 
   522  0197                     	;# 
   523  020C                     	;# 
   524  0211                     	;# 
   525  0211                     	;# 
   526  0212                     	;# 
   527  0212                     	;# 
   528  0213                     	;# 
   529  0213                     	;# 
   530  0214                     	;# 
   531  0214                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0215                     	;# 
   535  0216                     	;# 
   536  0216                     	;# 
   537  0217                     	;# 
   538  0217                     	;# 
   539  0391                     	;# 
   540  0392                     	;# 
   541  0393                     	;# 
   542  0498                     	;# 
   543  0498                     	;# 
   544  0499                     	;# 
   545  049A                     	;# 
   546  049B                     	;# 
   547  049B                     	;# 
   548  049C                     	;# 
   549  049E                     	;# 
   550  049F                     	;# 
   551  0611                     	;# 
   552  0612                     	;# 
   553  0613                     	;# 
   554  0613                     	;# 
   555  0614                     	;# 
   556  0615                     	;# 
   557  0616                     	;# 
   558  0616                     	;# 
   559  0617                     	;# 
   560  0618                     	;# 
   561  0619                     	;# 
   562  0619                     	;# 
   563  061A                     	;# 
   564  061B                     	;# 
   565  061C                     	;# 
   566  061C                     	;# 
   567  0691                     	;# 
   568  0692                     	;# 
   569  0693                     	;# 
   570  0694                     	;# 
   571  0695                     	;# 
   572  0F0F                     	;# 
   573  0F10                     	;# 
   574  0F11                     	;# 
   575  0F12                     	;# 
   576  0F13                     	;# 
   577  0F14                     	;# 
   578  0F15                     	;# 
   579  0F16                     	;# 
   580  0F17                     	;# 
   581  0F18                     	;# 
   582  0F19                     	;# 
   583  0F1A                     	;# 
   584  0F1B                     	;# 
   585  0F1C                     	;# 
   586  0F1D                     	;# 
   587  0F1E                     	;# 
   588  0F1F                     	;# 
   589  0FE3                     	;# 
   590  0FE4                     	;# 
   591  0FE5                     	;# 
   592  0FE6                     	;# 
   593  0FE7                     	;# 
   594  0FE8                     	;# 
   595  0FE9                     	;# 
   596  0FEA                     	;# 
   597  0FEB                     	;# 
   598  0FED                     	;# 
   599  0FEE                     	;# 
   600  0FEF                     	;# 
   601  0000                     	;# 
   602  0001                     	;# 
   603  0002                     	;# 
   604  0003                     	;# 
   605  0004                     	;# 
   606  0005                     	;# 
   607  0006                     	;# 
   608  0007                     	;# 
   609  0008                     	;# 
   610  0009                     	;# 
   611  000A                     	;# 
   612  000B                     	;# 
   613  000C                     	;# 
   614  000E                     	;# 
   615  0011                     	;# 
   616  0012                     	;# 
   617  0013                     	;# 
   618  0015                     	;# 
   619  0016                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  0019                     	;# 
   624  001A                     	;# 
   625  001B                     	;# 
   626  001C                     	;# 
   627  008C                     	;# 
   628  008E                     	;# 
   629  0091                     	;# 
   630  0092                     	;# 
   631  0093                     	;# 
   632  0095                     	;# 
   633  0096                     	;# 
   634  0097                     	;# 
   635  0099                     	;# 
   636  009A                     	;# 
   637  009B                     	;# 
   638  009B                     	;# 
   639  009C                     	;# 
   640  009D                     	;# 
   641  009E                     	;# 
   642  009F                     	;# 
   643  010C                     	;# 
   644  010E                     	;# 
   645  0111                     	;# 
   646  0112                     	;# 
   647  0113                     	;# 
   648  0114                     	;# 
   649  0115                     	;# 
   650  0116                     	;# 
   651  0117                     	;# 
   652  0118                     	;# 
   653  0119                     	;# 
   654  011D                     	;# 
   655  018C                     	;# 
   656  018E                     	;# 
   657  0191                     	;# 
   658  0191                     	;# 
   659  0192                     	;# 
   660  0193                     	;# 
   661  0193                     	;# 
   662  0194                     	;# 
   663  0195                     	;# 
   664  0196                     	;# 
   665  0197                     	;# 
   666  020C                     	;# 
   667  0211                     	;# 
   668  0211                     	;# 
   669  0212                     	;# 
   670  0212                     	;# 
   671  0213                     	;# 
   672  0213                     	;# 
   673  0214                     	;# 
   674  0214                     	;# 
   675  0215                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0216                     	;# 
   679  0216                     	;# 
   680  0217                     	;# 
   681  0217                     	;# 
   682  0391                     	;# 
   683  0392                     	;# 
   684  0393                     	;# 
   685  0498                     	;# 
   686  0498                     	;# 
   687  0499                     	;# 
   688  049A                     	;# 
   689  049B                     	;# 
   690  049B                     	;# 
   691  049C                     	;# 
   692  049E                     	;# 
   693  049F                     	;# 
   694  0611                     	;# 
   695  0612                     	;# 
   696  0613                     	;# 
   697  0613                     	;# 
   698  0614                     	;# 
   699  0615                     	;# 
   700  0616                     	;# 
   701  0616                     	;# 
   702  0617                     	;# 
   703  0618                     	;# 
   704  0619                     	;# 
   705  0619                     	;# 
   706  061A                     	;# 
   707  061B                     	;# 
   708  061C                     	;# 
   709  061C                     	;# 
   710  0691                     	;# 
   711  0692                     	;# 
   712  0693                     	;# 
   713  0694                     	;# 
   714  0695                     	;# 
   715  0F0F                     	;# 
   716  0F10                     	;# 
   717  0F11                     	;# 
   718  0F12                     	;# 
   719  0F13                     	;# 
   720  0F14                     	;# 
   721  0F15                     	;# 
   722  0F16                     	;# 
   723  0F17                     	;# 
   724  0F18                     	;# 
   725  0F19                     	;# 
   726  0F1A                     	;# 
   727  0F1B                     	;# 
   728  0F1C                     	;# 
   729  0F1D                     	;# 
   730  0F1E                     	;# 
   731  0F1F                     	;# 
   732  0FE3                     	;# 
   733  0FE4                     	;# 
   734  0FE5                     	;# 
   735  0FE6                     	;# 
   736  0FE7                     	;# 
   737  0FE8                     	;# 
   738  0FE9                     	;# 
   739  0FEA                     	;# 
   740  0FEB                     	;# 
   741  0FED                     	;# 
   742  0FEE                     	;# 
   743  0FEF                     	;# 
   744  0000                     	;# 
   745  0001                     	;# 
   746  0002                     	;# 
   747  0003                     	;# 
   748  0004                     	;# 
   749  0005                     	;# 
   750  0006                     	;# 
   751  0007                     	;# 
   752  0008                     	;# 
   753  0009                     	;# 
   754  000A                     	;# 
   755  000B                     	;# 
   756  000C                     	;# 
   757  000E                     	;# 
   758  0011                     	;# 
   759  0012                     	;# 
   760  0013                     	;# 
   761  0015                     	;# 
   762  0016                     	;# 
   763  0016                     	;# 
   764  0017                     	;# 
   765  0018                     	;# 
   766  0019                     	;# 
   767  001A                     	;# 
   768  001B                     	;# 
   769  001C                     	;# 
   770  008C                     	;# 
   771  008E                     	;# 
   772  0091                     	;# 
   773  0092                     	;# 
   774  0093                     	;# 
   775  0095                     	;# 
   776  0096                     	;# 
   777  0097                     	;# 
   778  0099                     	;# 
   779  009A                     	;# 
   780  009B                     	;# 
   781  009B                     	;# 
   782  009C                     	;# 
   783  009D                     	;# 
   784  009E                     	;# 
   785  009F                     	;# 
   786  010C                     	;# 
   787  010E                     	;# 
   788  0111                     	;# 
   789  0112                     	;# 
   790  0113                     	;# 
   791  0114                     	;# 
   792  0115                     	;# 
   793  0116                     	;# 
   794  0117                     	;# 
   795  0118                     	;# 
   796  0119                     	;# 
   797  011D                     	;# 
   798  018C                     	;# 
   799  018E                     	;# 
   800  0191                     	;# 
   801  0191                     	;# 
   802  0192                     	;# 
   803  0193                     	;# 
   804  0193                     	;# 
   805  0194                     	;# 
   806  0195                     	;# 
   807  0196                     	;# 
   808  0197                     	;# 
   809  020C                     	;# 
   810  0211                     	;# 
   811  0211                     	;# 
   812  0212                     	;# 
   813  0212                     	;# 
   814  0213                     	;# 
   815  0213                     	;# 
   816  0214                     	;# 
   817  0214                     	;# 
   818  0215                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0216                     	;# 
   822  0216                     	;# 
   823  0217                     	;# 
   824  0217                     	;# 
   825  0391                     	;# 
   826  0392                     	;# 
   827  0393                     	;# 
   828  0498                     	;# 
   829  0498                     	;# 
   830  0499                     	;# 
   831  049A                     	;# 
   832  049B                     	;# 
   833  049B                     	;# 
   834  049C                     	;# 
   835  049E                     	;# 
   836  049F                     	;# 
   837  0611                     	;# 
   838  0612                     	;# 
   839  0613                     	;# 
   840  0613                     	;# 
   841  0614                     	;# 
   842  0615                     	;# 
   843  0616                     	;# 
   844  0616                     	;# 
   845  0617                     	;# 
   846  0618                     	;# 
   847  0619                     	;# 
   848  0619                     	;# 
   849  061A                     	;# 
   850  061B                     	;# 
   851  061C                     	;# 
   852  061C                     	;# 
   853  0691                     	;# 
   854  0692                     	;# 
   855  0693                     	;# 
   856  0694                     	;# 
   857  0695                     	;# 
   858  0F0F                     	;# 
   859  0F10                     	;# 
   860  0F11                     	;# 
   861  0F12                     	;# 
   862  0F13                     	;# 
   863  0F14                     	;# 
   864  0F15                     	;# 
   865  0F16                     	;# 
   866  0F17                     	;# 
   867  0F18                     	;# 
   868  0F19                     	;# 
   869  0F1A                     	;# 
   870  0F1B                     	;# 
   871  0F1C                     	;# 
   872  0F1D                     	;# 
   873  0F1E                     	;# 
   874  0F1F                     	;# 
   875  0FE3                     	;# 
   876  0FE4                     	;# 
   877  0FE5                     	;# 
   878  0FE6                     	;# 
   879  0FE7                     	;# 
   880  0FE8                     	;# 
   881  0FE9                     	;# 
   882  0FEA                     	;# 
   883  0FEB                     	;# 
   884  0FED                     	;# 
   885  0FEE                     	;# 
   886  0FEF                     	;# 
   887  0000                     	;# 
   888  0001                     	;# 
   889  0002                     	;# 
   890  0003                     	;# 
   891  0004                     	;# 
   892  0005                     	;# 
   893  0006                     	;# 
   894  0007                     	;# 
   895  0008                     	;# 
   896  0009                     	;# 
   897  000A                     	;# 
   898  000B                     	;# 
   899  000C                     	;# 
   900  000E                     	;# 
   901  0011                     	;# 
   902  0012                     	;# 
   903  0013                     	;# 
   904  0015                     	;# 
   905  0016                     	;# 
   906  0016                     	;# 
   907  0017                     	;# 
   908  0018                     	;# 
   909  0019                     	;# 
   910  001A                     	;# 
   911  001B                     	;# 
   912  001C                     	;# 
   913  008C                     	;# 
   914  008E                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0095                     	;# 
   919  0096                     	;# 
   920  0097                     	;# 
   921  0099                     	;# 
   922  009A                     	;# 
   923  009B                     	;# 
   924  009B                     	;# 
   925  009C                     	;# 
   926  009D                     	;# 
   927  009E                     	;# 
   928  009F                     	;# 
   929  010C                     	;# 
   930  010E                     	;# 
   931  0111                     	;# 
   932  0112                     	;# 
   933  0113                     	;# 
   934  0114                     	;# 
   935  0115                     	;# 
   936  0116                     	;# 
   937  0117                     	;# 
   938  0118                     	;# 
   939  0119                     	;# 
   940  011D                     	;# 
   941  018C                     	;# 
   942  018E                     	;# 
   943  0191                     	;# 
   944  0191                     	;# 
   945  0192                     	;# 
   946  0193                     	;# 
   947  0193                     	;# 
   948  0194                     	;# 
   949  0195                     	;# 
   950  0196                     	;# 
   951  0197                     	;# 
   952  020C                     	;# 
   953  0211                     	;# 
   954  0211                     	;# 
   955  0212                     	;# 
   956  0212                     	;# 
   957  0213                     	;# 
   958  0213                     	;# 
   959  0214                     	;# 
   960  0214                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0215                     	;# 
   964  0216                     	;# 
   965  0216                     	;# 
   966  0217                     	;# 
   967  0217                     	;# 
   968  0391                     	;# 
   969  0392                     	;# 
   970  0393                     	;# 
   971  0498                     	;# 
   972  0498                     	;# 
   973  0499                     	;# 
   974  049A                     	;# 
   975  049B                     	;# 
   976  049B                     	;# 
   977  049C                     	;# 
   978  049E                     	;# 
   979  049F                     	;# 
   980  0611                     	;# 
   981  0612                     	;# 
   982  0613                     	;# 
   983  0613                     	;# 
   984  0614                     	;# 
   985  0615                     	;# 
   986  0616                     	;# 
   987  0616                     	;# 
   988  0617                     	;# 
   989  0618                     	;# 
   990  0619                     	;# 
   991  0619                     	;# 
   992  061A                     	;# 
   993  061B                     	;# 
   994  061C                     	;# 
   995  061C                     	;# 
   996  0691                     	;# 
   997  0692                     	;# 
   998  0693                     	;# 
   999  0694                     	;# 
  1000  0695                     	;# 
  1001  0F0F                     	;# 
  1002  0F10                     	;# 
  1003  0F11                     	;# 
  1004  0F12                     	;# 
  1005  0F13                     	;# 
  1006  0F14                     	;# 
  1007  0F15                     	;# 
  1008  0F16                     	;# 
  1009  0F17                     	;# 
  1010  0F18                     	;# 
  1011  0F19                     	;# 
  1012  0F1A                     	;# 
  1013  0F1B                     	;# 
  1014  0F1C                     	;# 
  1015  0F1D                     	;# 
  1016  0F1E                     	;# 
  1017  0F1F                     	;# 
  1018  0FE3                     	;# 
  1019  0FE4                     	;# 
  1020  0FE5                     	;# 
  1021  0FE6                     	;# 
  1022  0FE7                     	;# 
  1023  0FE8                     	;# 
  1024  0FE9                     	;# 
  1025  0FEA                     	;# 
  1026  0FEB                     	;# 
  1027  0FED                     	;# 
  1028  0FEE                     	;# 
  1029  0FEF                     	;# 
  1030  000B                     _INTCONbits	set	11
  1031  0011                     _PIR1bits	set	17
  1032  001B                     _PR2	set	27
  1033  001C                     _T2CON	set	28
  1034  001C                     _T2CONbits	set	28
  1035  001A                     _TMR2	set	26
  1036  0095                     _OPTION_REGbits	set	149
  1037  0099                     _OSCCON	set	153
  1038  009A                     _OSCSTAT	set	154
  1039  008C                     _TRISA	set	140
  1040  008E                     _TRISC	set	142
  1041  011D                     _APFCON	set	285
  1042  010C                     _LATA	set	268
  1043  010E                     _LATC	set	270
  1044  018C                     _ANSELA	set	396
  1045  018E                     _ANSELC	set	398
  1046  0192                     _PMADRH	set	402
  1047  0191                     _PMADRL	set	401
  1048  0195                     _PMCON1bits	set	405
  1049  0196                     _PMCON2	set	406
  1050  0194                     _PMDATH	set	404
  1051  0193                     _PMDATL	set	403
  1052  020C                     _WPUA	set	524
  1053  0619                     _PWM3CON	set	1561
  1054  0618                     _PWM3DCH	set	1560
  1055  0617                     _PWM3DCL	set	1559
  1056  061C                     _PWM4CON	set	1564
  1057  061B                     _PWM4DCH	set	1563
  1058  061A                     _PWM4DCL	set	1562
  1059                           
  1060                           	psect	text0
  1061  0000                     __ptext0:	
  1062                           ; #config settings
  1063                           
  1064                           
  1065                           ;psect for function _FLASH_ReadWord
  1066  0000                     
  1067                           	psect	cinit
  1068  07F7                     start_initialization:	
  1069  07F7                     __initialization:	
  1070                           
  1071                           ; Clear objects allocated to BANK1
  1072  07F7  0021               	movlb	1	; select bank1
  1073  07F8  01A8               	clrf	__pbssBANK1& (0+127)
  1074  07F9  01A9               	clrf	(__pbssBANK1+1)& (0+127)
  1075  07FA  01AA               	clrf	(__pbssBANK1+2)& (0+127)
  1076  07FB  01AB               	clrf	(__pbssBANK1+3)& (0+127)
  1077  07FC  01AC               	clrf	(__pbssBANK1+4)& (0+127)
  1078  07FD                     end_of_initialization:	
  1079                           ;End of C runtime variable initialization code
  1080                           
  1081  07FD                     __end_of__initialization:	
  1082  07FD  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1083  07FE  0020               	movlb	0
  1084  07FF  2F2A               	ljmp	_main	;jump to C main() function
  1085                           
  1086                           	psect	bssBANK1
  1087  00A8                     __pbssBANK1:	
  1088  00A8                     _randx:	
  1089  00A8                     	ds	4
  1090  00AC                     _randf:	
  1091  00AC                     	ds	1
  1092                           
  1093                           	psect	cstackBANK1
  1094  00A0                     __pcstackBANK1:	
  1095  00A0                     main@faddrPWM3:	
  1096                           
  1097                           ; 2 bytes @ 0x0
  1098  00A0                     	ds	2
  1099  00A2                     main@faddrPWM4:	
  1100                           
  1101                           ; 2 bytes @ 0x2
  1102  00A2                     	ds	2
  1103  00A4                     main@dutyCycleP3:	
  1104                           
  1105                           ; 2 bytes @ 0x4
  1106  00A4                     	ds	2
  1107  00A6                     main@dutyCycleP4:	
  1108                           
  1109                           ; 2 bytes @ 0x6
  1110  00A6                     	ds	2
  1111                           
  1112                           	psect	cstackCOMMON
  1113  0070                     __pcstackCOMMON:	
  1114  0070                     ?_TMR2_StartTimer:	
  1115  0070                     ??_TMR2_StartTimer:	
  1116                           ; 0 bytes @ 0x0
  1117                           
  1118  0070                     ?_FLASH_EraseBlock:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  0070                     ?_OSCILLATOR_Initialize:	
  1122                           ; 0 bytes @ 0x0
  1123                           
  1124  0070                     ??_OSCILLATOR_Initialize:	
  1125                           ; 0 bytes @ 0x0
  1126                           
  1127  0070                     ?_PWM3_Initialize:	
  1128                           ; 0 bytes @ 0x0
  1129                           
  1130  0070                     ??_PWM3_Initialize:	
  1131                           ; 0 bytes @ 0x0
  1132                           
  1133  0070                     ?_PWM3_LoadDutyValue:	
  1134                           ; 0 bytes @ 0x0
  1135                           
  1136  0070                     ?_PWM4_Initialize:	
  1137                           ; 0 bytes @ 0x0
  1138                           
  1139  0070                     ??_PWM4_Initialize:	
  1140                           ; 0 bytes @ 0x0
  1141                           
  1142  0070                     ?_PWM4_LoadDutyValue:	
  1143                           ; 0 bytes @ 0x0
  1144                           
  1145  0070                     ?_TMR2_Initialize:	
  1146                           ; 0 bytes @ 0x0
  1147                           
  1148  0070                     ??_TMR2_Initialize:	
  1149                           ; 0 bytes @ 0x0
  1150                           
  1151  0070                     ?_PIN_MANAGER_Initialize:	
  1152                           ; 0 bytes @ 0x0
  1153                           
  1154  0070                     ??_PIN_MANAGER_Initialize:	
  1155                           ; 0 bytes @ 0x0
  1156                           
  1157  0070                     ?_SYSTEM_Initialize:	
  1158                           ; 0 bytes @ 0x0
  1159                           
  1160  0070                     ??_SYSTEM_Initialize:	
  1161                           ; 0 bytes @ 0x0
  1162                           
  1163  0070                     ?_main:	
  1164                           ; 0 bytes @ 0x0
  1165                           
  1166  0070                     ?_srand:	
  1167                           ; 0 bytes @ 0x0
  1168                           
  1169  0070                     ?_FLASH_ReadWord:	
  1170                           ; 0 bytes @ 0x0
  1171                           
  1172  0070                     ?___lmul:	
  1173                           ; 2 bytes @ 0x0
  1174                           
  1175  0070                     PWM3_LoadDutyValue@dutyValue:	
  1176                           ; 4 bytes @ 0x0
  1177                           
  1178  0070                     PWM4_LoadDutyValue@dutyValue:	
  1179                           ; 2 bytes @ 0x0
  1180                           
  1181  0070                     FLASH_ReadWord@flashAddr:	
  1182                           ; 2 bytes @ 0x0
  1183                           
  1184  0070                     FLASH_EraseBlock@startAddr:	
  1185                           ; 2 bytes @ 0x0
  1186                           
  1187  0070                     srand@x:	
  1188                           ; 2 bytes @ 0x0
  1189                           
  1190  0070                     ___lmul@multiplier:	
  1191                           ; 2 bytes @ 0x0
  1192                           
  1193                           
  1194                           ; 4 bytes @ 0x0
  1195  0070                     	ds	2
  1196  0072                     ??_FLASH_EraseBlock:	
  1197  0072                     ??_PWM3_LoadDutyValue:	
  1198                           ; 0 bytes @ 0x2
  1199                           
  1200  0072                     ??_PWM4_LoadDutyValue:	
  1201                           ; 0 bytes @ 0x2
  1202                           
  1203  0072                     ??_FLASH_ReadWord:	
  1204                           ; 0 bytes @ 0x2
  1205                           
  1206  0072                     ??_srand:	
  1207                           ; 0 bytes @ 0x2
  1208                           
  1209  0072                     FLASH_ReadWord@GIEBitValue:	
  1210                           ; 0 bytes @ 0x2
  1211                           
  1212  0072                     FLASH_EraseBlock@GIEBitValue:	
  1213                           ; 1 bytes @ 0x2
  1214                           
  1215                           
  1216                           ; 1 bytes @ 0x2
  1217  0072                     	ds	1
  1218  0073                     ?_FLASH_WriteBlock:	
  1219  0073                     FLASH_WriteBlock@writeAddr:	
  1220                           ; 1 bytes @ 0x3
  1221                           
  1222                           
  1223                           ; 2 bytes @ 0x3
  1224  0073                     	ds	1
  1225  0074                     ___lmul@multiplicand:	
  1226                           
  1227                           ; 4 bytes @ 0x4
  1228  0074                     	ds	1
  1229  0075                     FLASH_WriteBlock@flashWordArray:	
  1230                           
  1231                           ; 1 bytes @ 0x5
  1232  0075                     	ds	1
  1233  0076                     ??_FLASH_WriteBlock:	
  1234                           
  1235                           ; 0 bytes @ 0x6
  1236  0076                     	ds	2
  1237  0078                     ??___lmul:	
  1238  0078                     ___lmul@product:	
  1239                           ; 0 bytes @ 0x8
  1240                           
  1241                           
  1242                           ; 4 bytes @ 0x8
  1243  0078                     	ds	1
  1244  0079                     FLASH_WriteBlock@blockStartAddr:	
  1245                           
  1246                           ; 2 bytes @ 0x9
  1247  0079                     	ds	2
  1248  007B                     FLASH_WriteBlock@GIEBitValue:	
  1249                           
  1250                           ; 1 bytes @ 0xB
  1251  007B                     	ds	1
  1252  007C                     ?_rand:	
  1253  007C                     FLASH_WriteBlock@i:	
  1254                           ; 2 bytes @ 0xC
  1255                           
  1256                           
  1257                           ; 1 bytes @ 0xC
  1258  007C                     	ds	1
  1259  007D                     ??_FLASH_WriteWord:	
  1260                           
  1261                           ; 0 bytes @ 0xD
  1262  007D                     	ds	1
  1263                           
  1264                           	psect	cstackBANK0
  1265  0020                     __pcstackBANK0:	
  1266  0020                     ??_rand:	
  1267  0020                     ?_FLASH_WriteWord:	
  1268                           ; 0 bytes @ 0x0
  1269                           
  1270  0020                     FLASH_WriteWord@flashAddr:	
  1271                           ; 0 bytes @ 0x0
  1272                           
  1273                           
  1274                           ; 2 bytes @ 0x0
  1275  0020                     	ds	2
  1276  0022                     FLASH_WriteWord@ramBuf:	
  1277                           
  1278                           ; 1 bytes @ 0x2
  1279  0022                     	ds	1
  1280  0023                     FLASH_WriteWord@word:	
  1281                           
  1282                           ; 2 bytes @ 0x3
  1283  0023                     	ds	2
  1284  0025                     ?___awmod:	
  1285  0025                     FLASH_WriteWord@offset:	
  1286                           ; 2 bytes @ 0x5
  1287                           
  1288  0025                     ___awmod@divisor:	
  1289                           ; 1 bytes @ 0x5
  1290                           
  1291                           
  1292                           ; 2 bytes @ 0x5
  1293  0025                     	ds	1
  1294  0026                     FLASH_WriteWord@blockStartAddr:	
  1295                           
  1296                           ; 2 bytes @ 0x6
  1297  0026                     	ds	1
  1298  0027                     ___awmod@dividend:	
  1299                           
  1300                           ; 2 bytes @ 0x7
  1301  0027                     	ds	1
  1302  0028                     FLASH_WriteWord@i:	
  1303                           
  1304                           ; 1 bytes @ 0x8
  1305  0028                     	ds	1
  1306  0029                     ??___awmod:	
  1307                           
  1308                           ; 0 bytes @ 0x9
  1309  0029                     	ds	1
  1310  002A                     ___awmod@counter:	
  1311                           
  1312                           ; 1 bytes @ 0xA
  1313  002A                     	ds	1
  1314  002B                     ___awmod@sign:	
  1315                           
  1316                           ; 1 bytes @ 0xB
  1317  002B                     	ds	1
  1318  002C                     ??_main:	
  1319                           
  1320                           ; 0 bytes @ 0xC
  1321  002C                     	ds	3
  1322  002F                     main@Rbuf:	
  1323                           
  1324                           ; 64 bytes @ 0xF
  1325  002F                     	ds	64
  1326  006F                     main@pRbuf:	
  1327                           
  1328                           ; 1 bytes @ 0x4F
  1329  006F                     	ds	1
  1330                           
  1331                           	psect	maintext
  1332  072A                     __pmaintext:	
  1333 ;;
  1334 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1335 ;;
  1336 ;; *************** function _main *****************
  1337 ;; Defined at:
  1338 ;;		line 59 in file "main.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  Rbuf           64   15[BANK0 ] unsigned int [32]
  1343 ;;  dutyCycleP4     2    6[BANK1 ] unsigned int 
  1344 ;;  dutyCycleP3     2    4[BANK1 ] unsigned int 
  1345 ;;  faddrPWM4       2    2[BANK1 ] unsigned int 
  1346 ;;  faddrPWM3       2    0[BANK1 ] unsigned int 
  1347 ;;  randPWM4        2    0        unsigned int 
  1348 ;;  randPWM3        2    0        unsigned int 
  1349 ;;  pRbuf           1   79[BANK0 ] PTR unsigned int 
  1350 ;;		 -> main@Rbuf(64), 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;		None               void
  1353 ;; Registers used:
  1354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 17F/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMMON   BANK0   BANK1
  1360 ;;      Params:         0       0       0
  1361 ;;      Locals:         0      65       8
  1362 ;;      Temps:          0       3       0
  1363 ;;      Totals:         0      68       8
  1364 ;;Total ram usage:       76 bytes
  1365 ;; Hardware stack levels required when called:    3
  1366 ;; This function calls:
  1367 ;;		_FLASH_ReadWord
  1368 ;;		_FLASH_WriteWord
  1369 ;;		_PWM3_LoadDutyValue
  1370 ;;		_PWM4_LoadDutyValue
  1371 ;;		_SYSTEM_Initialize
  1372 ;;		___awmod
  1373 ;;		_rand
  1374 ;; This function is called by:
  1375 ;;		Startup code after reset
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           
  1380                           ;psect for function _main
  1381  072A                     _main:	
  1382                           
  1383                           ;main.c: 62: uint16_t faddrPWM3=400;
  1384                           
  1385                           ;incstack = 0
  1386                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1387  072A  3090               	movlw	144
  1388  072B  0021               	movlb	1	; select bank1
  1389  072C  00A0               	movwf	main@faddrPWM3^(0+128)
  1390  072D  3001               	movlw	1
  1391  072E  00A1               	movwf	(main@faddrPWM3^(0+128)+1)
  1392                           
  1393                           ;main.c: 63: uint16_t faddrPWM4=500;
  1394  072F  30F4               	movlw	244
  1395  0730  00A2               	movwf	main@faddrPWM4^(0+128)
  1396  0731  3001               	movlw	1
  1397  0732  00A3               	movwf	(main@faddrPWM4^(0+128)+1)
  1398                           
  1399                           ;main.c: 64: uint16_t Rbuf[32];
  1400                           ;main.c: 65: uint16_t *pRbuf=&Rbuf[0];
  1401  0733  302F               	movlw	main@Rbuf& (0+255)
  1402  0734  0020               	movlb	0	; select bank0
  1403  0735  00AC               	movwf	??_main
  1404  0736  082C               	movf	??_main,w
  1405  0737  00EF               	movwf	main@pRbuf
  1406                           
  1407                           ;main.c: 67: uint16_t dutyCycleP3=0;
  1408  0738  0021               	movlb	1	; select bank1
  1409  0739  01A4               	clrf	main@dutyCycleP3^(0+128)
  1410  073A  01A5               	clrf	(main@dutyCycleP3+1)^(0+128)
  1411                           
  1412                           ;main.c: 68: uint16_t dutyCycleP4=0;
  1413  073B  01A6               	clrf	main@dutyCycleP4^(0+128)
  1414  073C  01A7               	clrf	(main@dutyCycleP4+1)^(0+128)
  1415                           
  1416                           ;main.c: 70: uint16_t randPWM3,randPWM4;
  1417                           ;main.c: 74: SYSTEM_Initialize();
  1418  073D  252A               	fcall	_SYSTEM_Initialize
  1419                           
  1420                           ;main.c: 90: dutyCycleP3=FLASH_ReadWord(faddrPWM3);
  1421  073E  0021               	movlb	1	; select bank1
  1422  073F  0821               	movf	(main@faddrPWM3+1)^(0+128),w
  1423  0740  01F1               	clrf	FLASH_ReadWord@flashAddr+1
  1424  0741  07F1               	addwf	FLASH_ReadWord@flashAddr+1,f
  1425  0742  0820               	movf	main@faddrPWM3^(0+128),w
  1426  0743  01F0               	clrf	FLASH_ReadWord@flashAddr
  1427  0744  07F0               	addwf	FLASH_ReadWord@flashAddr,f
  1428  0745  2599               	fcall	_FLASH_ReadWord
  1429  0746  0871               	movf	?_FLASH_ReadWord+1,w
  1430  0747  0021               	movlb	1	; select bank1
  1431  0748  01A5               	clrf	(main@dutyCycleP3+1)^(0+128)
  1432  0749  07A5               	addwf	(main@dutyCycleP3+1)^(0+128),f
  1433  074A  0870               	movf	?_FLASH_ReadWord,w
  1434  074B  01A4               	clrf	main@dutyCycleP3^(0+128)
  1435  074C  07A4               	addwf	main@dutyCycleP3^(0+128),f
  1436                           
  1437                           ;main.c: 91: dutyCycleP4=FLASH_ReadWord(faddrPWM4);
  1438  074D  0823               	movf	(main@faddrPWM4+1)^(0+128),w
  1439  074E  01F1               	clrf	FLASH_ReadWord@flashAddr+1
  1440  074F  07F1               	addwf	FLASH_ReadWord@flashAddr+1,f
  1441  0750  0822               	movf	main@faddrPWM4^(0+128),w
  1442  0751  01F0               	clrf	FLASH_ReadWord@flashAddr
  1443  0752  07F0               	addwf	FLASH_ReadWord@flashAddr,f
  1444  0753  2599               	fcall	_FLASH_ReadWord
  1445  0754  0871               	movf	?_FLASH_ReadWord+1,w
  1446  0755  0021               	movlb	1	; select bank1
  1447  0756  01A7               	clrf	(main@dutyCycleP4+1)^(0+128)
  1448  0757  07A7               	addwf	(main@dutyCycleP4+1)^(0+128),f
  1449  0758  0870               	movf	?_FLASH_ReadWord,w
  1450  0759  01A6               	clrf	main@dutyCycleP4^(0+128)
  1451  075A  07A6               	addwf	main@dutyCycleP4^(0+128),f
  1452                           
  1453                           ;main.c: 92: PWM3_LoadDutyValue(dutyCycleP3);
  1454  075B  0825               	movf	(main@dutyCycleP3+1)^(0+128),w
  1455  075C  01F1               	clrf	PWM3_LoadDutyValue@dutyValue+1
  1456  075D  07F1               	addwf	PWM3_LoadDutyValue@dutyValue+1,f
  1457  075E  0824               	movf	main@dutyCycleP3^(0+128),w
  1458  075F  01F0               	clrf	PWM3_LoadDutyValue@dutyValue
  1459  0760  07F0               	addwf	PWM3_LoadDutyValue@dutyValue,f
  1460  0761  2569               	fcall	_PWM3_LoadDutyValue
  1461                           
  1462                           ;main.c: 93: PWM4_LoadDutyValue(dutyCycleP4);
  1463  0762  0021               	movlb	1	; select bank1
  1464  0763  0827               	movf	(main@dutyCycleP4+1)^(0+128),w
  1465  0764  01F1               	clrf	PWM4_LoadDutyValue@dutyValue+1
  1466  0765  07F1               	addwf	PWM4_LoadDutyValue@dutyValue+1,f
  1467  0766  0826               	movf	main@dutyCycleP4^(0+128),w
  1468  0767  01F0               	clrf	PWM4_LoadDutyValue@dutyValue
  1469  0768  07F0               	addwf	PWM4_LoadDutyValue@dutyValue,f
  1470  0769  2581               	fcall	_PWM4_LoadDutyValue
  1471                           
  1472                           ;main.c: 94: _delay((unsigned long)((500)*(16000000/4000.0)));
  1473  076A  300B               	movlw	11
  1474  076B  0020               	movlb	0	; select bank0
  1475  076C  00AE               	movwf	??_main+2
  1476  076D  3026               	movlw	38
  1477  076E  00AD               	movwf	??_main+1
  1478  076F  3066               	movlw	102
  1479  0770  00AC               	movwf	??_main
  1480  0771                     u477:	
  1481  0771  0BAC               	decfsz	??_main,f
  1482  0772  2F71               	goto	u477
  1483  0773  0BAD               	decfsz	??_main+1,f
  1484  0774  2F71               	goto	u477
  1485  0775  0BAE               	decfsz	??_main+2,f
  1486  0776  2F71               	goto	u477
  1487  0777  3200               	nop2
  1488  0778                     l153:	
  1489                           ;main.c: 96: while (1)
  1490                           
  1491                           
  1492                           ;main.c: 97: {
  1493                           ;main.c: 98: dutyCycleP3=rand()%50;
  1494  0778  3032               	movlw	50
  1495  0779  0020               	movlb	0	; select bank0
  1496  077A  00A5               	movwf	___awmod@divisor
  1497  077B  3000               	movlw	0
  1498  077C  00A6               	movwf	___awmod@divisor+1
  1499  077D  2641               	fcall	_rand
  1500  077E  087D               	movf	?_rand+1,w
  1501  077F  0020               	movlb	0	; select bank0
  1502  0780  01A8               	clrf	___awmod@dividend+1
  1503  0781  07A8               	addwf	___awmod@dividend+1,f
  1504  0782  087C               	movf	?_rand,w
  1505  0783  01A7               	clrf	___awmod@dividend
  1506  0784  07A7               	addwf	___awmod@dividend,f
  1507  0785  2687               	fcall	___awmod
  1508  0786  0020               	movlb	0	; select bank0
  1509  0787  0826               	movf	?___awmod+1,w
  1510  0788  0021               	movlb	1	; select bank1
  1511  0789  01A5               	clrf	(main@dutyCycleP3+1)^(0+128)
  1512  078A  07A5               	addwf	(main@dutyCycleP3+1)^(0+128),f
  1513  078B  0020               	movlb	0	; select bank0
  1514  078C  0825               	movf	?___awmod,w
  1515  078D  0021               	movlb	1	; select bank1
  1516  078E  01A4               	clrf	main@dutyCycleP3^(0+128)
  1517  078F  07A4               	addwf	main@dutyCycleP3^(0+128),f
  1518                           
  1519                           ;main.c: 99: dutyCycleP4=rand()%50+10;
  1520  0790  3032               	movlw	50
  1521  0791  0020               	movlb	0	; select bank0
  1522  0792  00A5               	movwf	___awmod@divisor
  1523  0793  3000               	movlw	0
  1524  0794  00A6               	movwf	___awmod@divisor+1
  1525  0795  2641               	fcall	_rand
  1526  0796  087D               	movf	?_rand+1,w
  1527  0797  0020               	movlb	0	; select bank0
  1528  0798  01A8               	clrf	___awmod@dividend+1
  1529  0799  07A8               	addwf	___awmod@dividend+1,f
  1530  079A  087C               	movf	?_rand,w
  1531  079B  01A7               	clrf	___awmod@dividend
  1532  079C  07A7               	addwf	___awmod@dividend,f
  1533  079D  2687               	fcall	___awmod
  1534  079E  0020               	movlb	0	; select bank0
  1535  079F  0825               	movf	?___awmod,w
  1536  07A0  3E0A               	addlw	10
  1537  07A1  0021               	movlb	1	; select bank1
  1538  07A2  00A6               	movwf	main@dutyCycleP4^(0+128)
  1539  07A3  3000               	movlw	0
  1540  07A4  0020               	movlb	0	; select bank0
  1541  07A5  3D26               	addwfc	?___awmod+1,w
  1542  07A6  0021               	movlb	1	; select bank1
  1543  07A7  00A7               	movwf	(main@dutyCycleP4+1)^(0+128)
  1544                           
  1545                           ;main.c: 100: PWM3_LoadDutyValue(dutyCycleP3);
  1546  07A8  0825               	movf	(main@dutyCycleP3+1)^(0+128),w
  1547  07A9  01F1               	clrf	PWM3_LoadDutyValue@dutyValue+1
  1548  07AA  07F1               	addwf	PWM3_LoadDutyValue@dutyValue+1,f
  1549  07AB  0824               	movf	main@dutyCycleP3^(0+128),w
  1550  07AC  01F0               	clrf	PWM3_LoadDutyValue@dutyValue
  1551  07AD  07F0               	addwf	PWM3_LoadDutyValue@dutyValue,f
  1552  07AE  2569               	fcall	_PWM3_LoadDutyValue
  1553                           
  1554                           ;main.c: 101: PWM4_LoadDutyValue(dutyCycleP4);
  1555  07AF  0021               	movlb	1	; select bank1
  1556  07B0  0827               	movf	(main@dutyCycleP4+1)^(0+128),w
  1557  07B1  01F1               	clrf	PWM4_LoadDutyValue@dutyValue+1
  1558  07B2  07F1               	addwf	PWM4_LoadDutyValue@dutyValue+1,f
  1559  07B3  0826               	movf	main@dutyCycleP4^(0+128),w
  1560  07B4  01F0               	clrf	PWM4_LoadDutyValue@dutyValue
  1561  07B5  07F0               	addwf	PWM4_LoadDutyValue@dutyValue,f
  1562  07B6  2581               	fcall	_PWM4_LoadDutyValue
  1563                           
  1564                           ;main.c: 102: FLASH_WriteWord(faddrPWM3,pRbuf,dutyCycleP3);
  1565  07B7  0021               	movlb	1	; select bank1
  1566  07B8  0821               	movf	(main@faddrPWM3+1)^(0+128),w
  1567  07B9  0020               	movlb	0	; select bank0
  1568  07BA  01A1               	clrf	FLASH_WriteWord@flashAddr+1
  1569  07BB  07A1               	addwf	FLASH_WriteWord@flashAddr+1,f
  1570  07BC  0021               	movlb	1	; select bank1
  1571  07BD  0820               	movf	main@faddrPWM3^(0+128),w
  1572  07BE  0020               	movlb	0	; select bank0
  1573  07BF  01A0               	clrf	FLASH_WriteWord@flashAddr
  1574  07C0  07A0               	addwf	FLASH_WriteWord@flashAddr,f
  1575  07C1  086F               	movf	main@pRbuf,w
  1576  07C2  00AC               	movwf	??_main
  1577  07C3  082C               	movf	??_main,w
  1578  07C4  00A2               	movwf	FLASH_WriteWord@ramBuf
  1579  07C5  0021               	movlb	1	; select bank1
  1580  07C6  0825               	movf	(main@dutyCycleP3+1)^(0+128),w
  1581  07C7  0020               	movlb	0	; select bank0
  1582  07C8  01A4               	clrf	FLASH_WriteWord@word+1
  1583  07C9  07A4               	addwf	FLASH_WriteWord@word+1,f
  1584  07CA  0021               	movlb	1	; select bank1
  1585  07CB  0824               	movf	main@dutyCycleP3^(0+128),w
  1586  07CC  0020               	movlb	0	; select bank0
  1587  07CD  01A3               	clrf	FLASH_WriteWord@word
  1588  07CE  07A3               	addwf	FLASH_WriteWord@word,f
  1589  07CF  25FF               	fcall	_FLASH_WriteWord
  1590                           
  1591                           ;main.c: 103: FLASH_WriteWord(faddrPWM4,&Rbuf[16],dutyCycleP4);
  1592  07D0  0021               	movlb	1	; select bank1
  1593  07D1  0823               	movf	(main@faddrPWM4+1)^(0+128),w
  1594  07D2  0020               	movlb	0	; select bank0
  1595  07D3  01A1               	clrf	FLASH_WriteWord@flashAddr+1
  1596  07D4  07A1               	addwf	FLASH_WriteWord@flashAddr+1,f
  1597  07D5  0021               	movlb	1	; select bank1
  1598  07D6  0822               	movf	main@faddrPWM4^(0+128),w
  1599  07D7  0020               	movlb	0	; select bank0
  1600  07D8  01A0               	clrf	FLASH_WriteWord@flashAddr
  1601  07D9  07A0               	addwf	FLASH_WriteWord@flashAddr,f
  1602  07DA  304F               	movlw	(main@Rbuf+32)& (0+255)
  1603  07DB  00AC               	movwf	??_main
  1604  07DC  082C               	movf	??_main,w
  1605  07DD  00A2               	movwf	FLASH_WriteWord@ramBuf
  1606  07DE  0021               	movlb	1	; select bank1
  1607  07DF  0827               	movf	(main@dutyCycleP4+1)^(0+128),w
  1608  07E0  0020               	movlb	0	; select bank0
  1609  07E1  01A4               	clrf	FLASH_WriteWord@word+1
  1610  07E2  07A4               	addwf	FLASH_WriteWord@word+1,f
  1611  07E3  0021               	movlb	1	; select bank1
  1612  07E4  0826               	movf	main@dutyCycleP4^(0+128),w
  1613  07E5  0020               	movlb	0	; select bank0
  1614  07E6  01A3               	clrf	FLASH_WriteWord@word
  1615  07E7  07A3               	addwf	FLASH_WriteWord@word,f
  1616  07E8  25FF               	fcall	_FLASH_WriteWord
  1617                           
  1618                           ;main.c: 104: _delay((unsigned long)((100)*(16000000/4000.0)));
  1619  07E9  3003               	movlw	3
  1620  07EA  0020               	movlb	0	; select bank0
  1621  07EB  00AE               	movwf	??_main+2
  1622  07EC  3008               	movlw	8
  1623  07ED  00AD               	movwf	??_main+1
  1624  07EE  3078               	movlw	120
  1625  07EF  00AC               	movwf	??_main
  1626  07F0                     u487:	
  1627  07F0  0BAC               	decfsz	??_main,f
  1628  07F1  2FF0               	goto	u487
  1629  07F2  0BAD               	decfsz	??_main+1,f
  1630  07F3  2FF0               	goto	u487
  1631  07F4  0BAE               	decfsz	??_main+2,f
  1632  07F5  2FF0               	goto	u487
  1633  07F6  2F78               	goto	l153
  1634  07F7                     __end_of_main:	
  1635                           
  1636                           	psect	text1
  1637  0641                     __ptext1:	
  1638 ;; *************** function _rand *****************
  1639 ;; Defined at:
  1640 ;;		line 13 in file "D:\Program Files\Microchip\xc8\v1.32\sources\common\rand.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  2   12[COMMON] int 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0, pclath, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1
  1654 ;;      Params:         2       0       0
  1655 ;;      Locals:         0       0       0
  1656 ;;      Temps:          0       5       0
  1657 ;;      Totals:         2       5       0
  1658 ;;Total ram usage:        7 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    1
  1661 ;; This function calls:
  1662 ;;		___lmul
  1663 ;;		_srand
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           
  1670                           ;psect for function _rand
  1671  0641                     _rand:	
  1672                           
  1673                           ;incstack = 0
  1674                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1675  0641  0021               	movlb	1	; select bank1
  1676  0642  08AC               	movf	_randf^(0+128),f
  1677  0643  1D03               	skipz
  1678  0644  2E4A               	goto	l521
  1679  0645  3001               	movlw	1
  1680  0646  00F0               	movwf	srand@x
  1681  0647  3000               	movlw	0
  1682  0648  00F1               	movwf	srand@x+1
  1683  0649  2548               	fcall	_srand
  1684  064A                     l521:	
  1685  064A  0021               	movlb	1	; select bank1
  1686  064B  082B               	movf	(_randx+3)^(0+128),w
  1687  064C  00F3               	movwf	___lmul@multiplier+3
  1688  064D  082A               	movf	(_randx+2)^(0+128),w
  1689  064E  00F2               	movwf	___lmul@multiplier+2
  1690  064F  0829               	movf	(_randx+1)^(0+128),w
  1691  0650  00F1               	movwf	___lmul@multiplier+1
  1692  0651  0828               	movf	_randx^(0+128),w
  1693  0652  00F0               	movwf	___lmul@multiplier
  1694  0653  3041               	movlw	65
  1695  0654  00F7               	movwf	___lmul@multiplicand+3
  1696  0655  30C6               	movlw	198
  1697  0656  00F6               	movwf	___lmul@multiplicand+2
  1698  0657  304E               	movlw	78
  1699  0658  00F5               	movwf	___lmul@multiplicand+1
  1700  0659  306D               	movlw	109
  1701  065A  00F4               	movwf	___lmul@multiplicand
  1702  065B  25D0               	fcall	___lmul
  1703  065C  3039               	movlw	57
  1704  065D  0770               	addwf	?___lmul,w
  1705  065E  0021               	movlb	1	; select bank1
  1706  065F  00A8               	movwf	_randx^(0+128)
  1707  0660  3030               	movlw	48
  1708  0661  3D71               	addwfc	?___lmul+1,w
  1709  0662  00A9               	movwf	(_randx+1)^(0+128)
  1710  0663  3000               	movlw	0
  1711  0664  3D72               	addwfc	?___lmul+2,w
  1712  0665  00AA               	movwf	(_randx+2)^(0+128)
  1713  0666  3000               	movlw	0
  1714  0667  3D73               	addwfc	?___lmul+3,w
  1715  0668  00AB               	movwf	(_randx+3)^(0+128)
  1716  0669  0828               	movf	_randx^(0+128),w
  1717  066A  0020               	movlb	0	; select bank0
  1718  066B  00A0               	movwf	??_rand
  1719  066C  0021               	movlb	1	; select bank1
  1720  066D  0829               	movf	(_randx+1)^(0+128),w
  1721  066E  0020               	movlb	0	; select bank0
  1722  066F  00A1               	movwf	??_rand+1
  1723  0670  0021               	movlb	1	; select bank1
  1724  0671  082A               	movf	(_randx+2)^(0+128),w
  1725  0672  0020               	movlb	0	; select bank0
  1726  0673  00A2               	movwf	??_rand+2
  1727  0674  0021               	movlb	1	; select bank1
  1728  0675  082B               	movf	(_randx+3)^(0+128),w
  1729  0676  0020               	movlb	0	; select bank0
  1730  0677  00A3               	movwf	??_rand+3
  1731  0678  3010               	movlw	16
  1732  0679  00A4               	movwf	??_rand+4
  1733  067A                     u375:	
  1734  067A  37A3               	asrf	??_rand+3,f
  1735  067B  0CA2               	rrf	??_rand+2,f
  1736  067C  0CA1               	rrf	??_rand+1,f
  1737  067D  0CA0               	rrf	??_rand,f
  1738  067E  0BA4               	decfsz	??_rand+4,f
  1739  067F  2E7A               	goto	u375
  1740  0680  30FF               	movlw	255
  1741  0681  0520               	andwf	??_rand,w
  1742  0682  00FC               	movwf	?_rand
  1743  0683  307F               	movlw	127
  1744  0684  0521               	andwf	??_rand+1,w
  1745  0685  00FD               	movwf	?_rand+1
  1746  0686  0008               	return
  1747  0687                     __end_of_rand:	
  1748                           
  1749                           	psect	text2
  1750  0548                     __ptext2:	
  1751 ;; *************** function _srand *****************
  1752 ;; Defined at:
  1753 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v1.32\sources\common\rand.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  x               2    0[COMMON] unsigned int 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;		None               void
  1760 ;; Registers used:
  1761 ;;		wreg
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1
  1767 ;;      Params:         2       0       0
  1768 ;;      Locals:         0       0       0
  1769 ;;      Temps:          0       0       0
  1770 ;;      Totals:         2       0       0
  1771 ;;Total ram usage:        2 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_rand
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function _srand
  1782  0548                     _srand:	
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in _srand: [wreg]
  1786  0548  0870               	movf	srand@x,w
  1787  0549  0021               	movlb	1	; select bank1
  1788  054A  00A8               	movwf	_randx^(0+128)
  1789  054B  0871               	movf	srand@x+1,w
  1790  054C  00A9               	movwf	(_randx^(0+128)+1)
  1791  054D  01AA               	clrf	(_randx^(0+128)+2)
  1792  054E  01AB               	clrf	(_randx^(0+128)+3)
  1793  054F  01AC               	clrf	_randf^(0+128)
  1794  0550  0AAC               	incf	_randf^(0+128),f
  1795  0551  0008               	return
  1796  0552                     __end_of_srand:	
  1797                           
  1798                           	psect	text3
  1799  05D0                     __ptext3:	
  1800 ;; *************** function ___lmul *****************
  1801 ;; Defined at:
  1802 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.32\sources\common\Umul32.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  multiplier      4    0[COMMON] unsigned long 
  1805 ;;  multiplicand    4    4[COMMON] unsigned long 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  product         4    8[COMMON] unsigned long 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  4    0[COMMON] unsigned long 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1
  1817 ;;      Params:         8       0       0
  1818 ;;      Locals:         4       0       0
  1819 ;;      Temps:          0       0       0
  1820 ;;      Totals:        12       0       0
  1821 ;;Total ram usage:       12 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_rand
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           
  1831                           ;psect for function ___lmul
  1832  05D0                     ___lmul:	
  1833                           
  1834                           ;incstack = 0
  1835                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1836  05D0  3000               	movlw	0
  1837  05D1  00FB               	movwf	___lmul@product+3
  1838  05D2  3000               	movlw	0
  1839  05D3  00FA               	movwf	___lmul@product+2
  1840  05D4  3000               	movlw	0
  1841  05D5  00F9               	movwf	___lmul@product+1
  1842  05D6  3000               	movlw	0
  1843  05D7  00F8               	movwf	___lmul@product
  1844  05D8                     l922:	
  1845  05D8  1C70               	btfss	___lmul@multiplier,0
  1846  05D9  2DE2               	goto	l926
  1847  05DA  0874               	movf	___lmul@multiplicand,w
  1848  05DB  07F8               	addwf	___lmul@product,f
  1849  05DC  0875               	movf	___lmul@multiplicand+1,w
  1850  05DD  3DF9               	addwfc	___lmul@product+1,f
  1851  05DE  0876               	movf	___lmul@multiplicand+2,w
  1852  05DF  3DFA               	addwfc	___lmul@product+2,f
  1853  05E0  0877               	movf	___lmul@multiplicand+3,w
  1854  05E1  3DFB               	addwfc	___lmul@product+3,f
  1855  05E2                     l926:	
  1856  05E2  3001               	movlw	1
  1857  05E3                     u295:	
  1858  05E3  35F4               	lslf	___lmul@multiplicand,f
  1859  05E4  0DF5               	rlf	___lmul@multiplicand+1,f
  1860  05E5  0DF6               	rlf	___lmul@multiplicand+2,f
  1861  05E6  0DF7               	rlf	___lmul@multiplicand+3,f
  1862  05E7  0B89               	decfsz	9,f
  1863  05E8  2DE3               	goto	u295
  1864  05E9  3001               	movlw	1
  1865  05EA                     u305:	
  1866  05EA  36F3               	lsrf	___lmul@multiplier+3,f
  1867  05EB  0CF2               	rrf	___lmul@multiplier+2,f
  1868  05EC  0CF1               	rrf	___lmul@multiplier+1,f
  1869  05ED  0CF0               	rrf	___lmul@multiplier,f
  1870  05EE  0B89               	decfsz	9,f
  1871  05EF  2DEA               	goto	u305
  1872  05F0  0873               	movf	___lmul@multiplier+3,w
  1873  05F1  0472               	iorwf	___lmul@multiplier+2,w
  1874  05F2  0471               	iorwf	___lmul@multiplier+1,w
  1875  05F3  0470               	iorwf	___lmul@multiplier,w
  1876  05F4  1D03               	skipz
  1877  05F5  2DD8               	goto	l922
  1878  05F6  087B               	movf	___lmul@product+3,w
  1879  05F7  00F3               	movwf	?___lmul+3
  1880  05F8  087A               	movf	___lmul@product+2,w
  1881  05F9  00F2               	movwf	?___lmul+2
  1882  05FA  0879               	movf	___lmul@product+1,w
  1883  05FB  00F1               	movwf	?___lmul+1
  1884  05FC  0878               	movf	___lmul@product,w
  1885  05FD  00F0               	movwf	?___lmul
  1886  05FE  0008               	return
  1887  05FF                     __end_of___lmul:	
  1888                           
  1889                           	psect	text4
  1890  0687                     __ptext4:	
  1891 ;; *************** function ___awmod *****************
  1892 ;; Defined at:
  1893 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.32\sources\common\awmod.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  divisor         2    5[BANK0 ] int 
  1896 ;;  dividend        2    7[BANK0 ] int 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  sign            1   11[BANK0 ] unsigned char 
  1899 ;;  counter         1   10[BANK0 ] unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  2    5[BANK0 ] int 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1
  1909 ;;      Params:         0       4       0
  1910 ;;      Locals:         0       2       0
  1911 ;;      Temps:          0       1       0
  1912 ;;      Totals:         0       7       0
  1913 ;;Total ram usage:        7 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           
  1923                           ;psect for function ___awmod
  1924  0687                     ___awmod:	
  1925                           
  1926                           ;incstack = 0
  1927                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1928  0687  0020               	movlb	0	; select bank0
  1929  0688  01AB               	clrf	___awmod@sign
  1930  0689  1FA8               	btfss	___awmod@dividend+1,7
  1931  068A  2E92               	goto	l976
  1932  068B  09A7               	comf	___awmod@dividend,f
  1933  068C  09A8               	comf	___awmod@dividend+1,f
  1934  068D  0AA7               	incf	___awmod@dividend,f
  1935  068E  1903               	skipnz
  1936  068F  0AA8               	incf	___awmod@dividend+1,f
  1937  0690  01AB               	clrf	___awmod@sign
  1938  0691  0AAB               	incf	___awmod@sign,f
  1939  0692                     l976:	
  1940  0692  1FA6               	btfss	___awmod@divisor+1,7
  1941  0693  2E99               	goto	l980
  1942  0694  09A5               	comf	___awmod@divisor,f
  1943  0695  09A6               	comf	___awmod@divisor+1,f
  1944  0696  0AA5               	incf	___awmod@divisor,f
  1945  0697  1903               	skipnz
  1946  0698  0AA6               	incf	___awmod@divisor+1,f
  1947  0699                     l980:	
  1948  0699  0826               	movf	___awmod@divisor+1,w
  1949  069A  0425               	iorwf	___awmod@divisor,w
  1950  069B  1903               	skipnz
  1951  069C  2EC0               	goto	l998
  1952  069D  01AA               	clrf	___awmod@counter
  1953  069E  0AAA               	incf	___awmod@counter,f
  1954  069F                     l988:	
  1955  069F  1BA6               	btfsc	___awmod@divisor+1,7
  1956  06A0  2EAB               	goto	l990
  1957  06A1  3001               	movlw	1
  1958  06A2                     u415:	
  1959  06A2  35A5               	lslf	___awmod@divisor,f
  1960  06A3  0DA6               	rlf	___awmod@divisor+1,f
  1961  06A4  0B89               	decfsz	9,f
  1962  06A5  2EA2               	goto	u415
  1963  06A6  3001               	movlw	1
  1964  06A7  00A9               	movwf	??___awmod
  1965  06A8  0829               	movf	??___awmod,w
  1966  06A9  07AA               	addwf	___awmod@counter,f
  1967  06AA  2E9F               	goto	l988
  1968  06AB                     l990:	
  1969  06AB  0826               	movf	___awmod@divisor+1,w
  1970  06AC  0228               	subwf	___awmod@dividend+1,w
  1971  06AD  1D03               	skipz
  1972  06AE  2EB1               	goto	u435
  1973  06AF  0825               	movf	___awmod@divisor,w
  1974  06B0  0227               	subwf	___awmod@dividend,w
  1975  06B1                     u435:	
  1976  06B1  1C03               	skipc
  1977  06B2  2EB7               	goto	l994
  1978  06B3  0825               	movf	___awmod@divisor,w
  1979  06B4  02A7               	subwf	___awmod@dividend,f
  1980  06B5  0826               	movf	___awmod@divisor+1,w
  1981  06B6  3BA8               	subwfb	___awmod@dividend+1,f
  1982  06B7                     l994:	
  1983  06B7  3001               	movlw	1
  1984  06B8                     u445:	
  1985  06B8  36A6               	lsrf	___awmod@divisor+1,f
  1986  06B9  0CA5               	rrf	___awmod@divisor,f
  1987  06BA  0B89               	decfsz	9,f
  1988  06BB  2EB8               	goto	u445
  1989  06BC  3001               	movlw	1
  1990  06BD  02AA               	subwf	___awmod@counter,f
  1991  06BE  1D03               	btfss	3,2
  1992  06BF  2EAB               	goto	l990
  1993  06C0                     l998:	
  1994  06C0  082B               	movf	___awmod@sign,w
  1995  06C1  1903               	btfsc	3,2
  1996  06C2  2EC8               	goto	l1002
  1997  06C3  09A7               	comf	___awmod@dividend,f
  1998  06C4  09A8               	comf	___awmod@dividend+1,f
  1999  06C5  0AA7               	incf	___awmod@dividend,f
  2000  06C6  1903               	skipnz
  2001  06C7  0AA8               	incf	___awmod@dividend+1,f
  2002  06C8                     l1002:	
  2003  06C8  0828               	movf	___awmod@dividend+1,w
  2004  06C9  01A6               	clrf	?___awmod+1
  2005  06CA  07A6               	addwf	?___awmod+1,f
  2006  06CB  0827               	movf	___awmod@dividend,w
  2007  06CC  01A5               	clrf	?___awmod
  2008  06CD  07A5               	addwf	?___awmod,f
  2009  06CE  0008               	return
  2010  06CF                     __end_of___awmod:	
  2011                           
  2012                           	psect	text5
  2013  052A                     __ptext5:	
  2014 ;; *************** function _SYSTEM_Initialize *****************
  2015 ;; Defined at:
  2016 ;;		line 67 in file "mcc_generated_files/mcc.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;		None               void
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1
  2030 ;;      Params:         0       0       0
  2031 ;;      Locals:         0       0       0
  2032 ;;      Temps:          0       0       0
  2033 ;;      Totals:         0       0       0
  2034 ;;Total ram usage:        0 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    2
  2037 ;; This function calls:
  2038 ;;		_OSCILLATOR_Initialize
  2039 ;;		_PIN_MANAGER_Initialize
  2040 ;;		_PWM3_Initialize
  2041 ;;		_PWM4_Initialize
  2042 ;;		_TMR2_Initialize
  2043 ;; This function is called by:
  2044 ;;		_main
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           
  2049                           ;psect for function _SYSTEM_Initialize
  2050  052A                     _SYSTEM_Initialize:	
  2051                           
  2052                           ;mcc.c: 69: OSCILLATOR_Initialize();
  2053                           
  2054                           ;incstack = 0
  2055                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2056  052A  2525               	fcall	_OSCILLATOR_Initialize
  2057                           
  2058                           ;mcc.c: 70: PIN_MANAGER_Initialize();
  2059  052B  2552               	fcall	_PIN_MANAGER_Initialize
  2060                           
  2061                           ;mcc.c: 71: TMR2_Initialize();
  2062  052C  2540               	fcall	_TMR2_Initialize
  2063                           
  2064                           ;mcc.c: 72: PWM4_Initialize();
  2065  052D  2538               	fcall	_PWM4_Initialize
  2066                           
  2067                           ;mcc.c: 73: PWM3_Initialize();
  2068  052E  2530               	fcall	_PWM3_Initialize
  2069  052F  0008               	return
  2070  0530                     __end_of_SYSTEM_Initialize:	
  2071                           
  2072                           	psect	text6
  2073  0540                     __ptext6:	
  2074 ;; *************** function _TMR2_Initialize *****************
  2075 ;; Defined at:
  2076 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;		None               void
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0, pclath, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1
  2090 ;;      Params:         0       0       0
  2091 ;;      Locals:         0       0       0
  2092 ;;      Temps:          0       0       0
  2093 ;;      Totals:         0       0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    1
  2097 ;; This function calls:
  2098 ;;		_TMR2_StartTimer
  2099 ;; This function is called by:
  2100 ;;		_SYSTEM_Initialize
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           
  2105                           ;psect for function _TMR2_Initialize
  2106  0540                     _TMR2_Initialize:	
  2107                           
  2108                           ;tmr2.c: 63: T2CON = 0x00;
  2109                           
  2110                           ;incstack = 0
  2111                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2112  0540  0020               	movlb	0	; select bank0
  2113  0541  019C               	clrf	28	;volatile
  2114                           
  2115                           ;tmr2.c: 66: PR2 = 0xFF;
  2116  0542  30FF               	movlw	255
  2117  0543  009B               	movwf	27	;volatile
  2118                           
  2119                           ;tmr2.c: 69: TMR2 = 0x00;
  2120  0544  019A               	clrf	26	;volatile
  2121                           
  2122                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  2123  0545  1091               	bcf	17,1	;volatile
  2124                           
  2125                           ;tmr2.c: 75: TMR2_StartTimer();
  2126  0546  2522               	fcall	_TMR2_StartTimer
  2127  0547  0008               	return
  2128  0548                     __end_of_TMR2_Initialize:	
  2129                           
  2130                           	psect	text7
  2131  0522                     __ptext7:	
  2132 ;; *************** function _TMR2_StartTimer *****************
  2133 ;; Defined at:
  2134 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;		None               void
  2141 ;; Registers used:
  2142 ;;		None
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1
  2148 ;;      Params:         0       0       0
  2149 ;;      Locals:         0       0       0
  2150 ;;      Temps:          0       0       0
  2151 ;;      Totals:         0       0       0
  2152 ;;Total ram usage:        0 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_TMR2_Initialize
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           
  2162                           ;psect for function _TMR2_StartTimer
  2163  0522                     _TMR2_StartTimer:	
  2164                           
  2165                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  2166                           
  2167                           ;incstack = 0
  2168                           ; Regs used in _TMR2_StartTimer: []
  2169  0522  0020               	movlb	0	; select bank0
  2170  0523  151C               	bsf	28,2	;volatile
  2171  0524  0008               	return
  2172  0525                     __end_of_TMR2_StartTimer:	
  2173                           
  2174                           	psect	text8
  2175  0538                     __ptext8:	
  2176 ;; *************** function _PWM4_Initialize *****************
  2177 ;; Defined at:
  2178 ;;		line 64 in file "mcc_generated_files/pwm4.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;		None               void
  2185 ;; Registers used:
  2186 ;;		wreg
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1
  2192 ;;      Params:         0       0       0
  2193 ;;      Locals:         0       0       0
  2194 ;;      Temps:          0       0       0
  2195 ;;      Totals:         0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_SYSTEM_Initialize
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           
  2206                           ;psect for function _PWM4_Initialize
  2207  0538                     _PWM4_Initialize:	
  2208                           
  2209                           ;pwm4.c: 68: PWM4CON = 0xC0;
  2210                           
  2211                           ;incstack = 0
  2212                           ; Regs used in _PWM4_Initialize: [wreg]
  2213  0538  30C0               	movlw	192
  2214  0539  002C               	movlb	12	; select bank12
  2215  053A  009C               	movwf	28	;volatile
  2216                           
  2217                           ;pwm4.c: 71: PWM4DCH = 0x7F;
  2218  053B  307F               	movlw	127
  2219  053C  009B               	movwf	27	;volatile
  2220                           
  2221                           ;pwm4.c: 74: PWM4DCL = 0x30;
  2222  053D  3030               	movlw	48
  2223  053E  009A               	movwf	26	;volatile
  2224  053F  0008               	return
  2225  0540                     __end_of_PWM4_Initialize:	
  2226                           
  2227                           	psect	text9
  2228  0530                     __ptext9:	
  2229 ;; *************** function _PWM3_Initialize *****************
  2230 ;; Defined at:
  2231 ;;		line 64 in file "mcc_generated_files/pwm3.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;		None
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;		None               void
  2238 ;; Registers used:
  2239 ;;		wreg
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMMON   BANK0   BANK1
  2245 ;;      Params:         0       0       0
  2246 ;;      Locals:         0       0       0
  2247 ;;      Temps:          0       0       0
  2248 ;;      Totals:         0       0       0
  2249 ;;Total ram usage:        0 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_SYSTEM_Initialize
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function _PWM3_Initialize
  2260  0530                     _PWM3_Initialize:	
  2261                           
  2262                           ;pwm3.c: 68: PWM3CON = 0xC0;
  2263                           
  2264                           ;incstack = 0
  2265                           ; Regs used in _PWM3_Initialize: [wreg]
  2266  0530  30C0               	movlw	192
  2267  0531  002C               	movlb	12	; select bank12
  2268  0532  0099               	movwf	25	;volatile
  2269                           
  2270                           ;pwm3.c: 71: PWM3DCH = 0x7F;
  2271  0533  307F               	movlw	127
  2272  0534  0098               	movwf	24	;volatile
  2273                           
  2274                           ;pwm3.c: 74: PWM3DCL = 0x30;
  2275  0535  3030               	movlw	48
  2276  0536  0097               	movwf	23	;volatile
  2277  0537  0008               	return
  2278  0538                     __end_of_PWM3_Initialize:	
  2279                           
  2280                           	psect	text10
  2281  0552                     __ptext10:	
  2282 ;; *************** function _PIN_MANAGER_Initialize *****************
  2283 ;; Defined at:
  2284 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		wreg, status,2
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1
  2298 ;;      Params:         0       0       0
  2299 ;;      Locals:         0       0       0
  2300 ;;      Temps:          0       0       0
  2301 ;;      Totals:         0       0       0
  2302 ;;Total ram usage:        0 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_SYSTEM_Initialize
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _PIN_MANAGER_Initialize
  2313  0552                     _PIN_MANAGER_Initialize:	
  2314                           
  2315                           ;pin_manager.c: 52: LATA = 0x00;
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2319  0552  0022               	movlb	2	; select bank2
  2320  0553  018C               	clrf	12	;volatile
  2321                           
  2322                           ;pin_manager.c: 53: TRISA = 0x3B;
  2323  0554  303B               	movlw	59
  2324  0555  0021               	movlb	1	; select bank1
  2325  0556  008C               	movwf	12	;volatile
  2326                           
  2327                           ;pin_manager.c: 54: ANSELA = 0x13;
  2328  0557  3013               	movlw	19
  2329  0558  0023               	movlb	3	; select bank3
  2330  0559  008C               	movwf	12	;volatile
  2331                           
  2332                           ;pin_manager.c: 55: WPUA = 0x00;
  2333  055A  0024               	movlb	4	; select bank4
  2334  055B  018C               	clrf	12	;volatile
  2335                           
  2336                           ;pin_manager.c: 57: LATC = 0x00;
  2337  055C  0022               	movlb	2	; select bank2
  2338  055D  018E               	clrf	14	;volatile
  2339                           
  2340                           ;pin_manager.c: 58: TRISC = 0x3D;
  2341  055E  303D               	movlw	61
  2342  055F  0021               	movlb	1	; select bank1
  2343  0560  008E               	movwf	14	;volatile
  2344                           
  2345                           ;pin_manager.c: 59: ANSELC = 0x0D;
  2346  0561  300D               	movlw	13
  2347  0562  0023               	movlb	3	; select bank3
  2348  0563  008E               	movwf	14	;volatile
  2349                           
  2350                           ;pin_manager.c: 61: OPTION_REGbits.nWPUEN = 0x01;
  2351  0564  0021               	movlb	1	; select bank1
  2352  0565  1795               	bsf	21,7	;volatile
  2353                           
  2354                           ;pin_manager.c: 63: APFCON = 0x00;
  2355  0566  0022               	movlb	2	; select bank2
  2356  0567  019D               	clrf	29	;volatile
  2357  0568  0008               	return
  2358  0569                     __end_of_PIN_MANAGER_Initialize:	
  2359                           
  2360                           	psect	text11
  2361  0525                     __ptext11:	
  2362 ;; *************** function _OSCILLATOR_Initialize *****************
  2363 ;; Defined at:
  2364 ;;		line 77 in file "mcc_generated_files/mcc.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;		None               void
  2371 ;; Registers used:
  2372 ;;		wreg, status,2
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1
  2378 ;;      Params:         0       0       0
  2379 ;;      Locals:         0       0       0
  2380 ;;      Temps:          0       0       0
  2381 ;;      Totals:         0       0       0
  2382 ;;Total ram usage:        0 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_SYSTEM_Initialize
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           
  2392                           ;psect for function _OSCILLATOR_Initialize
  2393  0525                     _OSCILLATOR_Initialize:	
  2394                           
  2395                           ;mcc.c: 80: OSCCON = 0x7A;
  2396                           
  2397                           ;incstack = 0
  2398                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2399  0525  307A               	movlw	122
  2400  0526  0021               	movlb	1	; select bank1
  2401  0527  0099               	movwf	25	;volatile
  2402                           
  2403                           ;mcc.c: 82: OSCSTAT = 0x00;
  2404  0528  019A               	clrf	26	;volatile
  2405  0529  0008               	return
  2406  052A                     __end_of_OSCILLATOR_Initialize:	
  2407                           
  2408                           	psect	text12
  2409  0581                     __ptext12:	
  2410 ;; *************** function _PWM4_LoadDutyValue *****************
  2411 ;; Defined at:
  2412 ;;		line 78 in file "mcc_generated_files/pwm4.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  dutyValue       2    0[COMMON] unsigned int 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;		None               void
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1
  2426 ;;      Params:         2       0       0
  2427 ;;      Locals:         0       0       0
  2428 ;;      Temps:          2       0       0
  2429 ;;      Totals:         4       0       0
  2430 ;;Total ram usage:        4 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_main
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _PWM4_LoadDutyValue
  2441  0581                     _PWM4_LoadDutyValue:	
  2442                           
  2443                           ;pwm4.c: 81: PWM4DCH = ((dutyValue & 0x03FC)>>2);
  2444                           
  2445                           ;incstack = 0
  2446                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
  2447  0581  0871               	movf	PWM4_LoadDutyValue@dutyValue+1,w
  2448  0582  00F3               	movwf	??_PWM4_LoadDutyValue+1
  2449  0583  0870               	movf	PWM4_LoadDutyValue@dutyValue,w
  2450  0584  00F2               	movwf	??_PWM4_LoadDutyValue
  2451  0585  36F3               	lsrf	??_PWM4_LoadDutyValue+1,f
  2452  0586  0CF2               	rrf	??_PWM4_LoadDutyValue,f
  2453  0587  36F3               	lsrf	??_PWM4_LoadDutyValue+1,f
  2454  0588  0CF2               	rrf	??_PWM4_LoadDutyValue,f
  2455  0589  0872               	movf	??_PWM4_LoadDutyValue,w
  2456  058A  002C               	movlb	12	; select bank12
  2457  058B  009B               	movwf	27	;volatile
  2458                           
  2459                           ;pwm4.c: 84: PWM4DCL |= ((dutyValue & 0x0003)<<6);
  2460  058C  0870               	movf	PWM4_LoadDutyValue@dutyValue,w
  2461  058D  3903               	andlw	3
  2462  058E  00F2               	movwf	??_PWM4_LoadDutyValue
  2463  058F  3005               	movlw	5
  2464  0590                     u335:	
  2465  0590  35F2               	lslf	??_PWM4_LoadDutyValue,f
  2466  0591  3EFF               	addlw	-1
  2467  0592  1D03               	skipz
  2468  0593  2D90               	goto	u335
  2469  0594  3572               	lslf	??_PWM4_LoadDutyValue,w
  2470  0595  00F3               	movwf	??_PWM4_LoadDutyValue+1
  2471  0596  0873               	movf	??_PWM4_LoadDutyValue+1,w
  2472  0597  049A               	iorwf	26,f	;volatile
  2473  0598  0008               	return
  2474  0599                     __end_of_PWM4_LoadDutyValue:	
  2475                           
  2476                           	psect	text13
  2477  0569                     __ptext13:	
  2478 ;; *************** function _PWM3_LoadDutyValue *****************
  2479 ;; Defined at:
  2480 ;;		line 78 in file "mcc_generated_files/pwm3.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  dutyValue       2    0[COMMON] unsigned int 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;		None               void
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1
  2494 ;;      Params:         2       0       0
  2495 ;;      Locals:         0       0       0
  2496 ;;      Temps:          2       0       0
  2497 ;;      Totals:         4       0       0
  2498 ;;Total ram usage:        4 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_main
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           
  2508                           ;psect for function _PWM3_LoadDutyValue
  2509  0569                     _PWM3_LoadDutyValue:	
  2510                           
  2511                           ;pwm3.c: 81: PWM3DCH = ((dutyValue & 0x03FC)>>2);
  2512                           
  2513                           ;incstack = 0
  2514                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  2515  0569  0871               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  2516  056A  00F3               	movwf	??_PWM3_LoadDutyValue+1
  2517  056B  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  2518  056C  00F2               	movwf	??_PWM3_LoadDutyValue
  2519  056D  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  2520  056E  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  2521  056F  36F3               	lsrf	??_PWM3_LoadDutyValue+1,f
  2522  0570  0CF2               	rrf	??_PWM3_LoadDutyValue,f
  2523  0571  0872               	movf	??_PWM3_LoadDutyValue,w
  2524  0572  002C               	movlb	12	; select bank12
  2525  0573  0098               	movwf	24	;volatile
  2526                           
  2527                           ;pwm3.c: 84: PWM3DCL |= ((dutyValue & 0x0003)<<6);
  2528  0574  0870               	movf	PWM3_LoadDutyValue@dutyValue,w
  2529  0575  3903               	andlw	3
  2530  0576  00F2               	movwf	??_PWM3_LoadDutyValue
  2531  0577  3005               	movlw	5
  2532  0578                     u325:	
  2533  0578  35F2               	lslf	??_PWM3_LoadDutyValue,f
  2534  0579  3EFF               	addlw	-1
  2535  057A  1D03               	skipz
  2536  057B  2D78               	goto	u325
  2537  057C  3572               	lslf	??_PWM3_LoadDutyValue,w
  2538  057D  00F3               	movwf	??_PWM3_LoadDutyValue+1
  2539  057E  0873               	movf	??_PWM3_LoadDutyValue+1,w
  2540  057F  0497               	iorwf	23,f	;volatile
  2541  0580  0008               	return
  2542  0581                     __end_of_PWM3_LoadDutyValue:	
  2543                           
  2544                           	psect	text14
  2545  05FF                     __ptext14:	
  2546 ;; *************** function _FLASH_WriteWord *****************
  2547 ;; Defined at:
  2548 ;;		line 75 in file "mcc_generated_files/memory.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  flashAddr       2    0[BANK0 ] unsigned int 
  2551 ;;  ramBuf          1    2[BANK0 ] PTR unsigned int 
  2552 ;;		 -> main@Rbuf(64), 
  2553 ;;  word            2    3[BANK0 ] unsigned int 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  blockStartAd    2    6[BANK0 ] unsigned int 
  2556 ;;  i               1    8[BANK0 ] unsigned char 
  2557 ;;  offset          1    5[BANK0 ] unsigned char 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;		None               void
  2560 ;; Registers used:
  2561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMMON   BANK0   BANK1
  2567 ;;      Params:         0       5       0
  2568 ;;      Locals:         0       4       0
  2569 ;;      Temps:          1       0       0
  2570 ;;      Totals:         1       9       0
  2571 ;;Total ram usage:       10 bytes
  2572 ;; Hardware stack levels used:    1
  2573 ;; Hardware stack levels required when called:    2
  2574 ;; This function calls:
  2575 ;;		_FLASH_ReadWord
  2576 ;;		_FLASH_WriteBlock
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function _FLASH_WriteWord
  2584  05FF                     _FLASH_WriteWord:	
  2585                           
  2586                           ;memory.c: 77: uint16_t blockStartAddr = (uint16_t)(flashAddr & ((2048-1) ^ (16-1)));
  2587                           
  2588                           ;incstack = 0
  2589                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2590  05FF  30F0               	movlw	240
  2591  0600  0020               	movlb	0	; select bank0
  2592  0601  0520               	andwf	FLASH_WriteWord@flashAddr,w
  2593  0602  00A6               	movwf	FLASH_WriteWord@blockStartAddr
  2594  0603  3007               	movlw	7
  2595  0604  0521               	andwf	FLASH_WriteWord@flashAddr+1,w
  2596  0605  00A7               	movwf	FLASH_WriteWord@blockStartAddr+1
  2597                           
  2598                           ;memory.c: 78: uint8_t offset = (uint8_t)(flashAddr & (16-1));
  2599  0606  0820               	movf	FLASH_WriteWord@flashAddr,w
  2600  0607  390F               	andlw	15
  2601  0608  00FD               	movwf	??_FLASH_WriteWord
  2602  0609  087D               	movf	??_FLASH_WriteWord,w
  2603  060A  00A5               	movwf	FLASH_WriteWord@offset
  2604                           
  2605                           ;memory.c: 79: uint8_t i;
  2606                           ;memory.c: 82: for (i=0; i<16; i++)
  2607  060B  01A8               	clrf	FLASH_WriteWord@i
  2608  060C  3010               	movlw	16
  2609  060D  0228               	subwf	FLASH_WriteWord@i,w
  2610  060E  1803               	btfsc	3,0
  2611  060F  2E2B               	goto	l956
  2612  0610                     l950:	
  2613                           
  2614                           ;memory.c: 83: {
  2615                           ;memory.c: 84: ramBuf[i] = FLASH_ReadWord((blockStartAddr+i));
  2616  0610  0828               	movf	FLASH_WriteWord@i,w
  2617  0611  0726               	addwf	FLASH_WriteWord@blockStartAddr,w
  2618  0612  00F0               	movwf	FLASH_ReadWord@flashAddr
  2619  0613  0827               	movf	FLASH_WriteWord@blockStartAddr+1,w
  2620  0614  1803               	skipnc
  2621  0615  0A27               	incf	FLASH_WriteWord@blockStartAddr+1,w
  2622  0616  00F1               	movwf	FLASH_ReadWord@flashAddr+1
  2623  0617  2599               	fcall	_FLASH_ReadWord
  2624  0618  0020               	movlb	0	; select bank0
  2625  0619  3528               	lslf	FLASH_WriteWord@i,w
  2626  061A  0722               	addwf	FLASH_WriteWord@ramBuf,w
  2627  061B  00FD               	movwf	??_FLASH_WriteWord
  2628  061C  087D               	movf	??_FLASH_WriteWord,w
  2629  061D  0086               	movwf	6
  2630  061E  0187               	clrf	7
  2631  061F  0870               	movf	?_FLASH_ReadWord,w
  2632  0620  3FC0               	movwi [0]fsr1
  2633  0621  0871               	movf	?_FLASH_ReadWord+1,w
  2634  0622  3FC1               	movwi [1]fsr1
  2635  0623  3001               	movlw	1
  2636  0624  00FD               	movwf	??_FLASH_WriteWord
  2637  0625  087D               	movf	??_FLASH_WriteWord,w
  2638  0626  07A8               	addwf	FLASH_WriteWord@i,f
  2639  0627  3010               	movlw	16
  2640  0628  0228               	subwf	FLASH_WriteWord@i,w
  2641  0629  1C03               	skipc
  2642  062A  2E10               	goto	l950
  2643  062B                     l956:	
  2644                           
  2645                           ;memory.c: 85: }
  2646                           ;memory.c: 88: ramBuf[offset] = word;
  2647  062B  3525               	lslf	FLASH_WriteWord@offset,w
  2648  062C  0722               	addwf	FLASH_WriteWord@ramBuf,w
  2649  062D  00FD               	movwf	??_FLASH_WriteWord
  2650  062E  087D               	movf	??_FLASH_WriteWord,w
  2651  062F  0086               	movwf	6
  2652  0630  0187               	clrf	7
  2653  0631  0823               	movf	FLASH_WriteWord@word,w
  2654  0632  3FC0               	movwi [0]fsr1
  2655  0633  0824               	movf	FLASH_WriteWord@word+1,w
  2656  0634  3FC1               	movwi [1]fsr1
  2657                           
  2658                           ;memory.c: 91: FLASH_WriteBlock(blockStartAddr, ramBuf);
  2659  0635  0827               	movf	FLASH_WriteWord@blockStartAddr+1,w
  2660  0636  01F4               	clrf	FLASH_WriteBlock@writeAddr+1
  2661  0637  07F4               	addwf	FLASH_WriteBlock@writeAddr+1,f
  2662  0638  0826               	movf	FLASH_WriteWord@blockStartAddr,w
  2663  0639  01F3               	clrf	FLASH_WriteBlock@writeAddr
  2664  063A  07F3               	addwf	FLASH_WriteBlock@writeAddr,f
  2665  063B  0822               	movf	FLASH_WriteWord@ramBuf,w
  2666  063C  00FD               	movwf	??_FLASH_WriteWord
  2667  063D  087D               	movf	??_FLASH_WriteWord,w
  2668  063E  00F5               	movwf	FLASH_WriteBlock@flashWordArray
  2669  063F  26CF               	fcall	_FLASH_WriteBlock
  2670  0640  0008               	return
  2671  0641                     __end_of_FLASH_WriteWord:	
  2672                           
  2673                           	psect	text15
  2674  06CF                     __ptext15:	
  2675 ;; *************** function _FLASH_WriteBlock *****************
  2676 ;; Defined at:
  2677 ;;		line 94 in file "mcc_generated_files/memory.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  writeAddr       2    3[COMMON] unsigned int 
  2680 ;;  flashWordArr    1    5[COMMON] PTR unsigned int 
  2681 ;;		 -> main@Rbuf(64), 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  blockStartAd    2    9[COMMON] unsigned int 
  2684 ;;  i               1   12[COMMON] unsigned char 
  2685 ;;  GIEBitValue     1   11[COMMON] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      char 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1
  2695 ;;      Params:         3       0       0
  2696 ;;      Locals:         4       0       0
  2697 ;;      Temps:          3       0       0
  2698 ;;      Totals:        10       0       0
  2699 ;;Total ram usage:       10 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    1
  2702 ;; This function calls:
  2703 ;;		_FLASH_EraseBlock
  2704 ;; This function is called by:
  2705 ;;		_FLASH_WriteWord
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           
  2710                           ;psect for function _FLASH_WriteBlock
  2711  06CF                     _FLASH_WriteBlock:	
  2712                           
  2713                           ;memory.c: 96: uint16_t blockStartAddr = (uint16_t )(writeAddr & ((2048-1) ^ (16-1)));
  2714                           
  2715                           ;incstack = 0
  2716                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2717  06CF  30F0               	movlw	240
  2718  06D0  0573               	andwf	FLASH_WriteBlock@writeAddr,w
  2719  06D1  00F9               	movwf	FLASH_WriteBlock@blockStartAddr
  2720  06D2  3007               	movlw	7
  2721  06D3  0574               	andwf	FLASH_WriteBlock@writeAddr+1,w
  2722  06D4  00FA               	movwf	FLASH_WriteBlock@blockStartAddr+1
  2723                           
  2724                           ;memory.c: 97: uint8_t GIEBitValue = INTCONbits.GIE;
  2725  06D5  3000               	movlw	0
  2726  06D6  1B8B               	btfsc	11,7	;volatile
  2727  06D7  3001               	movlw	1
  2728  06D8  00FB               	movwf	FLASH_WriteBlock@GIEBitValue
  2729                           
  2730                           ;memory.c: 98: uint8_t i;
  2731                           ;memory.c: 101: if( writeAddr != blockStartAddr )
  2732  06D9  087A               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  2733  06DA  0674               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  2734  06DB  1D03               	skipz
  2735  06DC  2EDF               	goto	u245
  2736  06DD  0879               	movf	FLASH_WriteBlock@blockStartAddr,w
  2737  06DE  0673               	xorwf	FLASH_WriteBlock@writeAddr,w
  2738  06DF                     u245:	
  2739  06DF  1D03               	btfss	3,2
  2740  06E0  0008               	return
  2741                           
  2742                           ;memory.c: 104: }
  2743                           ;memory.c: 106: INTCONbits.GIE = 0;
  2744                           
  2745                           ;memory.c: 102: {
  2746                           ;memory.c: 103: return -1;
  2747                           ;	Return value of _FLASH_WriteBlock is never used
  2748  06E1  138B               	bcf	11,7	;volatile
  2749                           
  2750                           ;memory.c: 109: FLASH_EraseBlock(writeAddr);
  2751  06E2  0874               	movf	FLASH_WriteBlock@writeAddr+1,w
  2752  06E3  01F1               	clrf	FLASH_EraseBlock@startAddr+1
  2753  06E4  07F1               	addwf	FLASH_EraseBlock@startAddr+1,f
  2754  06E5  0873               	movf	FLASH_WriteBlock@writeAddr,w
  2755  06E6  01F0               	clrf	FLASH_EraseBlock@startAddr
  2756  06E7  07F0               	addwf	FLASH_EraseBlock@startAddr,f
  2757  06E8  25B4               	fcall	_FLASH_EraseBlock
  2758                           
  2759                           ;memory.c: 112: PMCON1bits.CFGS = 0;
  2760  06E9  0023               	movlb	3	; select bank3
  2761  06EA  1315               	bcf	21,6	;volatile
  2762                           
  2763                           ;memory.c: 113: PMCON1bits.WREN = 1;
  2764  06EB  1515               	bsf	21,2	;volatile
  2765                           
  2766                           ;memory.c: 114: PMCON1bits.LWLO = 1;
  2767  06EC  1695               	bsf	21,5	;volatile
  2768                           
  2769                           ;memory.c: 116: for (i=0; i<16; i++)
  2770  06ED  01FC               	clrf	FLASH_WriteBlock@i
  2771  06EE  3010               	movlw	16
  2772  06EF  027C               	subwf	FLASH_WriteBlock@i,w
  2773  06F0  1803               	btfsc	3,0
  2774  06F1  2F22               	goto	l91
  2775  06F2                     l876:	
  2776                           
  2777                           ;memory.c: 117: {
  2778                           ;memory.c: 119: PMADRL = (writeAddr & 0xFF);
  2779  06F2  0873               	movf	FLASH_WriteBlock@writeAddr,w
  2780  06F3  0023               	movlb	3	; select bank3
  2781  06F4  0091               	movwf	17	;volatile
  2782                           
  2783                           ;memory.c: 121: PMADRH = ((writeAddr & 0xFF00) >> 8);
  2784  06F5  0874               	movf	FLASH_WriteBlock@writeAddr+1,w
  2785  06F6  0092               	movwf	18	;volatile
  2786                           
  2787                           ;memory.c: 124: PMDATL = flashWordArray[i];
  2788  06F7  357C               	lslf	FLASH_WriteBlock@i,w
  2789  06F8  0775               	addwf	FLASH_WriteBlock@flashWordArray,w
  2790  06F9  00F6               	movwf	??_FLASH_WriteBlock
  2791  06FA  0876               	movf	??_FLASH_WriteBlock,w
  2792  06FB  0086               	movwf	6
  2793  06FC  0187               	clrf	7
  2794  06FD  0801               	movf	1,w
  2795  06FE  0093               	movwf	19	;volatile
  2796                           
  2797                           ;memory.c: 125: PMDATH = ((flashWordArray[i] & 0xFF00) >> 8);
  2798  06FF  357C               	lslf	FLASH_WriteBlock@i,w
  2799  0700  0775               	addwf	FLASH_WriteBlock@flashWordArray,w
  2800  0701  00F6               	movwf	??_FLASH_WriteBlock
  2801  0702  0876               	movf	??_FLASH_WriteBlock,w
  2802  0703  0086               	movwf	6
  2803  0704  0187               	clrf	7
  2804  0705  3F40               	moviw [0]fsr1
  2805  0706  00F7               	movwf	??_FLASH_WriteBlock+1
  2806  0707  3F41               	moviw [1]fsr1
  2807  0708  00F8               	movwf	??_FLASH_WriteBlock+2
  2808  0709  0878               	movf	??_FLASH_WriteBlock+2,w
  2809  070A  0094               	movwf	20	;volatile
  2810                           
  2811                           ;memory.c: 127: if(i == (16-1))
  2812  070B  087C               	movf	FLASH_WriteBlock@i,w
  2813  070C  3A0F               	xorlw	15
  2814  070D  1903               	btfsc	3,2
  2815                           
  2816                           ;memory.c: 128: {
  2817                           ;memory.c: 130: PMCON1bits.LWLO = 0;
  2818  070E  1295               	bcf	21,5	;volatile
  2819                           
  2820                           ;memory.c: 131: }
  2821                           ;memory.c: 133: PMCON2 = 0x55;
  2822  070F  3055               	movlw	85
  2823  0710  0096               	movwf	22	;volatile
  2824                           
  2825                           ;memory.c: 134: PMCON2 = 0xAA;
  2826  0711  30AA               	movlw	170
  2827  0712  0096               	movwf	22	;volatile
  2828                           
  2829                           ;memory.c: 135: PMCON1bits.WR = 1;
  2830  0713  1495               	bsf	21,1	;volatile
  2831                           
  2832                           ;memory.c: 136: __nop();
  2833  0714  0000               	nop
  2834                           
  2835                           ;memory.c: 137: __nop();
  2836  0715  0000               	nop
  2837                           
  2838                           ;memory.c: 139: writeAddr++;
  2839  0716  3001               	movlw	1
  2840  0717  07F3               	addwf	FLASH_WriteBlock@writeAddr,f
  2841  0718  3000               	movlw	0
  2842  0719  3DF4               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  2843  071A  3001               	movlw	1
  2844  071B  00F6               	movwf	??_FLASH_WriteBlock
  2845  071C  0876               	movf	??_FLASH_WriteBlock,w
  2846  071D  07FC               	addwf	FLASH_WriteBlock@i,f
  2847  071E  3010               	movlw	16
  2848  071F  027C               	subwf	FLASH_WriteBlock@i,w
  2849  0720  1C03               	skipc
  2850  0721  2EF2               	goto	l876
  2851  0722                     l91:	
  2852                           
  2853                           ;memory.c: 140: }
  2854                           ;memory.c: 142: PMCON1bits.WREN = 0;
  2855  0722  0023               	movlb	3	; select bank3
  2856  0723  1115               	bcf	21,2	;volatile
  2857                           
  2858                           ;memory.c: 143: INTCONbits.GIE = GIEBitValue;
  2859  0724  087B               	movf	FLASH_WriteBlock@GIEBitValue,w
  2860  0725  1D03               	skipz
  2861  0726  178B               	bsf	11,7	;volatile
  2862  0727  1903               	skipnz
  2863  0728  138B               	bcf	11,7	;volatile
  2864  0729  0008               	return
  2865  072A                     __end_of_FLASH_WriteBlock:	
  2866                           ;memory.c: 145: return 0;
  2867                           ;	Return value of _FLASH_WriteBlock is never used
  2868                           
  2869                           
  2870                           	psect	text16
  2871  05B4                     __ptext16:	
  2872 ;; *************** function _FLASH_EraseBlock *****************
  2873 ;; Defined at:
  2874 ;;		line 148 in file "mcc_generated_files/memory.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  startAddr       2    0[COMMON] unsigned int 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  GIEBitValue     1    2[COMMON] unsigned char 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;		None               void
  2881 ;; Registers used:
  2882 ;;		wreg, status,2
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMMON   BANK0   BANK1
  2888 ;;      Params:         2       0       0
  2889 ;;      Locals:         1       0       0
  2890 ;;      Temps:          0       0       0
  2891 ;;      Totals:         3       0       0
  2892 ;;Total ram usage:        3 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_FLASH_WriteBlock
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           
  2902                           ;psect for function _FLASH_EraseBlock
  2903  05B4                     _FLASH_EraseBlock:	
  2904                           
  2905                           ;memory.c: 150: uint8_t GIEBitValue = INTCONbits.GIE;
  2906                           
  2907                           ;incstack = 0
  2908                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2]
  2909  05B4  3000               	movlw	0
  2910  05B5  1B8B               	btfsc	11,7	;volatile
  2911  05B6  3001               	movlw	1
  2912  05B7  00F2               	movwf	FLASH_EraseBlock@GIEBitValue
  2913                           
  2914                           ;memory.c: 153: INTCONbits.GIE = 0;
  2915  05B8  138B               	bcf	11,7	;volatile
  2916                           
  2917                           ;memory.c: 155: PMADRL = (startAddr & 0xFF);
  2918  05B9  0870               	movf	FLASH_EraseBlock@startAddr,w
  2919  05BA  0023               	movlb	3	; select bank3
  2920  05BB  0091               	movwf	17	;volatile
  2921                           
  2922                           ;memory.c: 157: PMADRH = ((startAddr & 0xFF00) >> 8);
  2923  05BC  0871               	movf	FLASH_EraseBlock@startAddr+1,w
  2924  05BD  0092               	movwf	18	;volatile
  2925                           
  2926                           ;memory.c: 160: PMCON1bits.CFGS = 0;
  2927  05BE  1315               	bcf	21,6	;volatile
  2928                           
  2929                           ;memory.c: 161: PMCON1bits.FREE = 1;
  2930  05BF  1615               	bsf	21,4	;volatile
  2931                           
  2932                           ;memory.c: 162: PMCON1bits.WREN = 1;
  2933  05C0  1515               	bsf	21,2	;volatile
  2934                           
  2935                           ;memory.c: 165: PMCON2 = 0x55;
  2936  05C1  3055               	movlw	85
  2937  05C2  0096               	movwf	22	;volatile
  2938                           
  2939                           ;memory.c: 166: PMCON2 = 0xAA;
  2940  05C3  30AA               	movlw	170
  2941  05C4  0096               	movwf	22	;volatile
  2942                           
  2943                           ;memory.c: 167: PMCON1bits.WR = 1;
  2944  05C5  1495               	bsf	21,1	;volatile
  2945                           
  2946                           ;memory.c: 168: __nop();
  2947  05C6  0000               	nop
  2948                           
  2949                           ;memory.c: 169: __nop();
  2950  05C7  0000               	nop
  2951                           
  2952                           ;memory.c: 171: PMCON1bits.WREN = 0;
  2953  05C8  0023               	movlb	3	; select bank3
  2954  05C9  1115               	bcf	21,2	;volatile
  2955                           
  2956                           ;memory.c: 172: INTCONbits.GIE = GIEBitValue;
  2957  05CA  0872               	movf	FLASH_EraseBlock@GIEBitValue,w
  2958  05CB  1D03               	skipz
  2959  05CC  178B               	bsf	11,7	;volatile
  2960  05CD  1903               	skipnz
  2961  05CE  138B               	bcf	11,7	;volatile
  2962  05CF  0008               	return
  2963  05D0                     __end_of_FLASH_EraseBlock:	
  2964                           
  2965                           	psect	text17
  2966  0599                     __ptext17:	
  2967 ;; *************** function _FLASH_ReadWord *****************
  2968 ;; Defined at:
  2969 ;;		line 58 in file "mcc_generated_files/memory.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  flashAddr       2    0[COMMON] unsigned int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  GIEBitValue     1    2[COMMON] unsigned char 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  2    0[COMMON] unsigned int 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1
  2983 ;;      Params:         2       0       0
  2984 ;;      Locals:         1       0       0
  2985 ;;      Temps:          0       0       0
  2986 ;;      Totals:         3       0       0
  2987 ;;Total ram usage:        3 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_FLASH_WriteWord
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _FLASH_ReadWord
  2999  0599                     _FLASH_ReadWord:	
  3000                           
  3001                           ;memory.c: 60: uint8_t GIEBitValue = INTCONbits.GIE;
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  3005  0599  3000               	movlw	0
  3006  059A  1B8B               	btfsc	11,7	;volatile
  3007  059B  3001               	movlw	1
  3008  059C  00F2               	movwf	FLASH_ReadWord@GIEBitValue
  3009                           
  3010                           ;memory.c: 62: INTCONbits.GIE = 0;
  3011  059D  138B               	bcf	11,7	;volatile
  3012                           
  3013                           ;memory.c: 63: PMADRL = (flashAddr & 0x00FF);
  3014  059E  0870               	movf	FLASH_ReadWord@flashAddr,w
  3015  059F  0023               	movlb	3	; select bank3
  3016  05A0  0091               	movwf	17	;volatile
  3017                           
  3018                           ;memory.c: 64: PMADRH = ((flashAddr & 0xFF00) >> 8);
  3019  05A1  0871               	movf	FLASH_ReadWord@flashAddr+1,w
  3020  05A2  0092               	movwf	18	;volatile
  3021                           
  3022                           ;memory.c: 66: PMCON1bits.CFGS = 0;
  3023  05A3  1315               	bcf	21,6	;volatile
  3024                           
  3025                           ;memory.c: 67: PMCON1bits.RD = 1;
  3026  05A4  1415               	bsf	21,0	;volatile
  3027                           
  3028                           ;memory.c: 68: __nop();
  3029  05A5  0000               	nop
  3030                           
  3031                           ;memory.c: 69: __nop();
  3032  05A6  0000               	nop
  3033                           
  3034                           ;memory.c: 70: INTCONbits.GIE = GIEBitValue;
  3035  05A7  0872               	movf	FLASH_ReadWord@GIEBitValue,w
  3036  05A8  1D03               	skipz
  3037  05A9  178B               	bsf	11,7	;volatile
  3038  05AA  1903               	skipnz
  3039  05AB  138B               	bcf	11,7	;volatile
  3040                           
  3041                           ;memory.c: 72: return ((PMDATH << 8) | PMDATL);
  3042  05AC  0023               	movlb	3	; select bank3
  3043  05AD  0814               	movf	20,w	;volatile
  3044  05AE  01F1               	clrf	?_FLASH_ReadWord+1
  3045  05AF  07F1               	addwf	?_FLASH_ReadWord+1,f
  3046  05B0  0813               	movf	19,w	;volatile
  3047  05B1  01F0               	clrf	?_FLASH_ReadWord
  3048  05B2  07F0               	addwf	?_FLASH_ReadWord,f
  3049  05B3  0008               	return
  3050  05B4                     __end_of_FLASH_ReadWord:	
  3051  007E                     btemp	set	126	;btemp
  3052  007E                     pic14e$flags	set	126
  3053  007E                     wtemp	set	126
  3054  007E                     wtemp0	set	126
  3055  0080                     wtemp1	set	128
  3056  0082                     wtemp2	set	130
  3057  0084                     wtemp3	set	132
  3058  0086                     wtemp4	set	134
  3059  0088                     wtemp5	set	136
  3060  007F                     wtemp6	set	127
  3061  007E                     ttemp	set	126
  3062  007E                     ttemp0	set	126
  3063  0081                     ttemp1	set	129
  3064  0084                     ttemp2	set	132
  3065  0087                     ttemp3	set	135
  3066  007F                     ttemp4	set	127
  3067  007E                     ltemp	set	126
  3068  007E                     ltemp0	set	126
  3069  0082                     ltemp1	set	130
  3070  0086                     ltemp2	set	134
  3071  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            32      8      13

Pointer List with Targets:

    main@pRbuf	PTR unsigned int  size(1) Largest target is 64
		 -> main@Rbuf(BANK0[64]), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned int  size(1) Largest target is 64
		 -> main@Rbuf(BANK0[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned int  size(1) Largest target is 64
		 -> main@Rbuf(BANK0[64]), 


Critical Paths under _main in COMMON

    _main->_FLASH_WriteWord
    _main->_rand
    _rand->___lmul
    ___awmod->_rand
    _FLASH_WriteWord->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock

Critical Paths under _main in BANK0

    _main->___awmod
    ___awmod->_rand

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0    3267
                                             12 BANK0     68    68      0
                                              0 BANK1      8     8      0
                     _FLASH_ReadWord
                    _FLASH_WriteWord
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                  _SYSTEM_Initialize
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     306
                                             12 COMMON     2     0      2
                                              0 BANK0      5     5      0
                             ___lmul
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      86
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     220
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     552
                                              5 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM4_LoadDutyValue                                   4     2      2     172
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     172
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _FLASH_WriteWord                                     10     5      5    1505
                                             13 COMMON     1     1      0
                                              0 BANK0      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    10     7      3     572
                                              3 COMMON    10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     3     1      2     131
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadWord                                       3     1      2     259
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_ReadWord
   _FLASH_WriteWord
     _FLASH_ReadWord
     _FLASH_WriteBlock
       _FLASH_EraseBlock
   _PWM3_LoadDutyValue
   _PWM4_LoadDutyValue
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   ___awmod
     _rand (ARG)
       ___lmul
       _srand
   _rand
     ___lmul
     _srand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      8       D       8       40.6%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      6B       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Jan 03 11:21:01 2015

                    __CFG_CP$OFF 0000                               l91 0722                              l153 0778  
                            l521 064A                              l922 05D8                              l950 0610  
                            l926 05E2                              l876 06F2                              l956 062B  
                            l980 0699                              l990 06AB                              l976 0692  
                            l994 06B7                              l988 069F                              l998 06C0  
                            u305 05EA                              u245 06DF                              u325 0578  
                            _PR2 001B                              u335 0590                              u415 06A2  
                            u435 06B1                              u445 06B8                              u295 05E3  
                            u375 067A                              u477 0771                              u487 07F0  
                   ___awmod@sign 002B                  _TMR2_Initialize 0540                  _PWM4_Initialize 0538  
                   __CFG_BORV$LO 0000                              wreg 0009                 ?_FLASH_WriteWord 0020  
 FLASH_WriteBlock@flashWordArray 0075                     __CFG_LVP$OFF 0000                             l1002 06C8  
                           _LATA 010C                             _LATC 010E                             _TMR2 001A  
                           _WPUA 020C                     __CFG_WRT$OFF 0000                             _main 072A  
                           _rand 0641                             fsr1h 0007                             indf1 0001  
                           fsr1l 0006                             btemp 007E                ?_FLASH_WriteBlock 0073  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0001  
                           ttemp 007E                             wtemp 007E               ??_FLASH_WriteBlock 0076  
                  __CFG_MCLRE$ON 0000   __size_of_OSCILLATOR_Initialize 0005    __end_of_OSCILLATOR_Initialize 052A  
                          ?_main 0070                            ?_rand 007C                    __CFG_WDTE$OFF 0000  
                __end_of___awmod 06CF                            _T2CON 001C               _PWM4_LoadDutyValue 0581  
                          _TRISA 008C                            _TRISC 008E              ___lmul@multiplicand 0074  
                          _randf 00AC                            _randx 00A8              ?_PWM4_LoadDutyValue 0070  
                          _srand 0548          __end_of_PWM3_Initialize 0538                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                  _TMR2_StartTimer 0522                  __initialization 07F7  
                  main@faddrPWM3 00A0                    main@faddrPWM4 00A2                     __end_of_main 07F7  
                   __end_of_rand 0687             ??_PWM4_LoadDutyValue 0072          __end_of_PWM4_Initialize 0540  
        __end_of_TMR2_Initialize 0548                   __CFG_LPBOR$OFF 0000                           ??_main 002C  
                         ??_rand 0020          __size_of_FLASH_ReadWord 001B        FLASH_WriteBlock@writeAddr 0073  
                         _APFCON 011D                           ?_srand 0070                           _ANSELA 018C  
                         _ANSELC 018E                           _PMADRH 0192                           _PMADRL 0191  
                         _PMDATH 0194                           _PMDATL 0193                           _PMCON2 0196  
      __size_of_FLASH_EraseBlock 001C                           _OSCCON 0099                   __CFG_PWRTE$OFF 0000  
                         ___lmul 05D0      __size_of_PWM3_LoadDutyValue 0018    FLASH_WriteWord@blockStartAddr 0026  
                 __CFG_STVREN$ON 0000                        ??___awmod 0029              FLASH_WriteWord@word 0023  
                ___awmod@divisor 0025                  ___awmod@counter 002A          FLASH_ReadWord@flashAddr 0070  
                         srand@x 0070          __end_of_TMR2_StartTimer 0525                 ?_PWM3_Initialize 0070  
              _SYSTEM_Initialize 052A          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070  
                 __pcstackCOMMON 0070              ??_SYSTEM_Initialize 0070                 FLASH_WriteWord@i 0028  
                  __end_of_srand 0552                 ?_TMR2_Initialize 0070                 ?_PWM4_Initialize 0070  
    PWM4_LoadDutyValue@dutyValue 0070                   _OPTION_REGbits 0095      FLASH_WriteBlock@GIEBitValue 007B  
      __end_of_SYSTEM_Initialize 0530                          ??_srand 0072                       __pbssBANK1 00A8  
                     __pmaintext 072A                          ?___lmul 0070                   ___lmul@product 0078  
      __size_of_FLASH_WriteBlock 005B                   _FLASH_ReadWord 0599                          _OSCSTAT 009A  
                        _PWM3DCH 0618                          _PWM3DCL 0617                          _PWM4DCH 061B  
                        _PWM4DCL 061A                          _PWM3CON 0619                          _PWM4CON 061C  
               ?_TMR2_StartTimer 0070                 _FLASH_EraseBlock 05B4         __size_of_FLASH_WriteWord 0042  
                __size_of___lmul 002F                          ___awmod 0687           __end_of_FLASH_ReadWord 05B4  
                        __ptext0 0000                          __ptext1 0641                          __ptext2 0548  
                        __ptext3 05D0                          __ptext4 0687                          __ptext5 052A  
                        __ptext6 0540                          __ptext7 0522                          __ptext8 0538  
                        __ptext9 0530            _OSCILLATOR_Initialize 0525                        _T2CONbits 001C  
               ___awmod@dividend 0027         ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 0006  
           end_of_initialization 07FD      __size_of_PWM4_LoadDutyValue 0018        FLASH_ReadWord@GIEBitValue 0072  
                ?_FLASH_ReadWord 0070                 __CFG_FOSC$INTOSC 0000       __end_of_PWM3_LoadDutyValue 0581  
              FLASH_WriteBlock@i 007C                ??_FLASH_WriteWord 007D                   __end_of___lmul 05FF  
               _FLASH_WriteBlock 06CF           ?_OSCILLATOR_Initialize 0070              start_initialization 07F7  
__size_of_PIN_MANAGER_Initialize 0017         __size_of_PWM3_Initialize 0008                         ??___lmul 0078  
    FLASH_EraseBlock@GIEBitValue 0072         __end_of_FLASH_EraseBlock 05D0                        ___latbits 0000  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0         __size_of_PWM4_Initialize 0008  
       __size_of_TMR2_Initialize 0008           _PIN_MANAGER_Initialize 0552                         ?___awmod 0025  
                 __size_of_srand 000A         FLASH_WriteWord@flashAddr 0020   FLASH_WriteBlock@blockStartAddr 0079  
       __size_of_TMR2_StartTimer 0003                         _PIR1bits 0011        FLASH_EraseBlock@startAddr 0070  
               ??_FLASH_ReadWord 0072                ??_PWM3_Initialize 0070                        main@pRbuf 006F  
                main@dutyCycleP3 00A4                  main@dutyCycleP4 00A6                ___lmul@multiplier 0070  
                _FLASH_WriteWord 05FF                ??_TMR2_Initialize 0070                ??_PWM4_Initialize 0070  
       __end_of_FLASH_WriteBlock 072A       __end_of_PWM4_LoadDutyValue 0599          ??_OSCILLATOR_Initialize 0070  
               __size_of___awmod 0048               _PWM3_LoadDutyValue 0569                         __ptext10 0552  
                       __ptext11 0525                         __ptext12 0581                         __ptext13 0569  
                       __ptext14 05FF                         __ptext15 06CF                         __ptext16 05B4  
                       __ptext17 0599              ?_PWM3_LoadDutyValue 0070            FLASH_WriteWord@ramBuf 0022  
          FLASH_WriteWord@offset 0025                    __size_of_main 00CD                    __size_of_rand 0046  
           ??_PWM3_LoadDutyValue 0072                         main@Rbuf 002F                ??_TMR2_StartTimer 0070  
              ?_FLASH_EraseBlock 0070               ??_FLASH_EraseBlock 0072                       _INTCONbits 000B  
        __end_of_FLASH_WriteWord 0641                      pic14e$flags 007E                       _PMCON1bits 0195  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000      PWM3_LoadDutyValue@dutyValue 0070  
 __end_of_PIN_MANAGER_Initialize 0569                  _PWM3_Initialize 0530  
